/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSTConcurrentCellMap : TSPObject <NSCopying, TSTCellMapChangeDescriptorDelivering> {
    bool  _applyingToTable;
    struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { 
        struct UUIDData<TSP::UUIDData> {} *__begin_; 
        struct UUIDData<TSP::UUIDData> {} *__end_; 
        struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { 
            struct UUIDData<TSP::UUIDData> {} *__value_; 
        } __end_cap_; 
    }  _cachedColumnUIDs;
    struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { 
        struct UUIDData<TSP::UUIDData> {} *__begin_; 
        struct UUIDData<TSP::UUIDData> {} *__end_; 
        struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { 
            struct UUIDData<TSP::UUIDData> {} *__value_; 
        } __end_cap_; 
    }  _cachedRowUIDs;
    NSMutableArray * _cellLists;
    NSMutableArray * _inverseMergeActions;
    bool  _mayModifyFormulasInCells;
    bool  _mayModifyValuesReferencedByFormulas;
    NSMutableArray * _mergeActions;
    bool  _uidBased;
}

@property (nonatomic) bool applyingToTable;
@property (nonatomic) /* Warning: unhandled struct encoding: '{vector<TSU::UUIDData<TSP::UUIDData>' */ struct  cachedColumnUIDs; /* unknown property attribute:  std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >=^{UUIDData<TSP::UUIDData>}}} */
@property (nonatomic) /* Warning: unhandled struct encoding: '{vector<TSU::UUIDData<TSP::UUIDData>' */ struct  cachedRowUIDs; /* unknown property attribute:  std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >=^{UUIDData<TSP::UUIDData>}}} */
@property (nonatomic, retain) NSMutableArray *cellLists;
@property (nonatomic, retain) NSMutableArray *inverseMergeActions;
@property (nonatomic) bool mayModifyFormulasInCells;
@property (nonatomic) bool mayModifyValuesReferencedByFormulas;
@property (nonatomic, retain) NSMutableArray *mergeActions;
@property (getter=isUIDBased, nonatomic) bool uidBased;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)accumulateCurrentCellsConcurrentlyUsingBlock:(id /* block */)arg1;
- (void)addMergeAction:(id)arg1;
- (void)addMergeActions:(id)arg1;
- (id)affectedBaseColumnAndRowIndexes;
- (void)appendCellList:(id)arg1;
- (void)appendCellLists:(id)arg1;
- (bool)applyingToTable;
- (struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; })cachedColumnUIDs;
- (struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; })cachedRowUIDs;
- (id)cellLists;
- (struct vector<TSU::UUIDRect<TSP::UUIDRect>, std::__1::allocator<TSU::UUIDRect<TSP::UUIDRect> > > { struct UUIDRect<TSP::UUIDRect> {} *x1; struct UUIDRect<TSP::UUIDRect> {} *x2; struct __compressed_pair<TSU::UUIDRect<TSP::UUIDRect> *, std::__1::allocator<TSU::UUIDRect<TSP::UUIDRect> > > { struct UUIDRect<TSP::UUIDRect> {} *x_3_1_1; } x3; })cellUIDRanges;
- (id)changeDescriptorsForTable:(id)arg1;
- (void)clearDataListIDs;
- (void)clearMerges;
- (const struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; }*)columnUIDs;
- (bool)containsCellBorderChanges;
- (bool)containsCellChanges;
- (bool)containsMergeChanges;
- (void)convertToInverseCellMap;
- (void)convertToUuidBasedCellMapUsingTableInfo:(id)arg1 pruneCategorizedCells:(bool)arg2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)enumerateCellsAddedAndRemovedOfType:(long long)arg1 withOptions:(unsigned long long)arg2 usingBlock:(id /* block */)arg3;
- (void)enumerateColumnCellCountDiffUsingBlock:(id /* block */)arg1;
- (void)enumerateCustomFormatsBeingAddedUsingReplacementBlock:(id /* block */)arg1;
- (void)enumerateRowCellCountDiffUsingBlock:(id /* block */)arg1;
- (void)enumerateRowsOfCellsConcurrentlyUsingBlock:(id /* block */)arg1;
- (void)enumerateSeriallyUsingBlock:(id /* block */)arg1;
- (void)gatherRowState:(id /* block */)arg1;
- (bool)hasCells;
- (bool)hasMultipleCells;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 uidBased:(bool)arg2;
- (id)inverseMergeActions;
- (bool)isUIDBased;
- (void)loadFromUnarchiver:(id)arg1;
- (bool)mayModifyFormulasInCells;
- (bool)mayModifyValuesReferencedByFormulas;
- (id)mergeActions;
- (void)p_cacheRowColumnUIDs;
- (void)p_enumerateCellsAddedAndRemovedForFormatsWithOptions:(unsigned long long)arg1 usingBlock:(id /* block */)arg2;
- (void)p_enumerateNewAndOldCellsSeriallyUsingBlock:(id /* block */)arg1;
- (void)p_enumerateNewAndOldCellsSeriallyUsingPreBNCBlock:(id /* block */)arg1;
- (void)pushInverseMergeAction:(id)arg1;
- (const struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; }*)rowUIDs;
- (void)saveToArchiver:(id)arg1;
- (void)setApplyingToTable:(bool)arg1;
- (void)setCachedColumnUIDs:(struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; })arg1;
- (void)setCachedRowUIDs:(struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; })arg1;
- (void)setCellLists:(id)arg1;
- (void)setInverseMergeActions:(id)arg1;
- (void)setMayModifyFormulasInCells:(bool)arg1;
- (void)setMayModifyValuesReferencedByFormulas:(bool)arg1;
- (void)setMergeActions:(id)arg1;
- (void)setUidBased:(bool)arg1;
- (void)updateDataListsConcurrentlyUsingCommentStorageBlock:(id /* block */)arg1 conditionalStyleSetBlock:(id /* block */)arg2 controlCellSpecBlock:(id /* block */)arg3 formulaBlock:(id /* block */)arg4 formulaErrorBlock:(id /* block */)arg5 importWarningSetBlock:(id /* block */)arg6 richTextBlock:(id /* block */)arg7 stringBlock:(id /* block */)arg8 styleBlock:(id /* block */)arg9 customFormatBlock:(id /* block */)arg10 formatBlock:(id /* block */)arg11 preBNCBlock:(id /* block */)arg12;
- (struct vector<TSUViewCellRect, std::__1::allocator<TSUViewCellRect> > { struct TSUViewCellRect {} *x1; struct TSUViewCellRect {} *x2; struct __compressed_pair<TSUViewCellRect *, std::__1::allocator<TSUViewCellRect> > { struct TSUViewCellRect {} *x_3_1_1; } x3; })viewCellRects;
- (void)willApplyToTable:(id)arg1;

@end
