/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSKPencilOverlayRenderingDetails : NSObject {
    TSPData * _dataToInvalidateFromAfterDownload;
    unsigned long long  _pageIndex;
    <TSKPencilAnnotationStorage> * _pencilAnnotationStorage;
    TSUImage * _scaledImage;
    TSKPKDrawing * _subDrawing;
    TSUBezierPath * _transformedPath;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _unscaledImageClipRect;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _unscaledImageFrame;
    TSKPencilOverlayAnchorSelectionRectangle * _unscaledSelectionRectangle;
}

@property (nonatomic, retain) TSPData *dataToInvalidateFromAfterDownload;
@property (nonatomic) unsigned long long pageIndex;
@property (nonatomic, retain) <TSKPencilAnnotationStorage> *pencilAnnotationStorage;
@property (nonatomic, retain) TSUImage *scaledImage;
@property (nonatomic, retain) TSKPKDrawing *subDrawing;
@property (nonatomic, retain) TSUBezierPath *transformedPath;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } unscaledImageClipRect;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } unscaledImageFrame;
@property (nonatomic, retain) TSKPencilOverlayAnchorSelectionRectangle *unscaledSelectionRectangle;

+ (struct CGColor { }*)fillColorForPenColor:(id)arg1;
+ (id)p_baseColorForPenColor:(id)arg1;
+ (struct CGColor { }*)strokeColorForPenColor:(id)arg1 attachedType:(long long)arg2;

- (void).cxx_destruct;
- (bool)containsPointForHitTesting:(struct CGPoint { double x1; double x2; })arg1;
- (id)dataToInvalidateFromAfterDownload;
- (id)description;
- (id)initWithPencilAnnotation:(id)arg1;
- (unsigned long long)pageIndex;
- (id)pencilAnnotationStorage;
- (id)scaledImage;
- (void)setDataToInvalidateFromAfterDownload:(id)arg1;
- (void)setPageIndex:(unsigned long long)arg1;
- (void)setPencilAnnotationStorage:(id)arg1;
- (void)setScaledImage:(id)arg1;
- (void)setSubDrawing:(id)arg1;
- (void)setTransformedPath:(id)arg1;
- (void)setUnscaledImageClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setUnscaledImageFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setUnscaledSelectionRectangle:(id)arg1;
- (id)subDrawing;
- (id)transformedPath;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })unscaledImageClipRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })unscaledImageFrame;
- (id)unscaledSelectionRectangle;

@end
