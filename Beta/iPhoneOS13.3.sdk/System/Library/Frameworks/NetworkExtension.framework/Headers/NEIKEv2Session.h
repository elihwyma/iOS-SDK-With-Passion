/*
 Image: /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension
 */

#import <Foundation/NSObject.h>

@class NEIKEv2ChildSA, NEIKEv2ChildSAConfiguration, NEIKEv2ConfigurationMessage, NEIKEv2IKESA, NEIKEv2IKESAConfiguration, NEIKEv2Packet, NEIKEv2RTT, NEIPSecSASession, NSMutableArray, NSMutableDictionary, NSString;

@protocol NEIKEv2ConfigurationDelegate, NEIKEv2PacketDelegate, OS_dispatch_queue, OS_dispatch_source;

@interface NEIKEv2Session : NSObject

{
    _Bool _isListening;
    _Bool _ownsDatabaseSession;
    _Bool _ownsIPSecInterface;
    _Bool _isAborted;
    _Bool _isInvalidated;
    _Bool _isExpectingConfigBlock;
    _Bool _hasContactedConfigurationDelegate;
    unsigned short _initiatorFragmentCount;
    unsigned short _responderFragmentCount;
    int _lastRequestMessageID;
    int _lastReceivedMessageID;
    int _previousMOBIKEMessageID;
    NSObject<OS_dispatch_queue> *_clientQueue;
    unsigned long long _state;
    NEIKEv2ConfigurationMessage *_assignedConfiguration;
    CDUnknownFunctionPointerType _clientCallback;
    void *_clientCallbackInfo;
    CDUnknownBlockType _stateUpdateBlock;
    CDUnknownBlockType _childStateUpdateBlock;
    CDUnknownBlockType _configurationUpdateBlock;
    CDUnknownBlockType _trafficSelectorUpdateBlock;
    CDUnknownBlockType _additionalAddressesUpdateBlock;
    CDUnknownBlockType _shortDPDEventBlock;
    CDUnknownBlockType _redirectEventBlock;
    CDUnknownBlockType _privateNotifyStatusEvent;
    CDUnknownBlockType _ikeSocketHandler;
    NEIKEv2ChildSAConfiguration *_listenChildSAUserConfig;
    NEIPSecSASession *_databaseSession;
    NSMutableDictionary *_databaseLarvalSAs;
    NSMutableDictionary *_databaseSAs;
    CDUnknownBlockType _lastRequestReplyHandler;
    CDUnknownBlockType _waitingRequestHandler;
    NSMutableDictionary *_sentRequests;
    NSMutableDictionary *_sentReplies;
    NSMutableDictionary *_receivedRequests;
    NSMutableDictionary *_receivedReplies;
    NSMutableDictionary *_receivedInitiatorFragments;
    NSMutableDictionary *_receivedResponderFragments;
    NSObject<OS_dispatch_source> *_ikeLifetimeTimer;
    NSObject<OS_dispatch_source> *_dpdTimer;
    NSMutableArray *_childSAs;
    NSObject<OS_dispatch_source> *_sendTimer;
    NSObject<OS_dispatch_source> *_receiveTimer;
    unsigned long long _uniqueIndex;
    NSMutableArray *_pendingInformationalContexts;
    struct NEVirtualInterface_s *_ipsecInterface;
    NEIKEv2IKESA *_ikeSA;
    id <NEIKEv2ConfigurationDelegate> _configurationDelegate;
    id <NEIKEv2PacketDelegate> _packetDelegate;
    NEIKEv2RTT *_rttState;
    NSObject<OS_dispatch_queue> *_queue;
    NEIKEv2Packet *_previousMOBIKERequest;
    NEIKEv2IKESAConfiguration *_ikeConfig;
}

@property unsigned long long state;
@property (copy) CDUnknownBlockType ikeSocketHandler;
@property _Bool isListening;
@property (retain) NEIKEv2ChildSAConfiguration *listenChildSAUserConfig;
@property (retain) NEIPSecSASession *databaseSession;
@property (nonatomic) _Bool ownsDatabaseSession;
@property (retain) NSMutableDictionary *databaseLarvalSAs;
@property (retain) NSMutableDictionary *databaseSAs;
@property _Bool ownsIPSecInterface;
@property int lastRequestMessageID;
@property (copy) CDUnknownBlockType lastRequestReplyHandler;
@property (copy) CDUnknownBlockType waitingRequestHandler;
@property (retain) NSMutableDictionary *sentRequests;
@property (retain) NSMutableDictionary *sentReplies;
@property (retain) NSMutableDictionary *receivedRequests;
@property (retain) NSMutableDictionary *receivedReplies;
@property (retain) NSMutableDictionary *receivedInitiatorFragments;
@property (retain) NSMutableDictionary *receivedResponderFragments;
@property unsigned short initiatorFragmentCount;
@property unsigned short responderFragmentCount;
@property int lastReceivedMessageID;
@property (retain) NSObject<OS_dispatch_source> *ikeLifetimeTimer;
@property (retain) NSObject<OS_dispatch_source> *dpdTimer;
@property (retain) NSMutableArray *childSAs;
@property (retain) NSObject<OS_dispatch_source> *sendTimer;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *receiveTimer;
@property (retain) NEIKEv2ConfigurationMessage *assignedConfiguration;
@property (nonatomic) unsigned long long uniqueIndex;
@property (retain, nonatomic) NSMutableArray *pendingInformationalContexts;
@property struct NEVirtualInterface_s *ipsecInterface;
@property (readonly) NSString *interfaceName;
@property (readonly) unsigned int interfaceIndex;
@property (readonly) _Bool hasInterface;
@property (retain) NEIKEv2IKESA *ikeSA;
@property (readonly) NEIKEv2ChildSA *firstChildSA;
@property (weak) id <NEIKEv2ConfigurationDelegate> configurationDelegate;
@property (weak) id <NEIKEv2PacketDelegate> packetDelegate;
@property (retain) NEIKEv2RTT *rttState;
@property _Bool isAborted;
@property _Bool isInvalidated;
@property (nonatomic) _Bool isExpectingConfigBlock;
@property (nonatomic) _Bool hasContactedConfigurationDelegate;
@property (retain) NSObject<OS_dispatch_queue> *queue;
@property int previousMOBIKEMessageID;
@property (retain) NEIKEv2Packet *previousMOBIKERequest;
@property (retain, nonatomic) NEIKEv2IKESAConfiguration *ikeConfig;
@property (nonatomic, readonly) _Bool hasOutboundRequestInFlight;
@property (retain) NSObject<OS_dispatch_queue> *clientQueue;
@property CDUnknownFunctionPointerType clientCallback;
@property void *clientCallbackInfo;
@property (copy) CDUnknownBlockType stateUpdateBlock;
@property (copy) CDUnknownBlockType childStateUpdateBlock;
@property (copy) CDUnknownBlockType configurationUpdateBlock;
@property (copy) CDUnknownBlockType trafficSelectorUpdateBlock;
@property (copy) CDUnknownBlockType additionalAddressesUpdateBlock;
@property (copy) CDUnknownBlockType shortDPDEventBlock;
@property (copy) CDUnknownBlockType redirectEventBlock;
@property (copy) CDUnknownBlockType privateNotifyStatusEvent;
@property (readonly) _Bool peerAuthenticated;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;

+ (unsigned int)getNewChildSAID;

- (void)dealloc;
- (void)invalidate;
- (unsigned int)addChild:(id)arg1;
- (void)disconnect;
- (void)abort;
- (_Bool)updateConfiguration:(id)arg1;
- (void)connect;
- (void)removeChild:(unsigned int)arg1;
- (void)reportPrivateNotifies:(id)arg1;
- (void)reportServerAdditionalAddresses:(id)arg1;
- (int)sendRequest:(id)arg1 retry:(_Bool)arg2 sendCompletionHandler:(CDUnknownBlockType)arg3 replyHandler:(CDUnknownBlockType)arg4;
- (void)reportState;
- (void)resetAll;
- (int)sendRequest:(id)arg1 retry:(_Bool)arg2 replyHandler:(CDUnknownBlockType)arg3;
- (_Bool)sendReply:(id)arg1 replyHandler:(CDUnknownBlockType)arg2;
- (void)initiatePrivateNotifies:(id)arg1 maxRetries:(unsigned int)arg2 retryIntervalInMilliseconds:(unsigned long long)arg3 callbackQueue:(id)arg4 callback:(CDUnknownBlockType)arg5;
- (void)enqueuePendingInformationalContext:(id)arg1;
- (void)initiateInformational:(id)arg1;
- (_Bool)skipKeepaliveMessage:(id)arg1;
- (void)initiateMOBIKEWithRetries:(unsigned int)arg1 retryInterval:(unsigned long long)arg2 invalidateTransport:(_Bool)arg3 callbackQueue:(id)arg4 callback:(CDUnknownBlockType)arg5;
- (int)sendRequest:(id)arg1 isKeepalive:(_Bool)arg2 retryIntervalInMilliseconds:(unsigned long long)arg3 maxRetries:(unsigned int)arg4 timeoutError:(id)arg5 resend:(_Bool)arg6 sendMessageID:(int)arg7 sendCompletionHandler:(CDUnknownBlockType)arg8 replyHandler:(CDUnknownBlockType)arg9;
- (void)reportShortDPD;
- (void)reportPrivateNotifiesInPacket:(id)arg1;
- (void)resetMessages;
- (void)reportServerRedirect:(id)arg1;
- (void)handleEAPIKESA:(id)arg1 childSA:(id)arg2 authPacket:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (_Bool)generateSPIForChild:(id)arg1 proposals:(id)arg2;
- (void)reportAdditionalAddressesInPacket:(id)arg1;
- (_Bool)initiateDelete:(CDUnknownBlockType)arg1 sendCompletionHandler:(CDUnknownBlockType)arg2;
- (void)finishConfigurationEstablishment;
- (void)reportConfiguration;
- (_Bool)installChildSA:(id)arg1;
- (_Bool)migrateAllChildSAs;
- (void)reportTrafficSelectorsForChildSA:(id)arg1;
- (void)retryDHForIKESA:(id)arg1 validated:(_Bool)arg2 handler:(CDUnknownBlockType)arg3;
- (void)retryCookieForIKESA:(id)arg1 validated:(_Bool)arg2 handler:(CDUnknownBlockType)arg3;
- (void)addFirstChild:(id)arg1;
- (id)setupReceivedChildCopyError;
- (void)setupReceivedChildWithHandler:(CDUnknownBlockType)arg1;
- (void)resetChild:(id)arg1;
- (_Bool)initiateDeleteChildSPI:(id)arg1 remoteSPI:(id)arg2;
- (id)copySAsToDeleteAndInstallRekeyedChildSA:(id)arg1;
- (void)uninstallOldRekeyedChildSAs:(id)arg1;
- (void)setIKESA:(id)arg1;
- (void)setSentMOBIKERequest:(id)arg1 messageID:(int)arg2;
- (void)resendPreviousMOBIKEInnerWithRetries:(unsigned int)arg1 retryInterval:(unsigned long long)arg2 callbackQueue:(id)arg3 callback:(CDUnknownBlockType)arg4 handler:(CDUnknownBlockType)arg5;
- (void)initiateMOBIKEInnerWithRetries:(unsigned int)arg1 retryInterval:(unsigned long long)arg2 callbackQueue:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (_Bool)innerReceiveDeleteIKESA:(id)arg1;
- (_Bool)receiveDeleteChildSPI:(id)arg1 remoteSPI:(id)arg2 packet:(id)arg3;
- (void)uninstallChildSA:(id)arg1;
- (void)initiateKeepaliveWithRetries:(unsigned int)arg1 retryIntervalInMilliseconds:(unsigned long long)arg2 callbackQueue:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (void)receiveInformational:(id)arg1;
- (void)initiateNotify:(unsigned long long)arg1 data:(id)arg2;
- (void)initiateConnect;
- (void)receiveConnection:(id)arg1;
- (void)initiateNewChildSA:(id)arg1;
- (void)receiveNewChildSA:(id)arg1 packet:(id)arg2;
- (void)initiateRekeyChildSA:(id)arg1;
- (void)receiveRekeyChildSA:(id)arg1 packet:(id)arg2;
- (void)initiateRekeyIKESA;
- (void)receiveRekeyIKESA:(id)arg1;
- (void)receiveMOBIKE:(id)arg1;
- (void)receiveRedirect:(id)arg1;
- (void)receiveDeleteIKESA:(id)arg1;
- (void)receiveDeleteChildSA:(id)arg1 packet:(id)arg2;
- (void)initiateDeleteChildSA:(id)arg1;
- (void)initiateDelete:(_Bool)arg1 replyCompleteBlock:(CDUnknownBlockType)arg2;
- (void)initiateDelete:(_Bool)arg1 sendCompleteBlock:(CDUnknownBlockType)arg2;
- (id)initWithIKEConfig:(id)arg1 configurationDelegate:(id)arg2 queue:(id)arg3 saSession:(id)arg4 shouldCopySASession:(_Bool)arg5 transport:(id)arg6 packetDelegate:(id)arg7;
- (id)initWithIKEConfig:(id)arg1 configurationDelegate:(id)arg2 queue:(id)arg3 kernelSASessionName:(id)arg4 transport:(id)arg5 packetDelegate:(id)arg6;
- (void)receivePacket:(id)arg1;
- (void)reportError:(int)arg1;
- (void)sendKeepaliveWithRetries:(unsigned int)arg1 retryIntervalInMilliseconds:(unsigned long long)arg2 callbackQueue:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (id)initWithIKEConfig:(id)arg1 firstChildConfig:(id)arg2 sessionConfig:(id)arg3 queue:(id)arg4 ipsecInterface:(struct NEVirtualInterface_s *)arg5 ikeSocketHandler:(CDUnknownBlockType)arg6 saSession:(id)arg7 packetDelegate:(id)arg8;
- (void)forceRekeyIKE;
- (void)forceRekeyChild:(unsigned int)arg1;
- (void)sendMOBIKEWithRetries:(unsigned int)arg1 retryInterval:(unsigned long long)arg2 interfaceName:(id)arg3 invalidateTransport:(_Bool)arg4 resetEndpoint:(id)arg5 callbackQueue:(id)arg6 callback:(CDUnknownBlockType)arg7;
- (void)uninstallAllChildSAs;
- (id)initWithIKEConfig:(id)arg1 firstChildConfig:(id)arg2 sessionConfig:(id)arg3 queue:(id)arg4 ipsecInterface:(struct NEVirtualInterface_s *)arg5 ikeSocketHandler:(CDUnknownBlockType)arg6 saSession:(id)arg7 shouldOwnSASession:(_Bool)arg8 packetDelegate:(id)arg9 transport:(id)arg10 configurationDelegate:(id)arg11;
- (id)copyChildWithID:(unsigned int)arg1;
- (void)startDPDTimer;
- (void)cancelDPDTimer;
- (void)startIKELifetimeTimer;
- (void)cancelSendTimer;
- (_Bool)fireWaitingRequestHandlerWithPacket:(id)arg1;
- (id)copyIPsecInterfaceWithMissingAllowed:(_Bool)arg1;
- (void)addEmptyInterface;
- (id)copySAFromDictionary:(id)arg1 forSPI:(id)arg2;
- (id)copyIPsecInterface;
- (_Bool)migrateChildSA:(id)arg1;
- (void)setSentRequest:(id)arg1;
- (_Bool)sendCurrentRequest:(CDUnknownBlockType)arg1;
- (void)setSentReply:(id)arg1 messageID:(int)arg2;
- (_Bool)sendReplyForMessageID:(int)arg1;
- (void)saveFragment:(id)arg1;
- (void)setReceivedReply:(id)arg1 messageID:(int)arg2;
- (void)sendPendingInformationalContext;
- (void)setReceivedRequest:(id)arg1 messageID:(int)arg2;
- (id)copyChildWithSPI:(id)arg1;
- (id)copySAFromDictionary:(id)arg1 forChild:(id)arg2;
- (void)unestablishConfiguration;
- (void)expireSA:(id)arg1;
- (void)deleteSA:(id)arg1;
- (void)idleTimeoutSA:(id)arg1;
- (void)blackholeDetectedSA:(id)arg1;
- (id)initWithIKEConfig:(id)arg1 firstChildConfig:(id)arg2 sessionConfig:(id)arg3 queue:(id)arg4 ipsecInterface:(struct NEVirtualInterface_s *)arg5 ikeSocketHandler:(CDUnknownBlockType)arg6 kernelSASessionName:(id)arg7 packetDelegate:(id)arg8;
- (void)sendPrivateNotifies:(id)arg1 maxRetries:(unsigned int)arg2 retryIntervalInMilliseconds:(unsigned long long)arg3 callbackQueue:(id)arg4 callback:(CDUnknownBlockType)arg5;
- (id)copyReceivedRequestForMessageID:(int)arg1;
- (id)copyReceivedReplyForMessageID:(int)arg1;
- (void)reportCustomPayload:(id)arg1;

@end
