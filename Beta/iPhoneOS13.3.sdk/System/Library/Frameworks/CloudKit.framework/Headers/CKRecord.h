/*
 Image: /System/Library/Frameworks/CloudKit.framework/CloudKit
 */

#import <NSObject.h>

@class CKContainerID, CKEncryptedData, CKEncryptedRecordValueStore, CKRecordID, CKRecordValueStore, CKReference, NSArray, NSData, NSDate, NSDictionary, NSSet, NSString, NSURL;

@protocol CKRecordKeyValueSetting;

@interface CKRecord : NSObject

{
    _Bool _hasUpdatedShare;
    _Bool _hasUpdatedParent;
    _Bool _trackChanges;
    _Bool _knownToServer;
    _Bool _wasCached;
    _Bool _serializeProtectionData;
    _Bool _wantsPublicSharingKey;
    _Bool _wantsChainPCS;
    _Bool _useLightweightPCS;
    NSString *_recordType;
    CKRecordID *_recordID;
    CKRecordID *_creatorUserRecordID;
    NSDate *_creationDate;
    CKRecordID *_lastModifiedUserRecordID;
    NSDate *_modificationDate;
    CKReference *_share;
    CKReference *_parent;
    CKContainerID *_containerID;
    CKReference *_previousShare;
    CKReference *_previousParent;
    CKEncryptedData *_chainPrivateKey;
    CKEncryptedData *_mutableEncryptedPSK;
    NSData *_chainProtectionInfo;
    NSData *_chainParentPublicKeyID;
    NSArray *_tombstonedPublicKeyIDs;
    NSURL *_mutableURL;
    CKRecordValueStore *_valueStore;
    CKEncryptedRecordValueStore *_encryptedValueStore;
    NSString *_modifiedByDevice;
    NSString *_etag;
    NSArray *_conflictLoserEtags;
    NSData *_zoneishKeyID;
    NSData *_protectionData;
    NSString *_previousProtectionEtag;
    NSString *_protectionEtag;
    NSString *_zoneProtectionEtag;
    NSString *_shareEtag;
    NSString *_routingKey;
    NSString *_baseToken;
    NSString *_displayedHostname;
    long long _permission;
    NSDictionary *_pluginFields;
    NSString *_previousProtectionEtagFromUnitTest;
    NSData *_pcsKeyID;
}

@property (copy, nonatomic) CKContainerID *containerID;
@property (copy, nonatomic) CKReference *share;
@property (retain, nonatomic) CKReference *previousShare;
@property (nonatomic) _Bool hasUpdatedShare;
@property (retain, nonatomic) CKReference *previousParent;
@property (nonatomic) _Bool hasUpdatedParent;
@property (retain, nonatomic) CKEncryptedData *chainPrivateKey;
@property (retain, nonatomic) CKEncryptedData *mutableEncryptedPSK;
@property (retain, nonatomic) NSData *chainProtectionInfo;
@property (retain, nonatomic) NSData *chainParentPublicKeyID;
@property (retain, nonatomic) NSArray *tombstonedPublicKeyIDs;
@property (nonatomic, readonly) NSString *privateToken;
@property (copy, nonatomic) NSURL *mutableURL;
@property (nonatomic, readonly) unsigned long long assetCount;
@property (nonatomic, readonly) unsigned long long assetDiskSize;
@property (copy, nonatomic) NSString *recordType;
@property (copy, nonatomic) CKRecordID *recordID;
@property (retain, nonatomic) CKRecordValueStore *valueStore;
@property (retain, nonatomic) CKEncryptedRecordValueStore *encryptedValueStore;
@property (nonatomic, readonly) NSDictionary *values;
@property (nonatomic, readonly) NSDictionary *originalValues;
@property (retain, nonatomic) NSSet *changedKeysSet;
@property (nonatomic) _Bool trackChanges;
@property (copy, nonatomic) NSDate *creationDate;
@property (copy, nonatomic) NSDate *modificationDate;
@property (copy, nonatomic) CKRecordID *creatorUserRecordID;
@property (copy, nonatomic) CKRecordID *lastModifiedUserRecordID;
@property (copy, nonatomic) NSString *modifiedByDevice;
@property (retain, nonatomic) NSString *etag;
@property (retain, nonatomic) NSArray *conflictLoserEtags;
@property (nonatomic, getter=isKnownToServer) _Bool knownToServer;
@property (nonatomic, readonly) _Bool containsAssetValues;
@property (nonatomic, readonly) _Bool containsPackageValues;
@property (nonatomic, readonly) _Bool hasPropertiesRequiringEncryption;
@property (nonatomic, readonly) _Bool hasModifiedPropertiesRequiringEncryption;
@property (nonatomic, readonly) _Bool hasPropertiesRequiringDecryption;
@property (nonatomic, readonly) _Bool hasEncryptedData;
@property (nonatomic, readonly) _Bool hasModifiedEncryptedData;
@property (nonatomic) _Bool wasCached;
@property (nonatomic) _Bool serializeProtectionData;
@property (retain, nonatomic) NSData *zoneishKeyID;
@property (retain, nonatomic) NSData *protectionData;
@property (retain, nonatomic) NSString *previousProtectionEtag;
@property (retain, nonatomic) NSString *protectionEtag;
@property (retain, nonatomic) NSString *zoneProtectionEtag;
@property (retain, nonatomic) NSString *shareEtag;
@property (retain, nonatomic) NSString *routingKey;
@property (retain, nonatomic) NSString *baseToken;
@property (nonatomic, readonly) NSString *shortToken;
@property (nonatomic, readonly) NSString *fullToken;
@property (nonatomic, readonly) NSData *shortSharingTokenData;
@property (nonatomic, readonly) NSData *shortSharingTokenHashData;
@property (nonatomic, readonly) NSData *encryptedFullTokenData;
@property (nonatomic, readonly) id <CKRecordKeyValueSetting> encryptedValuesByKey;
@property (nonatomic, readonly) id <CKRecordKeyValueSetting> valuesByKey;
@property (nonatomic) _Bool wantsPublicSharingKey;
@property (nonatomic, readonly) NSData *encryptedPublicSharingKey;
@property (retain, nonatomic) CKEncryptedData *mutableEncryptedPublicSharingKey;
@property (retain, nonatomic) NSData *mutableEncryptedPublicSharingKeyData;
@property (nonatomic) _Bool wantsChainPCS;
@property (copy, nonatomic, readonly) NSURL *URL;
@property (nonatomic, readonly) NSURL *uncachedURL;
@property (copy, nonatomic) NSString *displayedHostname;
@property (nonatomic) _Bool useLightweightPCS;
@property (nonatomic, readonly) unsigned long long size;
@property long long permission;
@property (nonatomic, readonly) _Bool hasChainPCS;
@property (copy, nonatomic) NSDictionary *pluginFields;
@property (retain, nonatomic) NSString *previousProtectionEtagFromUnitTest;
@property (retain, nonatomic) NSData *pcsKeyID;
@property (copy, nonatomic, readonly) NSString *recordChangeTag;
@property (copy, nonatomic) CKReference *parent;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;

+ (_Bool)supportsSecureCoding;
+ (_Bool)accessInstanceVariablesDirectly;
+ (id)fullTokenFromBaseToken:(id)arg1 privateToken:(id)arg2;
+ (id)encryptFullToken:(id)arg1 shortSharingTokenData:(id)arg2;
+ (id)decryptFullToken:(id)arg1 shortSharingTokenData:(id)arg2;
+ (id)shareURLWithShortToken:(id)arg1 shareTitle:(id)arg2 shareType:(id)arg3 containerID:(id)arg4 displayedHostname:(id)arg5;
+ (id)recordWithDuplicatedPackagesOfRecord:(id)arg1 error:(id *)arg2;
+ (id)keyForListField:(id)arg1 withIndexRange:(struct _NSRange)arg2;
+ (id)keyForInsertingIntoListField:(id)arg1 atIndex:(long long)arg2;
+ (id)keyForAppendingToListField:(id)arg1;
+ (id)keyForFetchingItems:(unsigned long long)arg1 atEndOfListField:(id)arg2;

- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)allKeys;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)allValues;
- (id)objectForKeyedSubscript:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)valueForKey:(id)arg1;
- (void)setNilValueForKey:(id)arg1;
- (id)initWithRecordType:(id)arg1 recordID:(id)arg2;
- (void)encodeSystemFieldsWithCoder:(id)arg1;
- (id)initWithRecordType:(id)arg1 zoneID:(id)arg2;
- (id)CKDescriptionPropertiesWithPublic:(_Bool)arg1 private:(_Bool)arg2 shouldExpand:(_Bool)arg3;
- (void)CKAssignToContainerWithID:(id)arg1;
- (void)claimPackagesWithSuccessBlock:(CDUnknownBlockType)arg1 failureBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)setObjectNoValidate:(id)arg1 forKey:(id)arg2;
- (id)changedKeys;
- (void)resetChangedKeys;
- (void)_validateRecordName:(id)arg1;
- (void)_validateRecordType:(id)arg1;
- (id)_initSkippingValidationWithRecordType:(id)arg1 recordID:(id)arg2;
- (id)shortSharingToken;
- (unsigned long long)_sizeOfRecordID:(id)arg1;
- (unsigned long long)_sizeOfRecordValue:(id)arg1 forKey:(id)arg2;
- (id)_allStrings;
- (_Bool)_valueIsUsingCKEncryptedData:(id)arg1;
- (id)initWithRecordType:(id)arg1;
- (id)copyWithOriginalValues;
- (id)decryptFullToken:(id)arg1;
- (_Bool)canHostServerURLInfo;
- (id)allTokens;
- (_Bool)_checkProperties:(_Bool)arg1 encryptedStore:(_Bool)arg2 withValueCheckBlock:(CDUnknownBlockType)arg3;
- (void)setParentReferenceFromRecord:(id)arg1;
- (void)setParentReferenceFromRecordID:(id)arg1;
- (void)setStreamingAssetRequestOptions:(id)arg1;
- (void)releasePackages;
- (void)removePackages;

@end
