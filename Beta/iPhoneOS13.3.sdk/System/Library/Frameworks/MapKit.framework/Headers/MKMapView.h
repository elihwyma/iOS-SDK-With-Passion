/*
 Image: /System/Library/Frameworks/MapKit.framework/MapKit
 */

#import <UIKit/UIView.h>

#import <MapKit/Swift-Protocol.h>

@class CLLocation, GEOMapRegion, MKAnnotationContainerView, MKAnnotationManager, MKAnnotationView, MKAppleLogoImageView, MKAttributionLabel, MKBasicMapView, MKCompassView, MKDebugLocationConsole, MKMapCamera, MKMapCameraBoundary, MKMapCameraZoomRange, MKMapGestureController, MKMapViewInternal, MKMapViewLabelMarkerState, MKOverlayContainerView, MKPointOfInterestFilter, MKRotationFilter, MKScaleView, MKUserLocation, NSArray, NSDictionary, NSLayoutConstraint, NSObject, NSString, NSTimer, UIGestureRecognizer, UIImageView, UILayoutGuide, UILongPressGestureRecognizer, UIPanGestureRecognizer, UIPinchGestureRecognizer, UIRotationGestureRecognizer, UITapGestureRecognizer, UITextView, UITraitCollection, VKLabelMarker, VKMapView, VKNavContext, VKRouteContext, VKVenueBuildingFeatureMarker, VKVenueFeatureMarker, _MKCustomFeatureStore, _MKEnvironmentLabel;

@protocol MKMapViewDelegate, MKMapViewDelegate><MKMapViewDelegatePrivate, OS_dispatch_group, OS_dispatch_queue;

@interface MKMapView : UIView <Swift>

{
    MKMapViewInternal *_internal;
    UIView *_contentView;
    MKAnnotationManager *_annotationManager;
    MKAnnotationContainerView *_annotationContainer;
    MKAttributionLabel *_attributionLabel;
    MKAppleLogoImageView *_appleLogoImageView;
    CDUnknownBlockType _annotationRectTest;
    CDUnknownBlockType _annotationCoordinateTest;
    UIImageView *_attributionBadgeView;
    NSTimer *_startEffectsTimer;
    id <MKMapViewDelegate><MKMapViewDelegatePrivate> _safeDelegate;
    id <MKMapViewDelegate><MKMapViewDelegatePrivate> _unsafeDelegate;
    unsigned long long _suspendedEffectsCount;
    unsigned long long _userInteractionDisabledCount;
    unsigned long long _mapType;
    MKDebugLocationConsole *_debugLocationConsole;
    CDUnknownBlockType _debugConsoleAdditionalInfoProvider;
    _MKEnvironmentLabel *_debugCurrentEnvironmentLabel;
    double _heading;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    UITapGestureRecognizer *_selectingTapGestureRecognizer;
    UITapGestureRecognizer *_nonselectingTapGestureRecognizer;
    UIGestureRecognizer *_locationConsoleGesture;
    MKMapGestureController *_gestureController;
    MKOverlayContainerView *_overlayContainer;
    long long _userTrackingMode;
    MKBasicMapView *_basicMapView;
    VKMapView *_mapView;
    VKLabelMarker *_pressedLabelMarker;
    MKScaleView *_scaleView;
    MKCompassView *_compassView;
    _Bool _scaleVisible;
    _Bool _compassVisible;
    _Bool _showsScale;
    _Bool _showsCompass;
    _Bool _showsScaleDuringZoom;
    UIView *_scrollContainerView;
    CDUnknownBlockType _regionSetterWhenSized;
    MKUserLocation *_userLocation;
    VKRouteContext *_routeContext;
    VKNavContext *_navContext;
    MKMapCamera *_camera;
    CDUnknownBlockType _showCalloutAfterRegionChangeBlock;
    CDUnknownBlockType _selectAnnotationViewAfterRedrawBlock;
    UITextView *_vectorKitDebugView;
    UITextView *_geodHealthConsoleView;
    struct UIEdgeInsets _edgeInsets;
    UIPanGestureRecognizer *_vectorKitStyleDebugGestureRecognizer;
    double _verticalYawOverride;
    int _attributionCorner;
    long long _originalLoopRate;
    long long _preGesturingLoopRate;
    long long _annotationTrackingZoomStyle;
    id _topLayoutGuide;
    id _bottomLayoutGuide;
    NSObject<OS_dispatch_queue> *_lastEffectiveTraitCollectionIsolationQueue;
    UITraitCollection *_lastTraitCollection;
    MKRotationFilter *_rotationFilter;
    MKAnnotationView *_longPressedAnnotationView;
    struct {
        unsigned int changingRegion:1;
        unsigned int debugViewHeading:1;
        unsigned int draggingInterrupted:1;
        unsigned int didStartSmoothScrolling:1;
        unsigned int hasRenderedSomething:1;
        unsigned int hasSignaledWillStartRendering:1;
        unsigned int ignoreHeadingUpdates:1;
        unsigned int ignoreLocationUpdates:1;
        unsigned int isSuspended:1;
        unsigned int longPressing:1;
        unsigned int persistFixedUserLocation:1;
        unsigned int regionChangeIsAnimated:1;
        unsigned int rotationSupported:1;
        unsigned int scrollEnabled:1;
        unsigned int scrolling:1;
        unsigned int showHeadingIndicator:1;
        unsigned int alwaysShowHeadingIndicator:1;
        unsigned int showHeadingIndicatorForStepping:1;
        unsigned int useVehicleHeading:1;
        unsigned int showsUserLocation:1;
        unsigned int zoomEnabled:1;
        unsigned int zoomIsAnimated:1;
        unsigned int zooming:1;
        unsigned int isChangingViewSize:1;
        unsigned int isChangingEdgeInsets:1;
        unsigned int showsAttribution:1;
        unsigned int showsAppleLogo:1;
        unsigned int canShowAttributionBadge:1;
        unsigned int showsVenues:1;
        unsigned int rotating:1;
        unsigned int pitching:1;
        unsigned int rotateEnabled:1;
        unsigned int pitchEnabled:1;
        unsigned int showsBuildings:1;
        unsigned int showsPointsOfInterest:1;
        unsigned int showsTraffic:1;
        unsigned int hasPendingCameraChange:1;
        unsigned int currentRegionChangeShouldUpdateAnnotationsMidstream:1;
        unsigned int backdropViewQualityChangingDisabled:1;
        unsigned int canSelectPOIs:1;
        unsigned int canSelectAllLabels:1;
        unsigned int vectorKitConsoleEnabled:1;
        unsigned int edgeInsetsAreExplicit:1;
        unsigned int locationPropagationEnabled:1;
        unsigned int userInteractionPausesLocationUpdates:1;
        unsigned int locationPulseEnabled:1;
        unsigned int shouldSplitRouteLine:1;
        unsigned int shouldAnimatePositionWithRouteMatch:1;
        unsigned int clearUserLocationOnLocationReset:1;
        unsigned int showsCurrentEnvironmentName:1;
        unsigned int processingUserLocationUpdate:1;
        unsigned int changingMapType:1;
        unsigned int userRotatedAwayFromVerticalYaw:1;
        unsigned int goingToDefaultLocation:1;
        unsigned int isDraggingAnnotationView:1;
        unsigned int showsPressedLabelMarkerEffect:1;
        unsigned int shouldLoadFallbackTiles:1;
        unsigned int iconPixelAlignmentExplicitlyDisabled:1;
        unsigned int userDidRotateDuringCurrentRegionChange:1;
        unsigned int isTwoFingerLongPressing:1;
        unsigned int delegateShouldReceiveTouch:1;
        unsigned int delegateShouldDelayTapResponse:1;
        unsigned int delegateDidUpdateUserLocation:1;
        unsigned int delegateWillChangeRegion:1;
        unsigned int delegateDidChangeUserTrackingMode:1;
        unsigned int delegateDidChangeUserTrackingModeButton:1;
        unsigned int useTopBottomLayoutGuides:1;
        unsigned int useLayoutMargins:1;
        unsigned int geodHealthConsoleEnabled:1;
    } _flags;
    _Bool _hasSetLayoutMargins;
    UILayoutGuide *_edgeInsetsGuide;
    NSLayoutConstraint *_edgeInsetsTopConstraint;
    NSLayoutConstraint *_edgeInsetsLeftConstraint;
    NSLayoutConstraint *_edgeInsetsRightConstraint;
    NSLayoutConstraint *_edgeInsetsBottomConstraint;
    unsigned long long _suspendPropagatingEdgeInsetsCount;
    _Bool _automaticallySnapsToNorth;
    long long _cachedMuninAvailability;
    _Bool _forceLayoutOnBoundsChange;
    _Bool _hasPendingEdgeInsetsChange;
    NSObject<OS_dispatch_group> *_calloutShowAnimationGroup;
    _MKCustomFeatureStore *_annotationsCustomFeatureStore;
    double _lastYaw;
    _Bool _lastPossiblyVisible;
    unsigned long long _cachedVenueIDWithFocus;
    short _cachedDisplayedFloorOrdinalForVenueWithFocus;
    struct CLLocationCoordinate2D _oldCenterCoordinate;
    double _oldHeading;
    double _oldPitch;
    double _oldAltitude;
    struct UIEdgeInsets _attributionInsets;
    struct UIEdgeInsets _compassInsets;
    unsigned long long _compassInsetEdges;
    _Bool _explicitCompassInsetEdges;
    MKMapViewLabelMarkerState *_selectedLabelMarkerState;
    double _appleLogoImageWidth;
    _Bool _compassSuppressedForFloorPicker;
    _Bool _geodHealthConsoleEnabled;
    double _compassVisibleRotationThreshold;
    long long _interactionMode;
    unsigned long long _currentFlyoverAnimationID;
    MKMapCameraZoomRange *_cameraZoomRange;
    MKMapCameraBoundary *_cameraBoundary;
    MKPointOfInterestFilter *_pointOfInterestFilter;
    long long _compassViewSize;
    long long _compassViewStyle;
    CDUnknownBlockType _labelsDidLayoutCallback;
}

@property (nonatomic, getter=_selectedFeatureID, setter=_setSelectedFeatureID:) unsigned long long selectedFeatureID;
@property (nonatomic, getter=isScaleEnabled) _Bool scaleEnabled;
@property (retain, nonatomic) CLLocation *predictedUserLocation;
@property (nonatomic) _Bool ignoreLocationUpdates;
@property (retain, nonatomic, readonly) MKAnnotationView *userLocationView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;
@property (nonatomic, getter=_showHeadingIndicator, setter=_setShowHeadingIndicator:) _Bool showHeadingIndicator;
@property (nonatomic, readonly, getter=_transitLineMarkersInCurrentViewport) NSArray *transitLineMarkersInCurrentViewport;
@property (nonatomic, readonly) NSArray *overlays;
@property (nonatomic, readonly, getter=_visibleTileSets) NSArray *visibleTileSets;
@property (nonatomic, readonly, getter=_detailedDescription) NSString *detailedDescription;
@property (nonatomic, readonly, getter=_detailedDescriptionDictionaryRepresentation) NSDictionary *detailedDescriptionDictionaryRepresentation;
@property (nonatomic, readonly, getter=_isChangingRegionForGesture) _Bool changingRegionForGesture;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;
@property (nonatomic, readonly) long long _interfaceOrientation;
@property (nonatomic, readonly, getter=_canShowControls) _Bool canShowControls;
@property (nonatomic, readonly) CDStruct_c3b9c2ee _centerMapPoint;
@property (nonatomic, readonly) _Bool canRotateForHeading;
@property (nonatomic, readonly) _Bool hasRenderedSomething;
@property (nonatomic, readonly) _Bool effectsEnabled;
@property (nonatomic, getter=isSuspended) _Bool suspended;
@property (retain, nonatomic) NSTimer *_startEffectsTimer;
@property (weak, nonatomic, getter=_safeDelegate, setter=_setSafeDelegate:) id <MKMapViewDelegate> _safeDelegate;
@property (nonatomic, readonly, getter=_calloutShowAnimationGroup) NSObject<OS_dispatch_group> *calloutShowAnimationGroup;
@property (nonatomic, getter=_currentFlyoverAnimationID, setter=_setCurrentFlyoverAnimationID:) unsigned long long currentFlyoverAnimationID;
@property (nonatomic, readonly) double _zoomScale;
@property (nonatomic, readonly) double _zoomLevel;
@property (nonatomic, readonly, getter=_minimumZoomLevel) double minimumZoomLevel;
@property (nonatomic, readonly, getter=_maximumZoomLevel) double maximumZoomLevel;
@property (nonatomic, getter=_showsScaleDuringZoom, setter=_setShowsScaleDuringZoom:) _Bool showsScaleDuringZoom;
@property (nonatomic, getter=_showsVenues, setter=_setShowsVenues:) _Bool showsVenues;
@property (nonatomic, getter=_interactionMode, setter=_setInteractionMode:) long long interactionMode;
@property (nonatomic, readonly, getter=isRegionChanging) _Bool regionChanging;
@property (nonatomic) _Bool _annotationViewsAreAddedImmediately;
@property (nonatomic, getter=_allowsPopoverWhenNotInWindow, setter=_setAllowsPopoverWhenNotInWindow:) _Bool allowsPopoverWhenNotInWindow;
@property (nonatomic, readonly) _Bool hasUserLocation;
@property (nonatomic, readonly) GEOMapRegion *mapRegion;
@property (nonatomic) int attributionCorner;
@property (nonatomic, getter=_showsAppleLogo, setter=_setShowsAppleLogo:) _Bool showsAppleLogo;
@property (nonatomic) _Bool showsAttribution;
@property (nonatomic) _Bool canShowAttributionBadge;
@property (nonatomic, readonly, getter=_isShowingAttributionBadge) _Bool showingAttributionBadge;
@property (nonatomic, readonly) struct CGRect attributionBadgeBounds;
@property (nonatomic, getter=_attributionInsets, setter=_setAttributionInsets:) struct UIEdgeInsets attributionInsets;
@property (nonatomic, getter=isCompassEnabled) _Bool compassEnabled;
@property (nonatomic, getter=_isCompassSuppressedForFloorPicker, setter=_setCompassSuppressedForFloorPicker:) _Bool compassSuppressedForFloorPicker;
@property (nonatomic, getter=_compassVisibleRotationThreshold, setter=_setCompassVisibleRotationThreshold:) double compassVisibleRotationThreshold;
@property (nonatomic, readonly) long long compassViewSize;
@property (nonatomic, readonly) long long compassViewStyle;
@property (nonatomic, readonly) double presentationYaw;
@property (nonatomic, getter=_compassInsets, setter=_setCompassInsets:) struct UIEdgeInsets compassInsets;
@property (nonatomic, getter=_compassInsetEdges, setter=_setCompassInsetEdges:) unsigned long long compassInsetEdges;
@property (nonatomic, getter=_showsTrafficIncidents, setter=_setShowsTrafficIncidents:) _Bool showsTrafficIncidents;
@property (nonatomic, getter=_canSelectPOIs, setter=_setCanSelectPOIs:) _Bool canSelectPOIs;
@property (nonatomic, getter=_useBalloonCalloutsForLabels, setter=_setUseBalloonCalloutsForLabels:) _Bool useBalloonCalloutsForLabels;
@property (nonatomic, getter=_canSelectAllLabels, setter=_setCanSelectAllLabels:) _Bool canSelectAllLabels;
@property (nonatomic, readonly, getter=_selectedLabelMarker) VKLabelMarker *selectedLabelMarker;
@property (nonatomic, readonly, getter=_isShowingFlyover) _Bool showingFlyover;
@property (nonatomic, readonly, getter=_canShowFlyover) _Bool canShowFlyover;
@property (nonatomic, getter=_showHeadingIndicatorForStepping, setter=_setShowHeadingIndicatorForStepping:) _Bool showHeadingIndicatorForStepping;
@property (nonatomic, getter=_alwaysShowHeadingIndicator, setter=_setAlwaysShowHeadingIndicatorIfSupported:) _Bool alwaysShowHeadingIndicator;
@property (copy, nonatomic, getter=_debugConsoleAdditionalInfoProvider, setter=_setDebugConsoleAdditionalInfoProvider:) CDUnknownBlockType debugConsoleAdditionalInfoProvider;
@property (nonatomic, readonly, getter=_debugConsole) MKDebugLocationConsole *debugConsole;
@property (nonatomic, getter=_isVectorKitConsoleEnabled, setter=_setVectorKitConsoleEnabled:) _Bool vectorKitConsoleEnabled;
@property (nonatomic, getter=_isGeodHealthConsoleEnabled, setter=_setGeodHealthConsoleEnabled:) _Bool geodHealthConsoleEnabled;
@property (nonatomic, getter=_automaticallySnapsToNorth, setter=_setAutomaticallySnapsToNorth:) _Bool automaticallySnapsToNorth;
@property (nonatomic, readonly, getter=_isPitched) _Bool pitched;
@property (nonatomic, readonly, getter=_canEnter3DMode) _Bool canEnter3DMode;
@property (nonatomic, readonly, getter=_canEnter3DModeFlyover) _Bool canEnter3DModeFlyover;
@property (nonatomic, readonly, getter=_canEnterNightMode) _Bool canEnterNightMode;
@property (nonatomic, readonly, getter=_muninAvailability) long long muninAvailability;
@property (nonatomic, getter=_loadMuninAvailability, setter=_setLoadMuninAvailability:) _Bool loadMuninAvailability;
@property (nonatomic, getter=_userTrackingZoomStyle, setter=_setUserTrackingZoomStyle:) long long userTrackingZoomStyle;
@property (nonatomic, getter=_applicationState, setter=_setApplicationState:) int applicationState;
@property (nonatomic, getter=_displayedSearchResultsType, setter=_setDisplayedSearchResultsType:) long long displayedSearchResultsType;
@property (nonatomic, readonly, getter=_mapLayer) VKMapView *mapLayer;
@property (nonatomic, readonly, getter=_annotationViews) NSArray *annotationViews;
@property (nonatomic, getter=_localizeLabels, setter=_setLocalizeLabels:) _Bool localizeLabels;
@property (nonatomic, getter=_edgeInsets, setter=_setEdgeInsets:) struct UIEdgeInsets edgeInsets;
@property (nonatomic, getter=_labelEdgeInsets, setter=_setLabelEdgeInsets:) struct UIEdgeInsets labelEdgeInsets;
@property (nonatomic, getter=_userInteractionPausesLocationUpdates, setter=_setUserInteractionPausesLocationUpdates:) _Bool userInteractionPausesLocationUpdates;
@property (nonatomic, getter=_panWithMomentum, setter=_setPanWithMomentum:) _Bool panWithMomentum;
@property (nonatomic, getter=_isLocationPulseEnabled, setter=_setLocationPulseEnabled:) _Bool locationPulseEnabled;
@property (nonatomic, getter=_shouldSplitRouteLine, setter=_setShouldSplitRouteLine:) _Bool shouldSplitRouteLine;
@property (nonatomic, getter=_shouldAnimatePositionWithRouteMatch, setter=_setShouldAnimatePositionWithRouteMatch:) _Bool shouldAnimatePositionWithRouteMatch;
@property (nonatomic, getter=_shouldLoadFallbackTiles, setter=_setShouldLoadFallbackTiles:) _Bool shouldLoadFallbackTiles;
@property (nonatomic, readonly, getter=_panningGestureRecognizer) UIPanGestureRecognizer *panningGestureRecognizer;
@property (nonatomic, readonly, getter=_pinchGestureRecognizer) UIPinchGestureRecognizer *pinchGestureRecognizer;
@property (nonatomic, readonly, getter=_rotationGestureRecognizer) UIRotationGestureRecognizer *rotationGestureRecognizer;
@property (nonatomic, readonly, getter=_selectingTapGestureRecognizer) UITapGestureRecognizer *selectingTapGestureRecognizer;
@property (nonatomic, readonly, getter=_nonselectingTapGestureRecognizer) UITapGestureRecognizer *nonselectingTapGestureRecognizer;
@property (nonatomic, readonly, getter=_longPressGestureRecognizer) UILongPressGestureRecognizer *longPressGestureRecognizer;
@property (nonatomic, readonly, getter=_doubleTapGestureRecognizer) UITapGestureRecognizer *doubleTapGestureRecognizer;
@property (nonatomic, readonly, getter=_twoFingerTapGestureRecognizer) UITapGestureRecognizer *twoFingerTapGestureRecognizer;
@property (nonatomic, readonly, getter=_oneHandedZoomGestureRecognizer) UIGestureRecognizer *oneHandedZoomGestureRecognizer;
@property (nonatomic, readonly, getter=_isHandlingNonselectingTap) _Bool handlingNonselectingTap;
@property (nonatomic) _Bool rendersInBackground;
@property (nonatomic, getter=_showsNightMode, setter=_setShowsNightMode:) _Bool showsNightMode;
@property (nonatomic, getter=_showsCurrentEnvironmentName, setter=_setShowsCurrentEnvironmentName:) _Bool showsCurrentEnvironmentName;
@property (nonatomic, readonly, getter=_currentEnvironmentLabelFrame) struct CGRect currentEnvironmentLabelFrame;
@property (nonatomic, getter=_showsPressedLabelMarkerEffect, setter=_setShowsPressedLabelMarkerEffect:) _Bool showsPressedLabelMarkerEffect;
@property (nonatomic, getter=_annotationTrackingZoomStyle, setter=_setAnnotationTrackingZoomStyle:) long long annotationTrackingZoomStyle;
@property (nonatomic, getter=_isInactive, setter=_setInactive:) _Bool inactive;
@property (nonatomic, readonly, getter=_isAnimating) _Bool animating;
@property (nonatomic, readonly, getter=_edgeInsetsLayoutGuide) UILayoutGuide *edgeInsetsLayoutGuide;
@property (nonatomic, readonly) VKVenueFeatureMarker *venueWithFocus;
@property (nonatomic, readonly) VKVenueBuildingFeatureMarker *venueBuildingWithFocus;
@property (nonatomic, getter=_isDimmingOutsideVenueWithFocus) _Bool dimmingOutsideVenueWithFocus;
@property (copy, nonatomic, getter=_labelsDidLayoutCallback, setter=_setLabelsDidLayoutCallback:) CDUnknownBlockType labelsDidLayoutCallback;
@property (weak, nonatomic) id <MKMapViewDelegate> delegate;
@property (nonatomic) unsigned long long mapType;
@property (nonatomic) CDStruct_b7cb895d region;
@property (nonatomic) struct CLLocationCoordinate2D centerCoordinate;
@property (nonatomic) CDStruct_02837cd9 visibleMapRect;
@property (copy, nonatomic) MKMapCamera *camera;
@property (copy, nonatomic) MKMapCameraZoomRange *cameraZoomRange;
@property (copy, nonatomic) MKMapCameraBoundary *cameraBoundary;
@property (nonatomic, getter=isZoomEnabled) _Bool zoomEnabled;
@property (nonatomic, getter=isScrollEnabled) _Bool scrollEnabled;
@property (nonatomic, getter=isRotateEnabled) _Bool rotateEnabled;
@property (nonatomic, getter=isPitchEnabled) _Bool pitchEnabled;
@property (nonatomic) _Bool showsCompass;
@property (nonatomic) _Bool showsScale;
@property (copy, nonatomic) MKPointOfInterestFilter *pointOfInterestFilter;
@property (nonatomic) _Bool showsPointsOfInterest;
@property (nonatomic) _Bool showsBuildings;
@property (nonatomic) _Bool showsTraffic;
@property (nonatomic) _Bool showsUserLocation;
@property (nonatomic, readonly) MKUserLocation *userLocation;
@property (nonatomic) long long userTrackingMode;
@property (nonatomic, readonly, getter=isUserLocationVisible) _Bool userLocationVisible;
@property (nonatomic, readonly) NSArray *annotations;
@property (copy, nonatomic) NSArray *selectedAnnotations;
@property (nonatomic, readonly) struct CGRect annotationVisibleRect;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;

+ (unsigned long long)minZoomLevelForMapType:(unsigned long long)arg1 viewSize:(struct CGSize)arg2;
+ (CDStruct_b7cb895d)_regionThatFitsMapType:(unsigned long long)arg1 viewSize:(struct CGSize)arg2 viewInsets:(struct UIEdgeInsets)arg3 edgePadding:(struct UIEdgeInsets)arg4 region:(CDStruct_b7cb895d)arg5 minZoomLevel:(double)arg6 maxZoomLevel:(double)arg7 snapToZoomLevel:(_Bool)arg8;
+ (CDStruct_b7cb895d)regionThatFitsMapType:(unsigned long long)arg1 viewSize:(struct CGSize)arg2 edgeInsets:(struct UIEdgeInsets)arg3 region:(CDStruct_b7cb895d)arg4;
+ (CDStruct_02837cd9)_mapRectThatFitsViewBounds:(struct CGRect)arg1 mapRect:(CDStruct_02837cd9)arg2 viewInsets:(struct UIEdgeInsets)arg3 edgePadding:(struct UIEdgeInsets)arg4 minZoomLevel:(double)arg5 maxZoomLevel:(double)arg6 snapToZoomLevel:(_Bool)arg7;
+ (CDStruct_b7cb895d)regionThatFitsMapType:(unsigned long long)arg1 viewSize:(struct CGSize)arg2 region:(CDStruct_b7cb895d)arg3;
+ (void)setRendersInBackgroundByDefault:(_Bool)arg1;

- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setBounds:(struct CGRect)arg1;
- (void)setCenter:(struct CGPoint)arg1;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (void)setHidden:(_Bool)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)layoutSubviews;
- (void)setLayoutMargins:(struct UIEdgeInsets)arg1;
- (void)layoutMarginsDidChange;
- (void)_updateInsets;
- (void)safeAreaInsetsDidChange;
- (void)didMoveToSuperview;
- (void)didMoveToWindow;
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;
- (void)addOverlay:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)willMoveToWindow:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)drawRect:(struct CGRect)arg1 forViewPrintFormatter:(id)arg2;
- (void)applicationWillTerminate:(id)arg1;
- (void)_clearGestureRecognizers;
- (void)_sceneWillEnterForeground:(id)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;
- (struct CGPoint)_centerPoint;
- (id)_camera;
- (void)valueChangedForGEOConfigKey:(CDStruct_35640fce)arg1;
- (void)addAnnotation:(id)arg1;
- (void)removeAnnotation:(id)arg1;
- (_Bool)_canZoomOut;
- (_Bool)_canZoomIn;
- (void)mapLayerDidChangeVisibleRegion;
- (void)mapLayerWillChangeRegionAnimated:(_Bool)arg1;
- (void)mapLayerDidChangeRegionAnimated:(_Bool)arg1;
- (void)mapLayerDidFinishInitialTrackingAnimation;
- (id)mapLayerPresentationForAnnotation:(id)arg1;
- (void)mapLayerDidBecomePitched:(_Bool)arg1;
- (void)mapLayerCanEnter3DModeDidChange:(_Bool)arg1;
- (void)mapLayerMuninAvailabilityDidChange:(long long)arg1;
- (void)mapLayerCanZoomInDidChange:(_Bool)arg1;
- (void)mapLayerCanZoomOutDidChange:(_Bool)arg1;
- (void)mapLayerNavigationCameraHasStartedPanning;
- (void)mapLayerNavigationCameraHasStoppedPanning;
- (void)mapLayerNavigationCameraDidLeaveDefaultZoom;
- (void)mapLayerNavigationCameraDidReturnToDefaultZoom;
- (void)mapLayerDidStartLoadingTiles:(id)arg1;
- (void)mapLayerDidFinishLoadingTiles:(id)arg1;
- (void)mapLayerDidFailLoadingTiles:(id)arg1 withError:(id)arg2;
- (void)mapLayerDidDraw:(id)arg1;
- (void)mapLayerDidChangeSceneState:(id)arg1 withState:(unsigned long long)arg2;
- (void)mapLayer:(id)arg1 showingFlyoverDidChange:(_Bool)arg2;
- (void)mapLayer:(id)arg1 canShowFlyoverDidChange:(_Bool)arg2;
- (void)mapLayerWillEnterAR:(id)arg1;
- (void)mapLayerDidEnterAR:(id)arg1;
- (void)mapLayerDidExitAR:(id)arg1;
- (void)mapLayer:(id)arg1 didEncounterARError:(id)arg2;
- (void)mapLayer:(id)arg1 arSessionWasInterrupted:(unsigned long long)arg2;
- (void)mapLayerARSessionInterruptionEnded:(id)arg1;
- (void)mapLayer:(id)arg1 arTrackingStateDidChange:(unsigned long long)arg2 reason:(unsigned long long)arg3;
- (void)mapLayerWillStartFlyoverTour:(id)arg1;
- (void)mapLayer:(id)arg1 didStopFlyoverTourCompleted:(_Bool)arg2;
- (void)mapLayer:(id)arg1 flyoverTourLabelDidChange:(id)arg2;
- (void)mapLayer:(id)arg1 flyoverModeDidChange:(int)arg2;
- (void)mapLayer:(id)arg1 flyoverModeWillChange:(int)arg2;
- (void)mapLayer:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2;
- (void)mapLayer:(id)arg1 selectedLabelMarkerDidChangeState:(id)arg2;
- (void)mapLayerLabelsDidLayout:(id)arg1;
- (void)mapLayer:(id)arg1 willTransitionTo:(long long)arg2;
- (void)mapLayer:(id)arg1 didUpdateVerticalYawTo:(double)arg2;
- (void)mapLayer:(id)arg1 venueWithFocusDidChange:(id)arg2 building:(id)arg3;
- (void)_setMapType:(unsigned long long)arg1 onInit:(_Bool)arg2 animated:(_Bool)arg3;
- (void)_updateAppearanceIfNeeded;
- (void)applicationDidFinishSuspensionSnapshot:(id)arg1;
- (void)deviceOrientationDidChange:(id)arg1;
- (void)_willChangeStatusBarFrame:(id)arg1;
- (void)goToDefaultLocation;
- (void)_configureGestureRecognizers:(id)arg1;
- (void)_updateAttribution;
- (void)_updateAppleLogoVisibility;
- (void)_stopEffects;
- (id)_commonInitFromIB:(_Bool)arg1 gestureRecognizerHostView:(id)arg2 showsAttribution:(_Bool)arg3 showsAppleLogo:(_Bool)arg4;
- (void)_clearLayoutGuides;
- (void)_startEffects;
- (void)_unregisterSceneLifecycleNotifications;
- (void)_forceManifestUpdateIfNecessary;
- (void)_invalidateAllOverlayRendererColors;
- (void)_layoutAttribution;
- (void)_updateCompassVisibility;
- (void)_updateCompassPosition;
- (void)_updateScalePosition;
- (_Bool)_canShowAppleLogo;
- (id)mapAttributionWithStringAttributes:(id)arg1 underlineText:(_Bool)arg2;
- (struct CGRect)_currentEnvironmentNameFrame;
- (void)_updateEnvironmentLabelText;
- (void)_updateHeadingOrientation;
- (void)_setMapType:(unsigned long long)arg1 onInit:(_Bool)arg2 animated:(_Bool)arg3 forceSetting:(_Bool)arg4;
- (_Bool)_supportsVKMapType:(int)arg1;
- (void)_deselectLabelMarkerAnimated:(_Bool)arg1;
- (void)_updateIconsShouldAlignToPixels;
- (CDStruct_80aa614a)_mapDisplayStyle;
- (void)_setMapDisplayStyle:(CDStruct_80aa614a)arg1;
- (void)_updateScrollingAndGestures;
- (double)_boundedZoomLevel:(double)arg1;
- (id)vk_mapLayer;
- (void)_sizeWillChange;
- (void)_sizeDidChangeWithCenterCoordinate:(struct CLLocationCoordinate2D)arg1;
- (void)_updateInsetsWithForce:(_Bool)arg1;
- (void)startUpdatingUserLocation;
- (void)stopUpdatingUserLocation;
- (_Bool)_isUserLocationInView:(_Bool)arg1;
- (void)setUserTrackingMode:(long long)arg1 animated:(_Bool)arg2;
- (void)_snapToTrueNorthAndCallBack:(_Bool)arg1;
- (void)_setUserTrackingMode:(long long)arg1 animated:(_Bool)arg2 fromTrackingButton:(_Bool)arg3;
- (void)_updateShowHeadingIndicator;
- (_Bool)_shouldSupportAlwaysShowHeadingIndicator;
- (void)_updateFallbackTileLoading;
- (id)urlForMapAttribution;
- (void)selectAnnotation:(id)arg1 animated:(_Bool)arg2;
- (void)_startFlyoverTourAnimation:(unsigned long long)arg1 duration:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_selectLabelMarker:(id)arg1 animated:(_Bool)arg2;
- (void)deselectAnnotation:(id)arg1 animated:(_Bool)arg2;
- (_Bool)_isUsingDevResourceStyleSheet;
- (_Bool)isLocationConsoleEnabled;
- (void)setLocationConsoleEnabled:(_Bool)arg1;
- (_Bool)_isHandlingUserEvent;
- (_Bool)_iconsShouldAlignToPixels;
- (void)_dropDraggingAnnotationView:(_Bool)arg1;
- (void)_updateCameraState;
- (void)_updateRotationAttributes;
- (void)_updateEffects;
- (void)_showOrHideScaleIfNecessary:(_Bool)arg1;
- (void)_updateScale;
- (void)_updateHeadingIndicatorAnimated:(_Bool)arg1;
- (_Bool)_isUserLocationViewCentered:(double)arg1;
- (void)pauseUserLocationUpdates;
- (void)resumeUserLocationUpdates;
- (void)_updateShouldDisplayEffects;
- (void)addAnnotations:(id)arg1;
- (CDStruct_02837cd9)mapRectThatFits:(CDStruct_02837cd9)arg1 edgePadding:(struct UIEdgeInsets)arg2;
- (void)setVisibleMapRect:(CDStruct_02837cd9)arg1 edgePadding:(struct UIEdgeInsets)arg2 animated:(_Bool)arg3;
- (int)_viewIndexForSubview:(id)arg1;
- (void)_pauseUserLocationUpdates;
- (void)_resumeUserLocationUpdates:(_Bool)arg1;
- (void)_fixUserLocationFromPresentationValue;
- (void)_clearFixedUserLocation;
- (_Bool)_updateRotationSupported;
- (void)_updateContentBounds;
- (void)enableMapRotationIfNeeded;
- (void)_updateScrollContainerView:(_Bool)arg1 forReason:(long long)arg2;
- (double)_distanceFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 fromView:(id)arg3 withPrecision:(long long)arg4;
- (_Bool)_shouldDisplayScaleForCurrentRegion;
- (id)scaleView;
- (void)_handleCompassTap:(id)arg1;
- (_Bool)_roomForCompass;
- (void)_setCompassVisible:(_Bool)arg1 animated:(_Bool)arg2 force:(_Bool)arg3;
- (void)_postDidUpdateYawNotification;
- (int)currentMapViewTargetForAnalytics;
- (id)compassView;
- (id)compassVisibilityAnimation;
- (_Bool)_mapViewHasUpdatedCamera;
- (void)_updateVectorKitConsoleFrameWithEdgeInsets;
- (void)_updateGeodHealthConsoleFrameWithEdgeInsets;
- (void)_didChangeRegionMidstream:(_Bool)arg1;
- (void)_willChangeRegionAnimated:(_Bool)arg1;
- (void)_snapToNorthIfNecessary;
- (void)_issueDatasetCheckinCall;
- (struct CLLocationCoordinate2D)convertPoint:(struct CGPoint)arg1 toCoordinateFromView:(id)arg2;
- (struct CGPoint)convertCoordinate:(struct CLLocationCoordinate2D)arg1 toPointToView:(id)arg2;
- (id)_flattenedAnnotationsForAnnotationViews:(id)arg1 maxdisplayPriority:(float *)arg2;
- (id)viewForAnnotation:(id)arg1;
- (double)_goToCenterCoordinate:(struct CLLocationCoordinate2D)arg1 zoomLevel:(double)arg2 animated:(_Bool)arg3;
- (void)_displayWorld;
- (void)setRegion:(CDStruct_b7cb895d)arg1 animated:(_Bool)arg2;
- (id)annotationsInMapRect:(CDStruct_02837cd9)arg1;
- (void)_selectAnnotation:(id)arg1 animated:(_Bool)arg2;
- (void)navigationCameraReturnToPuck;
- (void)_addAnnotation:(id)arg1 allowAnimation:(_Bool)arg2;
- (void)removeAnnotations:(id)arg1;
- (struct CGPoint)_convertCoordinate:(struct CLLocationCoordinate2D)arg1 toPointToView:(id)arg2;
- (struct CLLocationCoordinate2D)_convertPoint:(struct CGPoint)arg1 toCoordinateFromView:(id)arg2;
- (struct CGRect)_convertRegion:(CDStruct_b7cb895d)arg1 toRectToView:(id)arg2;
- (CDStruct_b7cb895d)_convertRect:(struct CGRect)arg1 toRegionFromView:(id)arg2;
- (CDStruct_02837cd9)_convertRect:(struct CGRect)arg1 toMapRectFromView:(id)arg2;
- (struct CGRect)_convertMapRect:(CDStruct_02837cd9)arg1 toRectToView:(id)arg2;
- (void)_registerSceneLifecycleNotifications;
- (void)updateLayoutGuides;
- (void)_willStartZoom:(_Bool)arg1;
- (void)_didEndZoom;
- (_Bool)_mustWaitUntilSized;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D)arg1 animated:(_Bool)arg2;
- (void)_addSetRegionBlockWhenSized:(CDUnknownBlockType)arg1;
- (void)setCamera:(id)arg1 animated:(_Bool)arg2;
- (double)_zoomLevelForRegion:(CDStruct_b7cb895d)arg1 includeAccessoryPadding:(_Bool)arg2;
- (void)_setZoomScale:(double)arg1 centerMapPoint:(CDStruct_c3b9c2ee)arg2 duration:(double)arg3 animated:(_Bool)arg4;
- (id)_mapRegionWithCenterCoordinate:(struct CLLocationCoordinate2D)arg1 zoomScale:(double)arg2;
- (void)_goToMapRegion:(id)arg1 duration:(double)arg2 animated:(_Bool)arg3;
- (void)_goToMapRegion:(id)arg1 duration:(double)arg2 animated:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_suspendUserInteraction;
- (void)_resumeUserInteraction;
- (CDStruct_c0a8b48f)_zoomRegionForMapRect:(CDStruct_02837cd9)arg1 edgePadding:(struct UIEdgeInsets)arg2 maxZoomLevel:(long long)arg3 minZoomLevel:(long long)arg4;
- (CDStruct_02837cd9)mapRectThatFits:(CDStruct_02837cd9)arg1;
- (double)_zoomLevelForMapRect:(CDStruct_02837cd9)arg1 includeAccessoryPadding:(_Bool)arg2;
- (long long)_roundedZoomLevel;
- (void)_setZoomScale:(double)arg1 centerCoordinate:(struct CLLocationCoordinate2D)arg2 duration:(double)arg3 animated:(_Bool)arg4;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D)arg1 zoomLevel:(double)arg2 animated:(_Bool)arg3;
- (void)_setEdgeInsets:(struct UIEdgeInsets)arg1 explicit:(_Bool)arg2;
- (id)venueWithID:(unsigned long long)arg1;
- (double)_mapKitZoomLevelForVectorKitTileZoomLevel:(double)arg1;
- (short)displayedFloorOrdinalForBuildingsInVenue:(id)arg1;
- (void)setSelectedVenuePoiFeatureId:(unsigned long long)arg1;
- (void)deselectVenuePoiFeatureId;
- (void)_prepareFlyoverAnimation:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_performFlyoverAnimation:(id)arg1 animateToStart:(_Bool)arg2;
- (void)_stopFlyoverAnimation;
- (void)_pauseFlyoverAnimation;
- (void)_resumeFlyoverAnimation;
- (void)setFlyoverMode:(int)arg1;
- (void)_addCustomFeatureDataSource:(id)arg1;
- (void)_addAnnotationsCustomFeatureStoreIfNeeded;
- (void)selectAnnotationRepresentation:(id)arg1 animated:(_Bool)arg2;
- (id)_labelMarkerForCustomFeatureAnnotation:(id)arg1;
- (CDUnknownBlockType)annotationRectTest;
- (CDUnknownBlockType)annotationCoordinateTest;
- (_Bool)shouldHideOffscreenSelectedAnnotation;
- (void)_setCamera:(id)arg1 animated:(_Bool)arg2;
- (void)_setCamera:(id)arg1;
- (void)setCamera:(id)arg1 animated:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_setCamera:(id)arg1 animated:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)setCamera:(id)arg1 duration:(double)arg2 springMass:(float)arg3 springStiffness:(float)arg4 springDamping:(float)arg5 springVelocity:(float)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (void)_setCamera:(id)arg1 duration:(double)arg2 springMass:(float)arg3 springStiffness:(float)arg4 springDamping:(float)arg5 springVelocity:(float)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (void)_setCamera:(id)arg1 springMass:(float)arg2 springStiffness:(float)arg3 springDamping:(float)arg4 springVelocity:(float)arg5;
- (void)setCameraZoomRange:(id)arg1 animated:(_Bool)arg2;
- (void)_setCameraZoomRange:(id)arg1 animated:(_Bool)arg2;
- (void)setCameraBoundary:(id)arg1 animated:(_Bool)arg2;
- (void)_setCameraBoundary:(id)arg1 animated:(_Bool)arg2;
- (void)_zoomWithAmount:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_zoomInWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_zoomOutWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)setVehicleState:(CDStruct_b31ca263)arg1;
- (void)addAnnotationRepresentation:(id)arg1 allowAnimation:(_Bool)arg2;
- (void)removeAnnotationRepresentation:(id)arg1;
- (void)deselectAnnotationRepresentation:(id)arg1 animated:(_Bool)arg2;
- (void)moveAnnotationRepresentation:(id)arg1 fromCoordinate:(struct CLLocationCoordinate2D)arg2 animated:(_Bool)arg3 duration:(double)arg4;
- (void)annotationManager:(id)arg1 didAddAnnotationRepresentations:(id)arg2;
- (void)annotationManager:(id)arg1 didRemoveAnnotationRepresentations:(id)arg2;
- (void)annotationManagerDidChangeVisibleAnnotationRepresentations:(id)arg1;
- (id)annotationManager:(id)arg1 representationForAnnotation:(id)arg2;
- (void)annotationManager:(id)arg1 didSelectAnnotationRepresentation:(id)arg2;
- (void)annotationManager:(id)arg1 didDeselectAnnotationRepresentation:(id)arg2;
- (void)annotationManager:(id)arg1 willDeselectAnnotationRepresentation:(id)arg2;
- (_Bool)annotationManager:(id)arg1 shouldAnimateDeselectionOfAnnotation:(id)arg2 forSelectionOfAnnotation:(id)arg3;
- (_Bool)annotationManager:(id)arg1 canSelectAnnotationRepresentation:(id)arg2;
- (int)currentUITargetForAnalytics;
- (void)rotationFilter:(id)arg1 didChangeSnapping:(_Bool)arg2;
- (_Bool)annotationContainerShouldAlignToPixels:(id)arg1;
- (_Bool)annotationContainerIsRotated:(id)arg1;
- (id)annotationContainer:(id)arg1 requestAddingClusterForAnnotationViews:(id)arg2;
- (void)annotationContainer:(id)arg1 requestRemovingClusterAnnotationView:(id)arg2 updateVisible:(_Bool)arg3;
- (void)annotationContainer:(id)arg1 annotationView:(id)arg2 calloutAccessoryControlTapped:(id)arg3;
- (void)calloutDidAppearForAnnotationView:(id)arg1 inContainer:(id)arg2;
- (void)annotationContainer:(id)arg1 calloutPrimaryActionTriggeredForAnnotationView:(id)arg2;
- (void)annotationContainer:(id)arg1 scrollToRevealCalloutWithOffset:(struct CGPoint)arg2 annotationCoordinate:(struct CLLocationCoordinate2D)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (double)annotationContainer:(id)arg1 pinDropDistanceForCoordinate:(struct CLLocationCoordinate2D)arg2 maxDistance:(double *)arg3;
- (void)annotationContainerWillAnimateBubble:(id)arg1;
- (void)annotationContainerDidAnimateBubble:(id)arg1;
- (void)annotationContainerWillDropPins:(id)arg1;
- (void)annotationContainerDidDropPins:(id)arg1;
- (struct CGRect)visibleCenteringRectInView:(id)arg1;
- (struct CGRect)visibleRectInView:(id)arg1;
- (double)annotationContainerZoomScale:(id)arg1;
- (struct CGRect)annotationContainerVisibleRect:(id)arg1;
- (_Bool)annotationContainer:(id)arg1 isAnnotationView:(id)arg2 validForDisplayAtPoint:(struct CGPoint)arg3;
- (void)annotationContainerDidFinishMapsTransitionExpanding:(id)arg1;
- (id)_initWithFrame:(struct CGRect)arg1 gestureRecognizerHostView:(id)arg2 showsAttribution:(_Bool)arg3 showsAppleLogo:(_Bool)arg4;
- (id)initFromIBWithFrame:(struct CGRect)arg1;
- (void)setBackdropViewQualityChangingDisabled:(_Bool)arg1;
- (void)_withEffectiveTraitCollection:(CDUnknownBlockType)arg1;
- (void)_setCompassViewSize:(long long)arg1 style:(long long)arg2;
- (struct CGRect)attributionFrame;
- (id)mapAttributionWithStringAttributes:(id)arg1;
- (id)mapAttributionWithStringAttributes:(id)arg1 allowMultiLine:(_Bool)arg2;
- (void)_removeCustomFeatureDataSource:(id)arg1;
- (_Bool)isShowingNoDataPlaceholders;
- (void)_setMapType:(unsigned long long)arg1 animated:(_Bool)arg2;
- (double)_vectorKitTileZoomLevelForMapKitZoomLevel:(double)arg1;
- (void)_setTracePlaybackSpeedMultiplier:(double)arg1;
- (_Bool)isCurrentlyRotated;
- (_Bool)postsMapViewInitialRenderingNotification;
- (id)_annotationAtPoint:(struct CGPoint)arg1 avoidCurrent:(_Bool)arg2;
- (_Bool)calloutViewContainsPoint:(struct CGPoint)arg1;
- (void)_handleSelectionAtPoint:(struct CGPoint)arg1;
- (void)toggleLocationConsole:(id)arg1;
- (_Bool)_isZooming;
- (void)_annotationViewDragStateChanged:(id)arg1;
- (id)beginStoppingEffects;
- (void)showAnnotations:(id)arg1 animated:(_Bool)arg2;
- (void)_insertSubview:(id)arg1;
- (void)_selectUserLocationTypeWithDeltaZoomLevel:(double)arg1;
- (id)_labelMarkersInCurrentViewport;
- (id)_labelMarkersInCurrentViewportForType:(int)arg1;
- (void)_forceFrame;
- (_Bool)compassVisible;
- (void)snapToNorth:(id)arg1;
- (id)_labelMarkerAtPoint:(struct CGPoint)arg1;
- (void)_addAnnotations:(id)arg1 allowAnimation:(_Bool)arg2;
- (void)_replaceAnnotation:(id)arg1 withAnnotation:(id)arg2;
- (void)_addViewsForAnnotations:(id)arg1;
- (id)dequeueReusableAnnotationViewWithIdentifier:(id)arg1;
- (id)dequeueReusableAnnotationViewWithIdentifier:(id)arg1 forAnnotation:(id)arg2;
- (void)registerClass:(Class)arg1 forAnnotationViewWithReuseIdentifier:(id)arg2;
- (struct CGRect)convertRegion:(CDStruct_b7cb895d)arg1 toRectToView:(id)arg2;
- (CDStruct_b7cb895d)convertRect:(struct CGRect)arg1 toRegionFromView:(id)arg2;
- (CDStruct_02837cd9)convertRect:(struct CGRect)arg1 toMapRectFromView:(id)arg2;
- (struct CGRect)convertMapRect:(CDStruct_02837cd9)arg1 toRectToView:(id)arg2;
- (void)_enter3DMode;
- (void)_exit3DMode;
- (void)_enterARMode;
- (void)_enterARModeWithLocation:(id)arg1;
- (void)_exitARMode;
- (void)_addVectorOverlay:(id)arg1;
- (void)_removeVectorOverlay:(id)arg1;
- (void)_addPersistentVectorOverlay:(id)arg1;
- (void)_removePersistentVectorOverlay:(id)arg1;
- (void)_startZoomForExternalGesture;
- (void)_endZoomForExternalGesture;
- (CDStruct_b7cb895d)regionThatFits:(CDStruct_b7cb895d)arg1;
- (void)_setVisibleMapRect:(CDStruct_02837cd9)arg1 animated:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_setVisibleMapRect:(CDStruct_02837cd9)arg1 duration:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)setVisibleMapRect:(CDStruct_02837cd9)arg1 animated:(_Bool)arg2;
- (double)_defaultAnimationDurationForMapRect:(CDStruct_02837cd9)arg1 edgePadding:(struct UIEdgeInsets)arg2;
- (double)_panDurationFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
- (double)_zoomScaleForMapRegion:(id)arg1;
- (void)_suspendPropagatingEdgeInsets;
- (void)_resumePropagatingEdgeInsets;
- (double)zoomToFocusVenue:(id)arg1;
- (double)zoomToFocusVenueBuilding:(id)arg1;
- (void)setDisplayedFloorOrdinal:(short)arg1 forBuildingsInVenue:(id)arg2;
- (void)resetDisplayedFloorOrdinalForAllVenues;
- (_Bool)displayedFloorIsDefaultForBuildingsInVenue:(id)arg1;
- (short)defaultFloorForBuildingsInVenue:(id)arg1;
- (void)_performFlyoverAnimation:(id)arg1;
- (CDStruct_02837cd9)_mapRectWithFraction:(double)arg1 ofVisible:(CDStruct_02837cd9)arg2;
- (void)setCamera:(id)arg1 duration:(double)arg2 springMass:(float)arg3 springStiffness:(float)arg4 springDamping:(float)arg5 springVelocity:(float)arg6;
- (void)setCamera:(id)arg1 springMass:(float)arg2 springStiffness:(float)arg3 springDamping:(float)arg4 springVelocity:(float)arg5;
- (void)startLinearZoomIn:(_Bool)arg1;
- (void)stopZoomingWithInertia;
- (void)_zoomWithAmount:(double)arg1;
- (void)_zoomIn;
- (void)_zoomOut;
- (void)_startPanningAtPoint:(struct CGPoint)arg1;
- (void)_updatePanWithTranslation:(struct CGPoint)arg1;
- (void)_stopPanningAtPoint:(struct CGPoint)arg1;
- (void)_clearGesturesAndAnimations;
- (void)_insertSubviewBelowAnnotationContainerView:(id)arg1;
- (void)removeUserLocation;
- (void)locationManagerUpdatedLocation:(id)arg1;
- (void)_updateUserLocation:(id)arg1 routeMatch:(id)arg2;
- (void)_updateLocationConsole;
- (void)_updateUserLocationViewWithLocation:(id)arg1 hadUserLocation:(_Bool)arg2;
- (_Bool)_useVehicleHeading;
- (void)_updateCourseForMapViewHeading:(id)arg1;
- (void)_locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3;
- (_Bool)_isLocationPropagationEnabled;
- (void)_setLocationPropagationEnabled:(_Bool)arg1;
- (_Bool)_clearUserLocationOnLocationReset;
- (void)_setClearUserLocationOnLocationReset:(_Bool)arg1;
- (_Bool)_userLocationWithinVisibleMapBounds;
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;
- (void)locationManagerDidReset:(id)arg1;
- (_Bool)locationManagerShouldPauseLocationUpdates:(id)arg1;
- (void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3;
- (void)locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3;
- (void)_startTrackingHeading;
- (void)_stopTrackingHeading;
- (void)_updateHeading:(id)arg1 animated:(_Bool)arg2;
- (_Bool)_rotationPossible;
- (void)_setUseVehicleHeading:(_Bool)arg1;
- (void)pauseUserHeadingUpdates;
- (void)resumeUserHeadingUpdates;
- (void)locationManagerUpdatedHeading:(id)arg1;
- (void)locationManagerFailedToUpdateHeading:(id)arg1 withError:(id)arg2;
- (void)_setCamera:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_setCamera:(id)arg1 duration:(double)arg2 timingCurve:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_setCamera:(id)arg1 duration:(double)arg2 timing:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (double)_cameraAltitudeClampedToZoomRange:(id)arg1;
- (double)_durationForCamera:(id)arg1;
- (CDUnknownBlockType)_vkTimingFunctionForUIViewAnimationCurve:(long long)arg1;
- (void)_updateFromCamera:(id)arg1 duration:(double)arg2 timing:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (double)_animationDurationWhenSettingCameraBoundary:(id)arg1;
- (void)_updateFromCamera:(id)arg1;
- (id)_transitLineMarkerForIdentifier:(id)arg1;
- (void)_selectTransitLineMarker:(id)arg1;
- (void)_selectTransitLineMarkerWithIdentifier:(id)arg1;
- (void)_deselectTransitLineMarker;
- (_Bool)_hasSelectedTransitLines;
- (id)_selectedTransitLineIDs;
- (id)overlayContainer;
- (id)createDrawableForOverlay:(id)arg1;
- (void)overlayContainerAddedDrawables:(id)arg1;
- (void)addOverlays:(id)arg1;
- (void)addOverlay:(id)arg1 level:(long long)arg2;
- (void)addOverlays:(id)arg1 level:(long long)arg2;
- (void)insertOverlay:(id)arg1 atIndex:(unsigned long long)arg2 level:(long long)arg3;
- (void)removeOverlay:(id)arg1;
- (void)removeOverlays:(id)arg1;
- (void)insertOverlay:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)exchangeOverlayAtIndex:(unsigned long long)arg1 withOverlayAtIndex:(unsigned long long)arg2;
- (void)exchangeOverlay:(id)arg1 withOverlay:(id)arg2;
- (void)insertOverlay:(id)arg1 aboveOverlay:(id)arg2;
- (void)insertOverlay:(id)arg1 belowOverlay:(id)arg2;
- (id)overlaysInLevel:(long long)arg1;
- (id)viewForOverlay:(id)arg1;
- (id)rendererForOverlay:(id)arg1;
- (void)gestureControllerWillStartUserInteraction:(id)arg1;
- (void)gestureControllerDidStopUserInteraction:(id)arg1;
- (struct CGPoint)gestureController:(id)arg1 focusPointForPoint:(struct CGPoint)arg2 gestureKind:(long long)arg3;
- (void)gestureControllerWillStartTilting:(id)arg1;
- (void)gestureControllerDidStopTilting:(id)arg1 willDecelerate:(_Bool)arg2 tiltDirection:(long long)arg3;
- (void)gestureControllerDidStopRotating:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)gestureControllerWillStartRotating:(id)arg1;
- (void)gestureControllerDidStopRotatingDecelerating:(id)arg1;
- (void)gestureControllerWillStartZooming:(id)arg1 animated:(_Bool)arg2;
- (void)gestureControllerDidStopZooming:(id)arg1 direction:(long long)arg2 type:(long long)arg3 willDecelerate:(_Bool)arg4;
- (void)gestureControllerWillStartTwoFingerLongPress:(id)arg1;
- (void)gestureControllerDidStopTwoFingerLongPress:(id)arg1;
- (void)gestureControllerDidStopZoomingDecelerating:(id)arg1 direction:(long long)arg2 type:(long long)arg3;
- (void)gestureControllerWillStartPanning:(id)arg1;
- (void)gestureControllerDidStopPanningDecelerating:(id)arg1;
- (void)gestureControllerDidStopPanning:(id)arg1 willDecelerate:(_Bool)arg2;
- (double)gestureController:(id)arg1 shouldWaitForNextTapForDuration:(double)arg2 afterTouch:(id)arg3;
- (void)gestureControllerDidStopZooming:(id)arg1 direction:(long long)arg2 willDecelerate:(_Bool)arg3;
- (void)gestureControllerDidStopZoomingDecelerating:(id)arg1 direction:(long long)arg2;
- (_Bool)gestureController:(id)arg1 shouldReceiveTouch:(id)arg2;
- (id)_transitLineMarkersForSelectionAtPoint:(struct CGPoint)arg1;
- (void)_handleSelectGestureToSelect:(id)arg1;
- (void)_handleSelectGestureToDeselect:(id)arg1;
- (void)_handleLongPressGesture:(id)arg1;
- (void)_addDebugGesture;
- (void)gestureControllerDidStopTiltingDecelerating:(id)arg1;
- (struct CGRect)gestureControllerSignificantViewFrame:(id)arg1;
- (void)_setRouteContextForRoutes:(id)arg1 selectedRouteIndex:(unsigned long long)arg2;
- (id)_routeInfoForRoute:(id)arg1;
- (void)_setRouteContextForRoute:(id)arg1;
- (void)_setRouteContextInspectedLegIndex:(unsigned long long)arg1 inspectedStepIndex:(unsigned long long)arg2;
- (void)_clearRouteContext;
- (void)_setRouteContextAnnotationText:(id)arg1 tollCurrency:(unsigned char)arg2 forRoute:(id)arg3;
- (void)_setRouteContextAnnotationFocus:(_Bool)arg1 forRoute:(id)arg2;
- (void)_setAlternateRouteContextAnnotationETAComparison:(unsigned char)arg1 forRoute:(id)arg2;
- (CDStruct_c3b9c2ee)_convertPoint:(struct CGPoint)arg1 toMapPointFromView:(id)arg2;
- (struct CGPoint)_convertMapPoint:(CDStruct_c3b9c2ee)arg1 toPointToView:(id)arg2;

@end
