/*
 Image: /System/Library/Frameworks/ARKit.framework/ARKit
 */

#import <Foundation/NSObject.h>

@class ARBoardController, ARCompositeSignaler, ARCompositeStats, ARCriticalTimer, ARFrame, ARInternalCompositor, ARPredictionStats, ARPresentationDescriptor, ARPresentationDisplay, ARPresentationFrame, ARPresentationFramePool, ARPresentationOverrides, ARRollingNumberSeries, ARRunLoop, ARSession, CADisplayLink, MTLSharedEventListener, NSArray, NSCondition, NSMutableArray, NSString, NSThread, NSTimer, SRSPresentationAssertion, UIView;

@protocol ARPresentationDelegate, ARPresentationInternalObserver, MTLCaptureScope, MTLCommandQueue, MTLDevice, MTLSharedEvent, OS_dispatch_queue;

@interface ARPresentation : NSObject

{
    ARPresentationDescriptor *_activeDescriptor;
    ARPresentationDisplay *_activeDisplay;
    long long _presentationMode;
    ARPresentationDescriptor *_transitionDescriptor;
    ARPresentationDisplay *_transitionPresentationDisplay;
    ARPresentationDisplay *_heldPresentationDisplay;
    _Bool _heldModeSupported;
    _Bool _wornModeSupported;
    _Atomic _Bool _isStarted;
    _Atomic _Bool _isPaused;
    _Bool _firstTimeInit;
    _Bool _firstTimeApplyChanges;
    NSCondition *_renderPausedCondition;
    NSTimer *_longPressTimer;
    id <MTLDevice> _metalDevice;
    UIView *_view;
    struct CGSize _viewSize;
    long long _viewOrientation;
    ARBoardController *_boardController;
    unsigned long long _eyeCount;
    ARSession *_session;
    id <MTLCaptureScope> _compositorScope;
    id <MTLCaptureScope> _presentCaptureScope;
    ARPresentationOverrides *_overrides;
    CADisplayLink *_compositorDisplayLink;
    ARRunLoop *_compositorRunLoop;
    NSTimer *_compositorSettingsTimer;
    id <MTLSharedEvent> _compositorEvent;
    id <MTLCommandQueue> _compositorCommandQueue;
    NSMutableArray *_compositorBlockQueue;
    ARInternalCompositor *_internalCompositor;
    ARCriticalTimer *_compositorSleepTimer;
    ARCompositeSignaler *_compositeSignaler;
    _Atomic long long _makePresentationFrameCount;
    ARPresentationFramePool *_framePool;
    id <MTLSharedEvent> _applicationEvent;
    _Bool _waitRenderOnCompositorGPUWork;
    _Bool _logTimings;
    unsigned long long _frameNumber;
    unsigned long long _vsyncTarget;
    unsigned long long vsyncCounter;
    int _frameStatsIndex;
    NSArray *_frameStatsRender;
    ARRollingNumberSeries *_renderTimes;
    ARRollingNumberSeries *_renderTimesCPU;
    double _renderEndEstimate;
    double _renderEndEstimateSnapped;
    MTLSharedEventListener *_renderEventListener;
    double _timstampOfLastRenderInHeldMode;
    int _frameStatsCompositeIndex;
    NSArray *_frameStatsCompositePool;
    ARCompositeStats *_frameStatsComposite;
    ARRollingNumberSeries *_compositeTimes;
    double _compositeSlop;
    double _compositeSchedulingSlop;
    double _compositeCASlopTime;
    ARRollingNumberSeries *_compositeVsyncsMissed;
    ARRollingNumberSeries *_renderVsyncsMissed;
    int _minVsyncsPerFrame;
    int _minVsyncsPerFrameRange[2];
    _Bool _heldShowStatistics;
    SRSPresentationAssertion *_presentationAssertion;
    double _lastNewPresentationFrameCallTime;
    ARPredictionStats *_predictionStats;
    _Bool _isSceneKitBasedView;
    double _lastPresentedTime;
    long long _preferredFramesPerSecond;
    long long _actualFramesPerSecond;
    _Bool _willUpdateSettings;
    _Bool _updatingSettings;
    _Bool _isARSessionStateIgnored;
    _Bool _headLocked;
    _Bool _cameraCompositingDisabled;
    id <ARPresentationDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    ARPresentationFrame *_currentPresentationFrame;
    long long _state;
    ARFrame *_frameCopy;
    NSThread *_renderThread;
    id <ARPresentationInternalObserver> _observer;
    CDStruct_14d5dc5e _headLockedTransform;
}

@property _Bool willUpdateSettings;
@property _Bool updatingSettings;
@property (retain) ARFrame *frameCopy;
@property (retain) ARPresentationFrame *currentPresentationFrame;
@property _Bool isARSessionStateIgnored;
@property long long state;
@property (nonatomic, readonly) NSThread *renderThread;
@property (weak, nonatomic) id <ARPresentationInternalObserver> observer;
@property (nonatomic, readonly) ARPresentationFramePool *framePool;
@property (nonatomic) long long preferredFramesPerSecond;
@property (nonatomic) long long actualFramesPerSecond;
@property _Bool headLocked;
@property CDStruct_14d5dc5e headLockedTransform;
@property (nonatomic, readonly) ARPresentationOverrides *overrides;
@property (nonatomic, readonly) ARBoardController *boardController;
@property (weak, nonatomic) ARSession *session;
@property (nonatomic) long long presentationMode;
@property (nonatomic, getter=isCameraCompositingDisabled) _Bool cameraCompositingDisabled;
@property (weak, nonatomic) id <ARPresentationDelegate> delegate;
@property (retain) NSObject<OS_dispatch_queue> *delegateQueue;
@property (weak, nonatomic) UIView *view;
@property (copy, nonatomic, readonly) ARPresentationDisplay *activeDisplay;
@property (copy, nonatomic, readonly) ARPresentationDescriptor *activeDescriptor;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;

+ (_Bool)compositorPlistKeysEnabled;
+ (_Bool)isSupportedOnOSVersion;
+ (_Bool)supportsPresentationMode:(long long)arg1;
+ (_Bool)isWornModeSupported;
+ (_Bool)_ARDeviceHeldModeSupported;
+ (void)setCompositorForceDisabled:(_Bool)arg1;
+ (_Bool)compositorForceDisabled;
+ (_Bool)supportsStereoAR;
+ (void)setWornModeForceDisabled:(_Bool)arg1;
+ (_Bool)wornModeForceDisabled;
+ (_Bool)isCompositorEnabled;

- (void)dealloc;
- (void)pause;
- (void)resume;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)present;
- (unsigned long long)supportedInterfaceOrientations;
- (id)initWithView:(id)arg1;
- (unsigned long long)startFrame;
- (void)shutdown;
- (void)session:(id)arg1 didFailWithError:(id)arg2;
- (void)sessionWasInterrupted:(id)arg1;
- (void)sessionInterruptionEnded:(id)arg1;
- (void)orientationChanged:(id)arg1;
- (void)updateLayerBounds;
- (void)boardController:(id)arg1 didSwitchToDeviceWorn:(id)arg2;
- (void)boardControlerDidSwitchToDeviceHeld:(id)arg1;
- (void)session:(id)arg1 didChangeState:(unsigned long long)arg2;
- (void)handleSTARData:(id)arg1;
- (_Bool)transitionToDescriptor:(id)arg1 error:(id *)arg2;
- (id)makePresentationFrame;
- (void)updatePresentationStats:(id)arg1;
- (void)_createCompositorCommandQueue;
- (void)_setupGCStereoARInteraction;
- (void)_stopSystem;
- (void)setHeldModeConfig;
- (_Bool)setDescriptor:(id)arg1 presentationDisplay:(id)arg2 error:(id *)arg3;
- (void)setDeviceWorn:(id)arg1;
- (void)setDeviceHeld;
- (void)setModeFromDisplayConfig:(id)arg1;
- (_Bool)_supportsPresentationMode:(long long)arg1;
- (_Bool)_setRealTimePriority;
- (_Bool)_standardPriority;
- (_Bool)isDescriptorSupported:(id)arg1 error:(id *)arg2;
- (_Bool)updateSettingsPending;
- (void)_startCompositorRunLoop;
- (void)_startRenderThread;
- (void)_resumeSystem;
- (void)_pauseSystem;
- (void)_stopRenderThread;
- (void)_stopCompositorRunLoop;
- (void)_renderThreadCallback;
- (void)_signalPausedRenderThreadAtShutdown;
- (void)_compositorRunLoopCallback;
- (void)updatePresentationModeOverride;
- (void)executeDispatchedBlocks;
- (void)_updateAntialiasingIfNeeded;
- (void)_applyChangesIfNeeded;
- (void)_updateSignalValue:(unsigned long long)arg1;
- (double)_getDisplayPersistenceTime:(double)arg1;
- (id)getReprojectionPoseForTime:(double)arg1;
- (id)_renderStatsString;
- (void)_updateStatisticsWidgets;
- (void)advanceFrameCopy;
- (void)compositeAndDistort;
- (_Bool)_tickRendererOnVsync;
- (id)newDummyARFrame;
- (_Bool)isFrameCopyValid:(id)arg1;
- (void)_addNotifyListener:(id)arg1;
- (void)waitForOptimalPrediction;
- (unsigned long long)_indexForEyeLocation:(long long)arg1;
- (void)_startOrResumeSystem;
- (void)_releasePresentationAssertion;
- (void)_acquirePresentationAssertion;
- (void)_startSystem;
- (void)dispatchOnNextComposite:(CDUnknownBlockType)arg1;
- (void)_registerSystemButtonEvents:(id)arg1;
- (void)_handleControllerDidConnectNotification:(id)arg1;
- (void)_handleControllerEvent:(id)arg1 button:(id)arg2 value:(float)arg3 pressed:(_Bool)arg4;
- (void)_recenterController:(id)arg1;
- (CDStruct_183601bc)_createAlignmentQuaternionForTransform:(CDStruct_14d5dc5e)arg1 controllerOrientation:(CDStruct_183601bc)arg2;
- (void)_commonInitWithView:(id)arg1;
- (void)togglePresentationMode;
- (void)_compositorDisplayLinkCallback;

@end
