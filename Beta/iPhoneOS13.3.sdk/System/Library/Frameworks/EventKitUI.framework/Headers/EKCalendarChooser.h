/*
 Image: /System/Library/Frameworks/EventKitUI.framework/EventKitUI
 */

#import <UIKit/UIViewController.h>

@class EKCalendar, EKCalendarEditor, EKEventStore, EKSource, EKUIAccountRefresher, NSArray, NSIndexPath, NSMutableArray, NSMutableDictionary, NSMutableSet, NSSet, NSString, UIBarButtonItem, UIRefreshControl, UITableView, _UIAccessDeniedView;

@protocol EKCalendarChooserDelegate, EKStyleProvider;

@interface EKCalendarChooser : UIViewController

{
    EKUIAccountRefresher *_currentAccountRefresher;
    NSMutableDictionary *_accountErrorAnalyticsState;
    NSArray *_delegateSources;
    _Bool _showDelegateCalendarsCell;
    NSSet *_currentKnownCalendarIds;
    _Bool _canShowIdentityChooser;
    _Bool _disableCalendarEditing;
    _Bool _showsDeclinedEventsSetting;
    _Bool _showAccountStatus;
    _Bool _onlyShowUnmanagedAccounts;
    _Bool _showDetailAccessories;
    _Bool _allowsEdit;
    CDStruct_424d6339 _flags;
    int _chooserMode;
    int _explanatoryTextMode;
    long long _style;
    NSMutableSet *_selectedCalendars;
    id <EKCalendarChooserDelegate> _delegate;
    unsigned long long _entityType;
    long long _lastAuthorizationStatus;
    UITableView *_tableView;
    UIBarButtonItem *_showAllButton;
    NSMutableArray *_groups;
    NSMutableDictionary *_storeGroupMap;
    NSMutableDictionary *_customGroupMap;
    NSIndexPath *_checkedRow;
    id <EKStyleProvider> _styleProvider;
    EKSource *_limitedToSource;
    _UIAccessDeniedView *_accessDeniedView;
    EKCalendarEditor *_presentedEditor;
    UIRefreshControl *_refreshControl;
    EKEventStore *_eventStore;
}

@property (nonatomic) long long selectionStyle;
@property (nonatomic) unsigned long long entityType;
@property (nonatomic) long long lastAuthorizationStatus;
@property (retain, nonatomic) UITableView *tableView;
@property (retain, nonatomic) UIBarButtonItem *showAllButton;
@property (retain, nonatomic) NSMutableArray *groups;
@property (retain, nonatomic) NSMutableDictionary *storeGroupMap;
@property (retain, nonatomic) NSMutableDictionary *customGroupMap;
@property (retain, nonatomic) NSIndexPath *checkedRow;
@property (weak, nonatomic) id <EKStyleProvider> styleProvider;
@property (nonatomic) CDStruct_424d6339 flags;
@property (retain, nonatomic) NSMutableSet *selectedCalendarSet;
@property (retain, nonatomic) EKSource *limitedToSource;
@property (retain, nonatomic) _UIAccessDeniedView *accessDeniedView;
@property (retain, nonatomic) EKCalendarEditor *presentedEditor;
@property (nonatomic) _Bool canShowIdentityChooser;
@property (retain, nonatomic) UIRefreshControl *refreshControl;
@property (nonatomic) _Bool allowsRotation;
@property (retain, nonatomic) EKCalendar *selectedCalendar;
@property (nonatomic) int chooserMode;
@property (nonatomic) _Bool disableCalendarEditing;
@property (nonatomic) _Bool showsRefreshButton;
@property (nonatomic) _Bool allowsPullToRefresh;
@property (nonatomic) _Bool showsDeclinedEventsSetting;
@property (retain, nonatomic) EKEventStore *eventStore;
@property (nonatomic) int explanatoryTextMode;
@property (nonatomic) _Bool showAccountStatus;
@property (nonatomic) _Bool onlyShowUnmanagedAccounts;
@property (nonatomic) _Bool showDetailAccessories;
@property (nonatomic) _Bool allowsEdit;
@property (weak, nonatomic) id <EKCalendarChooserDelegate> delegate;
@property (nonatomic) _Bool showsDoneButton;
@property (nonatomic) _Bool showsCancelButton;
@property (copy, nonatomic) NSSet *selectedCalendars;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;

+ (id)hideAllString;
+ (id)showAllString;
+ (_Bool)groups:(id)arg1 differStructurallyFromGroups:(id)arg2;
+ (id)delegatesString;
+ (id)_subscribedLocalizedString;

- (void)loadView;
- (void)traitCollectionDidChange:(id)arg1;
- (struct CGSize)preferredContentSize;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewDidLayoutSubviews;
- (void)viewDidAppear:(_Bool)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (id)_tableHeaderView;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (void)tableView:(id)arg1 accessoryButtonTappedForRowWithIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didDeselectRowAtIndexPath:(id)arg2;
- (void)done:(id)arg1;
- (double)marginForTableView:(id)arg1;
- (void)refresh:(id)arg1;
- (void)cancel:(id)arg1;
- (void)groupShowAllTapped:(id)arg1;
- (void)_eventStoreChanged:(id)arg1;
- (void)calendarEditor:(id)arg1 didCompleteWithAction:(int)arg2;
- (void)accountRefreshFinished:(id)arg1;
- (id)initWithSelectionStyle:(long long)arg1 displayStyle:(long long)arg2 entityType:(unsigned long long)arg3 eventStore:(id)arg4 limitedToSource:(id)arg5 showIdentityChooser:(_Bool)arg6 showAccountStatus:(_Bool)arg7;
- (id)initWithSelectionStyle:(long long)arg1 displayStyle:(long long)arg2 eventStore:(id)arg3;
- (void)_ignoredErrorsChanged;
- (id)sourceForSelectedIdentity;
- (void)_updateDelegateSources;
- (void)_updateShowDelegateCalendarsCell;
- (id)_loadCalendars;
- (void)_setCalendars:(id)arg1 changedObjectsHint:(id)arg2;
- (void)_selectAllCalendarsAndStores:(_Bool)arg1;
- (void)_updateCurrentKnownCalendarIds;
- (void)_layoutNavToolbarControls;
- (void)_updateViewControllerTitle;
- (_Bool)_shouldShowIdentityChooser;
- (id)_contactForSource:(id)arg1;
- (id)_preferredAddressFromOwnerAddresses:(id)arg1;
- (void)_pulledToRefresh:(id)arg1;
- (_Bool)hasAccountThatCanCreateCalendars;
- (void)addCalendarButtonPressed;
- (_Bool)_applySelection;
- (void)showAllButtonPressed;
- (void)_finishRefreshing;
- (void)_setGroup:(id)arg1 withSourceIdentifier:(id)arg2;
- (id)_calendarSetToCalendarIdSet:(id)arg1;
- (void)_delegateSelectionDidChange;
- (id)_currentKnownCalendarIds;
- (id)_allCalendars;
- (id)_saveSelection;
- (void)_restoreSelection:(id)arg1 calendarsForSelectedSource:(id)arg2 allCalendars:(id)arg3;
- (void)_ensureWritableCalendarExists;
- (id)_calendarsForSelectedSource;
- (int)_numSelectedGroups;
- (void)setAllSelected:(_Bool)arg1;
- (void)populateGroupsForNonDelegateSources;
- (id)_groupForCustomGroupType:(int)arg1;
- (id)_groupForSource:(id)arg1;
- (void)_insertStoreIntoByGroupArray:(id)arg1;
- (id)_statusTextForGroup:(id)arg1;
- (void)_sendAnalyticsEvent:(unsigned long long)arg1 forGroup:(id)arg2;
- (void)_populateGroupsForCalendars:(id)arg1 includingAccountsWithoutCalendars:(_Bool)arg2 footersChanged:(_Bool *)arg3;
- (long long)_groupsOffset;
- (id)_groupForSection:(long long)arg1;
- (id)_indexPathForCalendar:(id)arg1;
- (id)_filterCalendars:(id)arg1;
- (_Bool)_tableShouldDisplayVerifyAccountCellForGroup:(id)arg1;
- (long long)_calendarRowOffsetForGroup:(id)arg1;
- (_Bool)_isDeclinedEventsSwitchSection:(long long)arg1;
- (_Bool)_isIdentityChooserSection:(long long)arg1;
- (_Bool)_isDelegateCalendarsCellSection:(long long)arg1;
- (_Bool)_shouldShowDelegateCalendarsCellSection;
- (_Bool)_shouldShowGroupNameInSection:(long long)arg1;
- (long long)_tableSectionRowToDelegateSourceIndex:(long long)arg1;
- (void)declinedEventsSwitchChanged:(id)arg1;
- (long long)_verifyAccountIndexForGroup:(id)arg1;
- (long long)_tableSectionRow:(long long)arg1 toCalendarIndexInGroup:(id)arg2;
- (id)_stringForSharedCalendar:(id)arg1;
- (id)_cellIdentifierWithSubtitle:(_Bool)arg1;
- (_Bool)_calendarAvailableForEditing:(id)arg1;
- (void)_selectGroup:(id)arg1 selected:(_Bool)arg2;
- (void)verifyAccountForGroup:(id)arg1;
- (void)_selectCalendar:(id)arg1 selected:(_Bool)arg2;
- (id)initWithSelectionStyle:(long long)arg1 displayStyle:(long long)arg2 entityType:(unsigned long long)arg3 eventStore:(id)arg4;
- (id)_viewModeTitle;
- (void)setShowAll:(_Bool)arg1;
- (void)setShowsWritableCalendarsOnly:(_Bool)arg1;
- (_Bool)showsWritableCalendarsOnly;

@end
