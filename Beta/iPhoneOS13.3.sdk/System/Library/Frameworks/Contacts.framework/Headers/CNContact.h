/*
 Image: /System/Library/Frameworks/Contacts.framework/Contacts
 */

#import <Foundation/NSObject.h>

#import <Contacts/Swift-Protocol.h>

@class CNActivityAlert, CNContactKeyVector, NSArray, NSData, NSDate, NSDateComponents, NSDictionary, NSSet, NSString, SGRecordId;

@protocol CNKeyDescriptor;

@interface CNContact : NSObject <Swift>

{
    NSString *_internalIdentifier;
    int _iOSLegacyIdentifier;
    NSString *_namePrefix;
    NSString *_givenName;
    NSString *_middleName;
    NSString *_familyName;
    NSString *_nameSuffix;
    NSString *_previousFamilyName;
    NSString *_nickname;
    NSString *_phoneticGivenName;
    NSString *_phoneticMiddleName;
    NSString *_phoneticFamilyName;
    NSString *_phoneticOrganizationName;
    NSString *_pronunciationGivenName;
    NSString *_pronunciationFamilyName;
    NSString *_sortingGivenName;
    NSString *_sortingFamilyName;
    NSString *_sectionForSortingByGivenName;
    NSString *_sectionForSortingByFamilyName;
    NSString *_organizationName;
    NSString *_departmentName;
    NSString *_jobTitle;
    NSDateComponents *_birthday;
    NSDateComponents *_nonGregorianBirthday;
    NSDate *_creationDate;
    NSDate *_modificationDate;
    NSString *_note;
    NSData *_imageData;
    struct CGRect _cropRect;
    NSData *_thumbnailImageData;
    NSData *_fullscreenImageData;
    NSData *_syncImageData;
    _Bool _imageDataAvailable;
    NSString *_linkIdentifier;
    _Bool _preferredForName;
    _Bool _preferredForImage;
    NSString *_phonemeData;
    long long _contactType;
    long long _displayNameOrder;
    NSArray *_phoneNumbers;
    NSArray *_emailAddresses;
    NSArray *_urlAddresses;
    NSArray *_dates;
    NSArray *_instantMessageAddresses;
    NSArray *_contactRelations;
    NSArray *_socialProfiles;
    NSArray *_postalAddresses;
    NSArray *_calendarURIs;
    NSString *_cardDAVUID;
    NSString *_externalIdentifier;
    NSData *_externalRepresentation;
    NSString *_externalModificationTag;
    NSString *_externalUUID;
    NSString *_externalImageURI;
    CNActivityAlert *_callAlert;
    CNActivityAlert *_textAlert;
    NSString *_storeIdentifier;
    NSDictionary *_storeInfo;
    CNContact *_snapshot;
    NSArray *_linkedContacts;
    NSString *_accountIdentifier;
    CNContactKeyVector *_availableKeyDescriptor;
    NSString *_mapsData;
    NSString *_searchIndex;
    NSString *_preferredLikenessSource;
    NSString *_preferredApplePersonaIdentifier;
    NSString *_preferredChannel;
    NSString *_ISOCountryCode;
    NSString *_downtimeWhitelist;
    NSString *_imageType;
    NSData *_imageHash;
    NSString *_cropRectID;
    NSData *_cropRectHash;
}

@property (copy, readonly) NSString *nameTitle;
@property (copy, readonly) NSString *firstName;
@property (copy, readonly) NSString *lastName;
@property (copy, readonly) NSString *maidenName;
@property (copy, readonly) NSString *phoneticFirstName;
@property (copy, readonly) NSString *phoneticLastName;
@property (copy, readonly) NSString *companyName;
@property (copy, nonatomic, readonly) NSArray *relatedNames;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;
@property (copy, nonatomic, readonly) NSArray *writableTypeIdentifiersForItemProvider;
@property (nonatomic, readonly) _Bool hasSuggestedProperties;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;
@property (nonatomic, readonly, getter=isSuggested) _Bool suggested;
@property (nonatomic, readonly) SGRecordId *suggestionRecordId;
@property (nonatomic, readonly) NSString *suggestionFoundInBundleId;
@property (nonatomic, readonly, getter=isSuggestedMe) _Bool suggestedMe;
@property (copy, nonatomic, readonly) NSString *internalIdentifier;
@property (copy, nonatomic, readonly) NSArray *calendarURIs;
@property (copy, nonatomic, readonly) NSString *cardDAVUID;
@property (copy, nonatomic, readonly) NSDictionary *activityAlerts;
@property (copy, nonatomic, readonly) NSString *storeIdentifier;
@property (copy, nonatomic, readonly) NSDictionary *storeInfo;
@property (copy, nonatomic, readonly) NSString *searchIndex;
@property (copy, nonatomic, readonly) NSString *accountIdentifier;
@property (nonatomic, readonly) id <CNKeyDescriptor> availableKeyDescriptor;
@property (nonatomic, readonly) NSSet *availableKeys;
@property (nonatomic, readonly) struct CGRect cropRect;
@property (copy, nonatomic, readonly) NSString *cropRectID;
@property (copy, nonatomic, readonly) NSData *cropRectHash;
@property (copy, nonatomic, readonly) CNActivityAlert *callAlert;
@property (copy, nonatomic, readonly) CNActivityAlert *textAlert;
@property (nonatomic, readonly) int iOSLegacyIdentifier;
@property (copy, nonatomic, readonly) NSString *externalIdentifier;
@property (copy, nonatomic, readonly) NSData *externalRepresentation;
@property (copy, nonatomic, readonly) NSString *externalModificationTag;
@property (copy, nonatomic, readonly) NSString *externalUUID;
@property (copy, nonatomic, readonly) NSString *externalImageURI;
@property (copy, nonatomic, readonly) NSString *fullName;
@property (copy, nonatomic, readonly) NSString *phoneticFullName;
@property (copy, nonatomic, readonly) NSString *linkIdentifier;
@property (copy, nonatomic, readonly) NSString *phonemeData;
@property (copy, nonatomic, readonly) NSString *sortingGivenName;
@property (copy, nonatomic, readonly) NSString *sortingFamilyName;
@property (copy, nonatomic, readonly) NSString *sectionForSortingByGivenName;
@property (copy, nonatomic, readonly) NSString *sectionForSortingByFamilyName;
@property (copy, nonatomic, readonly) NSString *phoneticCompanyName;
@property (copy, nonatomic, readonly) NSString *pronunciationGivenName;
@property (copy, nonatomic, readonly) NSString *pronunciationFamilyName;
@property (copy, nonatomic, readonly) NSDate *creationDate;
@property (copy, nonatomic, readonly) NSDate *modificationDate;
@property (nonatomic, readonly) long long displayNameOrder;
@property (copy, nonatomic, readonly) NSString *stringForIndexing;
@property (nonatomic, readonly, getter=isPreferredForName) _Bool preferredForName;
@property (nonatomic, readonly, getter=isPreferredForImage) _Bool preferredForImage;
@property (copy, nonatomic, readonly) NSString *preferredLikenessSource;
@property (copy, nonatomic, readonly) NSString *preferredApplePersonaIdentifier;
@property (copy, nonatomic, readonly) NSString *preferredChannel;
@property (copy, nonatomic, readonly) NSString *downtimeWhitelist;
@property (copy, nonatomic, readonly) NSString *imageType;
@property (copy, nonatomic, readonly) NSData *imageHash;
@property (nonatomic, readonly, getter=isUnified) _Bool unified;
@property (nonatomic, readonly) _Bool hasBeenPersisted;
@property (copy, nonatomic, readonly) NSArray *linkedContacts;
@property (copy, nonatomic, readonly) NSArray *mainStoreLinkedContacts;
@property (copy, nonatomic, readonly) NSString *mapsData;
@property (copy, nonatomic, readonly) NSData *fullscreenImageData;
@property (copy, nonatomic, readonly) NSData *syncImageData;
@property (copy, nonatomic, readonly) NSString *identifier;
@property (nonatomic, readonly) long long contactType;
@property (copy, nonatomic, readonly) NSString *namePrefix;
@property (copy, nonatomic, readonly) NSString *givenName;
@property (copy, nonatomic, readonly) NSString *middleName;
@property (copy, nonatomic, readonly) NSString *familyName;
@property (copy, nonatomic, readonly) NSString *previousFamilyName;
@property (copy, nonatomic, readonly) NSString *nameSuffix;
@property (copy, nonatomic, readonly) NSString *nickname;
@property (copy, nonatomic, readonly) NSString *organizationName;
@property (copy, nonatomic, readonly) NSString *departmentName;
@property (copy, nonatomic, readonly) NSString *jobTitle;
@property (copy, nonatomic, readonly) NSString *phoneticGivenName;
@property (copy, nonatomic, readonly) NSString *phoneticMiddleName;
@property (copy, nonatomic, readonly) NSString *phoneticFamilyName;
@property (copy, nonatomic, readonly) NSString *phoneticOrganizationName;
@property (copy, nonatomic, readonly) NSString *note;
@property (copy, nonatomic, readonly) NSData *imageData;
@property (copy, nonatomic, readonly) NSData *thumbnailImageData;
@property (nonatomic, readonly) _Bool imageDataAvailable;
@property (copy, nonatomic, readonly) NSArray *phoneNumbers;
@property (copy, nonatomic, readonly) NSArray *emailAddresses;
@property (copy, nonatomic, readonly) NSArray *postalAddresses;
@property (copy, nonatomic, readonly) NSArray *urlAddresses;
@property (copy, nonatomic, readonly) NSArray *contactRelations;
@property (copy, nonatomic, readonly) NSArray *socialProfiles;
@property (copy, nonatomic, readonly) NSArray *instantMessageAddresses;
@property (copy, nonatomic, readonly) NSDateComponents *birthday;
@property (copy, nonatomic, readonly) NSDateComponents *nonGregorianBirthday;
@property (copy, nonatomic, readonly) NSArray *dates;

+ (_Bool)supportsSecureCoding;
+ (id)objectWithItemProviderData:(id)arg1 typeIdentifier:(id)arg2 error:(id *)arg3;
+ (id)writableTypeIdentifiersForItemProvider;
+ (id)readableTypeIdentifiersForItemProvider;
+ (id)contact;
+ (id)predicateForContactsMatchingEmailAddress:(id)arg1;
+ (id)predicateForContactsMatchingPhoneNumber:(id)arg1;
+ (id)localizedStringForKey:(id)arg1;
+ (id)predicateForContactsWithIdentifiers:(id)arg1;
+ (id)predicateForMeContact;
+ (id)descriptorForRequiredKeysForSearchableItem;
+ (id)os_log;
+ (id)unifyContacts:(id)arg1;
+ (id)predicateForContactsMatchingPreferredChannel:(id)arg1 limitOne:(_Bool)arg2;
+ (id)identifierProvider;
+ (id)makeIdentifier;
+ (id)storeInfoFromCoder:(id)arg1 storeIdentifier:(id)arg2 key:(id)arg3;
+ (id)descriptorWithKeyDescriptors:(id)arg1 description:(id)arg2;
+ (id)predicateForContactsInContainerWithIdentifier:(id)arg1;
+ (id)makeIdentifierString;
+ (id)predicateForContactsInGroupWithIdentifier:(id)arg1;
+ (id)predicateForContactsMatchingName:(id)arg1;
+ (id)predicateForContactsMatchingName:(id)arg1 options:(unsigned long long)arg2;
+ (id)predicateForContactsWithOrganizationName:(id)arg1;
+ (id)predicateForContactMatchingEmailAddress:(id)arg1;
+ (id)predicateForContactsMatchingEmailAddress:(id)arg1 groupIdentifiers:(id)arg2 limitToOneResult:(_Bool)arg3;
+ (id)predicateForContactsMatchingPhoneNumber:(id)arg1 prefixHint:(id)arg2 groupIdentifiers:(id)arg3 limitToOneResult:(_Bool)arg4;
+ (id)predicateForContactsMatchingHandleStrings:(id)arg1;
+ (id)predicateForContactsMatchingHandleStrings:(id)arg1 inContainersWithIdentifiers:(id)arg2;
+ (id)predicateForContactsMatchingPostalAddress:(id)arg1;
+ (id)predicateForContactsLinkedToContactWithIdentifier:(id)arg1;
+ (id)predicateForContactsLinkedToContact:(id)arg1;
+ (id)predicateForContactsMatchingFullTextSearch:(id)arg1 containerIdentifiers:(id)arg2 groupIdentifiers:(id)arg3;
+ (id)predicateForContactMatchingMapString:(id)arg1;
+ (id)predicateForContactMatchingPhoneNumber:(id)arg1;
+ (id)predicateForContactsMatchingPhoneNumber:(id)arg1 prefixHint:(id)arg2;
+ (id)predicateForContactMatchingPhoneNumberWithDigits:(id)arg1 countryCode:(id)arg2;
+ (id)predicateForPreferredNameInRange:(struct _NSRange)arg1;
+ (id)predicateForPreferredNameInContainersWithIdentifiers:(id)arg1 groupsWithIdentifiers:(id)arg2;
+ (id)predicateForContactsMatchingString:(id)arg1 accountIdentifier:(id)arg2 containerIdentifier:(id)arg3 groupIdentifier:(id)arg4;
+ (id)predicateForContactMatchingURLString:(id)arg1;
+ (id)predicateForContactMatchingLabeledValueIdentifier:(id)arg1;
+ (id)predicateForContactMatchingEKParticipantWithName:(id)arg1 emailAddress:(id)arg2 URL:(id)arg3 predicateDescription:(id)arg4;
+ (id)predicateForLegacyIdentifier:(unsigned int)arg1;
+ (id)predicateForContactsMatchingSocialProfile:(id)arg1;
+ (id)predicateForContactsMatchingInstantMessageAddress:(id)arg1;
+ (id)predicateForContactsWithNonUnifiedIdentifiers:(id)arg1;
+ (id)predicateForFaultFulfillmentForLegacyIdentifier:(unsigned int)arg1 identifier:(id)arg2;
+ (id)predicateForAllContacts;
+ (id)contactWithIdentifier:(id)arg1;
+ (id)contactFromPerson:(void *)arg1 keysToFetch:(id)arg2 mutable:(_Bool)arg3;
+ (id)alwaysFetchedKeys;
+ (id)contactFromPerson:(void *)arg1 keysToFetch:(id)arg2;
+ (id)contactPropertyKeyFromABPropertyID:(int)arg1;
+ (int)abPropertyIDfromContactPropertyKey:(id)arg1;
+ (id)contactFromPublicABPerson:(void *)arg1 keysToFetch:(id)arg2 mutable:(_Bool)arg3;
+ (id)contactPropertyKeyFromPublicABPropertyID:(int)arg1;
+ (int)publicABPropertyIDFromContactPropertyKey:(id)arg1;
+ (id)contactFromPublicABPerson:(void *)arg1 keysToFetch:(id)arg2;
+ (id)contactWithContact:(id)arg1;
+ (void)you_used_a_property_that_you_didnt_request_when_you_fetched_the_contact;
+ (void)freezeIfInstancetypeIsImmutable:(id)arg1;
+ (id)contactWithDisplayName:(id)arg1 handleStrings:(id)arg2;
+ (id)_contactWithContact:(id)arg1 createNewInstance:(_Bool)arg2 propertyDescriptions:(id)arg3;
+ (id)contactWithDisplayName:(id)arg1 emailOrPhoneNumber:(id)arg2;
+ (id)newContactWithPropertyKeys:(id)arg1 withValuesFromContact:(id)arg2;
+ (id)makeContactAndMergeValuesFromAvailableKeysInContact:(id)arg1;
+ (id)descriptorForAllComparatorKeys;
+ (id)descriptorForKeyDescriptors:(id)arg1 description:(id)arg2;
+ (CDUnknownBlockType)comparatorForNameSortOrder:(long long)arg1;
+ (CDUnknownBlockType)preferredImageComparator;
+ (id)previewURLForContact:(id)arg1;
+ (id)contactWithArchivedData:(id)arg1 error:(id *)arg2;
+ (id)contactWithVCardData:(id)arg1 error:(id *)arg2;
+ (id)contactFromSuggestion:(id)arg1;
+ (id)contactIdentifierFromSuggestionID:(id)arg1;
+ (id)suggestionIDFromContactIdentifier:(id)arg1;
+ (id)predicateForSuggestionIdentifier:(unsigned long long)arg1;

- (id)init;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1;
- (id)loadDataWithTypeIdentifier:(id)arg1 forItemProviderCompletionHandler:(CDUnknownBlockType)arg2;
- (_Bool)hasChanges;
- (id)snapshot;
- (id)shortDebugDescription;
- (_Bool)areKeysAvailable:(id)arg1;
- (id)searchableItemForIndexing;
- (void)assertKeysAreAvailable:(id)arg1;
- (id)linkedContactsFromStoreWithIdentifier:(id)arg1;
- (_Bool)isEqualIgnoringIdentifiers:(id)arg1;
- (id)_searchableItemIncludingInternalAttributes:(_Bool)arg1;
- (id)_filteredArrayForValidValues:(id)arg1;
- (id)searchableItemForDragging;
- (id)searchableItemAttributeSetForUserActivity;
- (id)keyVector;
- (_Bool)isKeyAvailable:(id)arg1;
- (id)initWithIdentifier:(id)arg1 availableKeyDescriptor:(id)arg2;
- (void *)detachedPersonWithError:(id *)arg1;
- (_Bool)overwritePerson:(void *)arg1 error:(id *)arg2;
- (void *)detachedPerson;
- (_Bool)overwritePerson:(void *)arg1;
- (_Bool)overwritePublicABPerson:(void *)arg1;
- (_Bool)updateNewPublicABPerson:(void *)arg1 inAddressBook:(void *)arg2;
- (void)assertKeyIsAvailable:(id)arg1;
- (id)copyWithSelfAsSnapshot;
- (_Bool)preferredForName;
- (_Bool)preferredForImage;
- (id)diffToSnapshotAndReturnError:(id *)arg1;
- (id)copyWithPropertyKeys:(id)arg1;
- (id)areKeysAvailable:(id)arg1 useIgnorableKeys:(_Bool)arg2 findMissingKeys:(_Bool)arg3;
- (_Bool)areAllAvailableKeysEqualToContact:(id)arg1 ignoringIdentifiers:(_Bool)arg2;
- (_Bool)areAllPropertiesButContactIdentifierEqualToContact:(id)arg1;
- (_Bool)isProperty:(id)arg1 equalToOtherIgnoreIdentifiers:(id)arg2;
- (_Bool)areAllPropertiesEqualToContactIgnoringIdentifiers:(id)arg1;
- (id)copyWithDistinctIdentifier;
- (_Bool)isUnifiedWithContactWithIdentifier:(id)arg1;
- (id)linkedIdentifierMap;
- (id)copyWithNoSuggestion;

@end
