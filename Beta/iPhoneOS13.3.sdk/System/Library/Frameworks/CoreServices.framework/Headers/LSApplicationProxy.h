/*
 Image: /System/Library/Frameworks/CoreServices.framework/CoreServices
 */

#import <CoreServices/LSBundleProxy.h>

@class NSArray, NSDate, NSDictionary, NSNumber, NSProgress, NSSet, NSString, NSUUID, _LSApplicationState, _LSDiskUsage, _LSLazyPropertyList;

@interface LSApplicationProxy : LSBundleProxy

{
    NSString *_deviceIdentifierVendorName;
    NSArray *_pluginUUIDs;
    NSNumber *_versionID;
    NSDictionary *_claimHandlerRanks;
    unsigned int _platform;
    NSArray *_managedPersonas;
    _LSLazyPropertyList *_siriActionDefinitionURLs;
    _Bool _standaloneWatchApp;
    _Bool _runsIndependentlyOfCompanionApp;
    _Bool _userInitiatedUninstall;
    int _bundleModTime;
    NSArray *_plugInKitPlugins;
    NSString *_signerOrganization;
    NSString *_companionApplicationIdentifier;
    NSArray *_counterpartIdentifiers;
    NSDate *_registeredDate;
    NSNumber *_itemID;
    NSString *_vendorName;
    NSString *_itemName;
    NSString *_genre;
    NSNumber *_genreID;
    NSString *_minimumSystemVersion;
    NSString *_maximumSystemVersion;
    NSString *_shortVersionString;
    NSString *_preferredArchitecture;
    _LSDiskUsage *_diskUsage;
    _LSApplicationState *_appState;
    NSNumber *_purchaserDSID;
    NSNumber *_downloaderDSID;
    NSNumber *_familyID;
    unsigned long long _installType;
    unsigned long long _originalInstallType;
    NSArray *_deviceFamily;
    NSArray *_activityTypes;
    NSString *_teamID;
    NSNumber *_storeFront;
    NSNumber *_ratingRank;
    NSString *_ratingLabel;
    NSString *_sourceAppIdentifier;
    NSString *_applicationVariant;
    NSString *_watchKitVersion;
    NSString *_complicationPrincipalClass;
    NSArray *_supportedComplicationFamilies;
    NSNumber *_installFailureReason;
    NSString *_appStoreToolsBuildVersion;
    NSSet *_claimedDocumentContentTypes;
    NSSet *_claimedURLSchemes;
    NSArray *_backgroundTaskSchedulerPermittedIdentifiers;
}

@property (nonatomic) _Bool userInitiatedUninstall;
@property (nonatomic, readonly) _Bool supportsAlternateIconNames;
@property (nonatomic, readonly) int bundleModTime;
@property (nonatomic, readonly) NSString *applicationIdentifier;
@property (nonatomic, readonly) NSString *companionApplicationIdentifier;
@property (nonatomic, readonly) NSArray *counterpartIdentifiers;
@property (nonatomic, readonly) NSDate *registeredDate;
@property (nonatomic, readonly) NSNumber *itemID;
@property (nonatomic, readonly) NSString *vendorName;
@property (nonatomic, readonly) NSString *itemName;
@property (nonatomic, readonly) NSString *storeCohortMetadata;
@property (nonatomic, readonly) NSString *genre;
@property (nonatomic, readonly) NSNumber *genreID;
@property (nonatomic, readonly) NSArray *subgenres;
@property (nonatomic, readonly) NSArray *staticShortcutItems;
@property (nonatomic, readonly) NSString *minimumSystemVersion;
@property (nonatomic, readonly) NSString *maximumSystemVersion;
@property (nonatomic, readonly) NSString *shortVersionString;
@property (nonatomic, readonly) NSString *preferredArchitecture;
@property (nonatomic, readonly) NSString *applicationType;
@property (nonatomic, readonly) NSArray *directionsModes;
@property (nonatomic, readonly) NSArray *UIBackgroundModes;
@property (nonatomic, readonly) NSArray *audioComponents;
@property (nonatomic, readonly) NSUUID *deviceIdentifierForVendor;
@property (nonatomic, readonly) NSUUID *deviceIdentifierForAdvertising;
@property (nonatomic, readonly) NSProgress *installProgress;
@property (nonatomic, readonly) NSNumber *staticDiskUsage;
@property (nonatomic, readonly) NSNumber *dynamicDiskUsage;
@property (nonatomic, readonly) NSNumber *ODRDiskUsage;
@property (nonatomic, readonly) _LSDiskUsage *diskUsage;
@property (nonatomic, readonly) _LSApplicationState *appState;
@property (nonatomic, readonly, getter=isInstalled) _Bool installed;
@property (nonatomic, readonly, getter=isPlaceholder) _Bool placeholder;
@property (nonatomic, readonly, getter=isRestricted) _Bool restricted;
@property (nonatomic, readonly, getter=isRemovedSystemApp) _Bool removedSystemApp;
@property (nonatomic, readonly) NSArray *VPNPlugins;
@property (nonatomic, readonly) NSArray *plugInKitPlugins;
@property (nonatomic, readonly) NSArray *appTags;
@property (nonatomic, readonly) NSString *applicationDSID;
@property (nonatomic, readonly) NSNumber *purchaserDSID;
@property (nonatomic, readonly) NSNumber *downloaderDSID;
@property (nonatomic, readonly) NSNumber *familyID;
@property (nonatomic, readonly) unsigned long long installType;
@property (nonatomic, readonly) unsigned long long originalInstallType;
@property (nonatomic, readonly) NSArray *requiredDeviceCapabilities;
@property (nonatomic, readonly) NSArray *deviceFamily;
@property (nonatomic, readonly) NSArray *activityTypes;
@property (nonatomic, readonly) NSArray *externalAccessoryProtocols;
@property (nonatomic, readonly) NSString *teamID;
@property (nonatomic, readonly) NSString *appIDPrefix;
@property (nonatomic, readonly) NSNumber *storeFront;
@property (nonatomic, readonly) NSNumber *externalVersionIdentifier;
@property (nonatomic, readonly) NSNumber *betaExternalVersionIdentifier;
@property (nonatomic, readonly) NSNumber *ratingRank;
@property (nonatomic, readonly) NSString *ratingLabel;
@property (nonatomic, readonly) NSString *sourceAppIdentifier;
@property (nonatomic, readonly) NSString *applicationVariant;
@property (nonatomic, readonly, getter=isAppUpdate) _Bool appUpdate;
@property (nonatomic, readonly) _Bool hasParallelPlaceholder;
@property (nonatomic, readonly, getter=isNewsstandApp) _Bool newsstandApp;
@property (nonatomic, readonly, getter=isWhitelisted) _Bool whitelisted;
@property (nonatomic, readonly, getter=isAppStoreVendable) _Bool appStoreVendable;
@property (nonatomic, readonly, getter=isDeviceBasedVPP) _Bool deviceBasedVPP;
@property (nonatomic, readonly, getter=isBetaApp) _Bool betaApp;
@property (nonatomic, readonly, getter=isAdHocCodeSigned) _Bool adHocCodeSigned;
@property (nonatomic, readonly) _Bool supportsAudiobooks;
@property (nonatomic, readonly, getter=isLaunchProhibited) _Bool launchProhibited;
@property (nonatomic, readonly) _Bool supportsODR;
@property (nonatomic, readonly) _Bool hasSettingsBundle;
@property (nonatomic, readonly) _Bool supportsExternallyPlayableContent;
@property (nonatomic, readonly) _Bool supportsOpenInPlace;
@property (nonatomic, readonly) _Bool fileSharingEnabled;
@property (nonatomic, readonly) _Bool iconIsPrerendered;
@property (nonatomic, readonly) _Bool iconUsesAssetCatalog;
@property (nonatomic, readonly, getter=isPurchasedReDownload) _Bool purchasedReDownload;
@property (nonatomic, readonly) _Bool hasMIDBasedSINF;
@property (nonatomic, readonly) _Bool missingRequiredSINF;
@property (nonatomic, readonly) _Bool supportsPurgeableLocalStorage;
@property (nonatomic, readonly, getter=isDeletable) _Bool deletable;
@property (nonatomic, readonly) NSArray *managedPersonas;
@property (nonatomic, readonly, getter=isRemoveableSystemApp) _Bool removeableSystemApp;
@property (nonatomic, readonly, getter=isWatchKitApp) _Bool watchKitApp;
@property (nonatomic, readonly) NSString *watchKitVersion;
@property (nonatomic, readonly) NSString *complicationPrincipalClass;
@property (nonatomic, readonly) NSArray *supportedComplicationFamilies;
@property (nonatomic, readonly) _Bool hasCustomNotification;
@property (nonatomic, readonly) _Bool hasComplication;
@property (nonatomic, readonly) _Bool hasGlance;
@property (nonatomic, readonly) _Bool shouldSkipWatchAppInstall;
@property (nonatomic, readonly, getter=isGameCenterEnabled) _Bool gameCenterEnabled;
@property (nonatomic, readonly) _Bool gameCenterEverEnabled;
@property (nonatomic, readonly) NSNumber *installFailureReason;
@property (nonatomic, readonly) long long deviceManagementPolicy;
@property (nonatomic, readonly) NSDictionary *siriActionDefinitionURLs;
@property (nonatomic, readonly) NSString *appStoreToolsBuildVersion;
@property (nonatomic, readonly) NSSet *claimedDocumentContentTypes;
@property (nonatomic, readonly) NSSet *claimedURLSchemes;
@property (nonatomic, readonly) _Bool canHandleWebAuthentication;
@property (nonatomic, readonly) _Bool supportsMultiwindow;
@property (nonatomic, readonly) NSNumber *platform;
@property (nonatomic, readonly) NSArray *backgroundTaskSchedulerPermittedIdentifiers;
@property (nonatomic, readonly, getter=isStandaloneWatchApp) _Bool standaloneWatchApp;
@property (nonatomic, readonly) _Bool runsIndependentlyOfCompanionApp;
@property (nonatomic, readonly, getter=isArcadeApp) _Bool arcadeApp;
@property (nonatomic, readonly) NSArray *carPlayInstrumentClusterURLSchemes;

+ (_Bool)supportsSecureCoding;
+ (id)applicationProxyForIdentifier:(id)arg1 placeholder:(_Bool)arg2;
+ (id)applicationProxyForSystemPlaceholder:(id)arg1;
+ (id)applicationProxyForIdentifier:(id)arg1;
+ (id)applicationProxyForBundleURL:(id)arg1;
+ (id)applicationProxyWithBundleUnitID:(unsigned int)arg1 withContext:(struct LSContext *)arg2;
+ (id)applicationProxyForIdentifier:(id)arg1 withContext:(struct LSContext *)arg2;
+ (id)applicationProxyForBundleType:(unsigned long long)arg1 identifier:(id)arg2 isCompanion:(_Bool)arg3 URL:(id)arg4 itemID:(id)arg5 bundleUnit:(unsigned int *)arg6;
+ (id)iconQueue;
+ (id)applicationProxyForCompanionIdentifier:(id)arg1;
+ (id)applicationProxyForItemID:(id)arg1;

- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)uniqueIdentifier;
- (_Bool)isDeletableIgnoringRestrictions;
- (void)clearAdvertisingIdentifier;
- (id)_initWithBundleUnit:(unsigned int)arg1 context:(struct LSContext *)arg2 applicationIdentifier:(id)arg3;
- (id)_managedPersonas;
- (id)iconDataForVariant:(int)arg1 withOptions:(int)arg2;
- (_Bool)_usesSystemPersona;
- (void)setAlternateIconName:(id)arg1 withResult:(CDUnknownBlockType)arg2;
- (id)alternateIconName;
- (id)getBundleMetadata;
- (id)installProgressSync;
- (id)iconDataForVariant:(int)arg1;
- (id)primaryIconDataForVariant:(int)arg1;
- (_Bool)profileValidated;
- (_Bool)UPPValidated;
- (void)getDeviceManagementPolicyWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)handlerRankOfClaimForContentType:(id)arg1;
- (id)signerOrganization;
- (id)localizedNameForContext:(id)arg1 preferredLocalizations:(id)arg2 useShortNameOnly:(_Bool)arg3;
- (id)localizedNameForContext:(id)arg1;
- (id)localizedNameForContext:(id)arg1 preferredLocalizations:(id)arg2;
- (id)_localizedNameWithPreferredLocalizations:(id)arg1 useShortNameOnly:(_Bool)arg2;

@end
