/*
 Image: /System/Library/PrivateFrameworks/PASampling.framework/PASampling
 */

#import <Foundation/NSObject.h>

@class NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSSet, NSString, PABinaryLocator, PAGenealogyTracker, PAImageInfo, PAMountStatusTracker, PASampleTimeInsensitiveTaskData, PASymbolDataStore, PAWSUpdateDataStore;

@interface PASampleTimeSeriesDataStore : NSObject

{
    NSMutableDictionary *_timeInsensitiveTaskDataDict;
    NSMutableArray *_timeSensitiveSampleDataArray;
    double _startMachTimestamp;
    double _endMachTimestamp;
    double _startWallTimestamp;
    double _endWallTimestamp;
    double _lastWakeTime;
    _Bool _sanitizePaths;
    _Bool _omitThirdPartyProcessStacks;
    _Bool _omitSensitiveStrings;
    NSMutableArray *_fanSpeedArray;
    PAGenealogyTracker *_genealogyTracker;
    PAMountStatusTracker *_mountStatusTracker;
    PAWSUpdateDataStore *_wsDataStore;
    NSMutableSet *_rootKernelFrames;
    PABinaryLocator *_binaryLocator;
    PASymbolDataStore *_symbolDataStore;
    _Bool _usingDsymForUUIDForEverything;
    NSMutableArray *_namesForDsymForUUID;
    NSMutableArray *_numsForDsymForUUID;
    NSMutableDictionary *_symbolHandleCache;
    NSMutableDictionary *_oldSymbolHandleCache;
    NSMutableSet *_pidsToTrack;
    NSMutableArray *_hidEvents;
    unsigned long long _dataSource;
    NSString *_reason;
    _Bool _expectsLiveProcesses;
    _Bool _gatheredNonTimeCriticalDataFromLiveSystem;
    _Bool _shouldPreemptivelyCacheSymbolicators;
    _Bool _shouldSymbolicate;
    _Bool _sampleOnlyMainThreads;
    _Bool _shouldGatherKextStat;
    double _timeWhenTransitionedToSamplingAllProcesses;
    int _targetProcessId;
    PASampleTimeInsensitiveTaskData *_targetTask;
    unsigned long long _targetThreadId;
    unsigned long long _targetHIDEventMachAbs;
    unsigned int _cpuPercent;
    unsigned int _cpuDuration;
    unsigned int _wakeupsPerSec;
    unsigned int _wakeupsDuration;
    NSString *_event;
    NSString *_eventNote;
    NSString *_signature;
    double _extraDuration;
    NSString *_durationNote;
    NSString *_stepsNote;
    double _attemptedSamplingInterval;
    NSString *_kextStat;
    NSString *_kernelVersion;
    NSString *_osProductName;
    NSString *_osProductVersion;
    NSString *_osBuildVersion;
    NSString *_machineArchitecture;
    unsigned int _workQueueSoftThreadLimit;
    unsigned int _workQueueHardThreadLimit;
    NSString *_hardwareModel;
    unsigned int _numActiveCPUs;
    NSString *_bootArgs;
    NSString *_targetProcessBundleVersion;
    NSString *_targetProcessBundleShortVersion;
    NSString *_targetProcessBundleBuildVersion;
    NSString *_targetProcessBundleProjectName;
    NSString *_targetProcessBundleSourceVersion;
    NSString *_targetProcessBundleProductBuildVersion;
    NSString *_targetProcessBundleId;
    NSString *_targetProcessCommerceAppID;
    NSString *_targetProcessCommerceExternalID;
    unsigned long long _previousSampleTimestamp;
    unsigned int _previousStackshotBufferSize;
    struct mach_timebase_info _machTimebase;
    struct _CSArchitecture _arch;
    unsigned int _threadPolicyVersion;
}

@property (nonatomic, readonly) NSDictionary *tidToTidStateChangeArrayDictionary;
@property (nonatomic, readonly) NSDictionary *pidToPidStateChangeArrayDictionary;
@property (nonatomic, readonly) NSSet *idleThreadSet;
@property (nonatomic, readonly) NSDictionary *pidToTidSetDict;
@property (nonatomic, readonly) NSDictionary *tidToPidDict;
@property (readonly) unsigned long long dataSource;
@property (copy) NSString *reason;
@property (readonly) double lastWakeTime;
@property (readonly) PAImageInfo *kernelCache;
@property (readonly) double startMachTimestamp;
@property (readonly) double endMachTimestamp;
@property (readonly) double startWallTimestamp;
@property (readonly) double endWallTimestamp;
@property (readonly) unsigned long long numSamples;
@property (readonly) NSArray *samples;
@property (readonly) PAMountStatusTracker *mountStatusTracker;
@property (readonly) PAGenealogyTracker *genealogyTracker;
@property (readonly) NSArray *hidEvents;
@property _Bool expectsLiveProcesses;
@property _Bool shouldPreemptivelyCacheSymbolicators;
@property _Bool shouldSymbolicate;
@property _Bool shouldUseDsymForUUIDToFindBinaries;
@property _Bool sampleOnlyMainThreads;
@property double timeWhenTransitionedToSamplingAllProcesses;
@property _Bool sanitizePaths;
@property _Bool omitThirdPartyProcessStacks;
@property _Bool omitSensitiveStrings;
@property _Bool shouldGatherKextStat;
@property (copy, readonly) NSString *kextStat;
@property (readonly) NSString *kernelVersion;
@property (copy) NSString *osProductName;
@property (copy) NSString *osProductVersion;
@property (copy) NSString *osBuildVersion;
@property (copy) NSString *machineArchitecture;
@property (readonly) unsigned int workQueueSoftThreadLimit;
@property (readonly) unsigned int workQueueHardThreadLimit;
@property (copy) NSString *hardwareModel;
@property unsigned int numActiveCPUs;
@property (copy) NSString *bootArgs;
@property int targetProcessId;
@property unsigned long long targetThreadId;
@property unsigned long long targetHIDEventMachAbs;
@property unsigned int cpuPercent;
@property unsigned int cpuDuration;
@property unsigned int wakeupsPerSec;
@property unsigned int wakeupsDuration;
@property (copy) NSString *event;
@property (copy) NSString *eventNote;
@property (copy) NSString *signature;
@property double extraDuration;
@property (copy) NSString *durationNote;
@property (copy) NSString *stepsNote;
@property double attemptedSamplingInterval;
@property (readonly) NSString *targetProcessName;
@property (readonly) NSString *targetProcessAbsolutePath;
@property (readonly) NSString *targetProcessBundleName;
@property (readonly) NSString *targetProcessBundleVersion;
@property (readonly) NSString *targetProcessBundleShortVersion;
@property (readonly) NSString *targetProcessBundleBuildVersion;
@property (readonly) NSString *targetProcessBundleProjectName;
@property (readonly) NSString *targetProcessBundleSourceVersion;
@property (readonly) NSString *targetProcessBundleProductBuildVersion;
@property (readonly) NSString *targetProcessBundleId;
@property (readonly) NSString *targetProcessCommerceAppID;
@property (readonly) NSString *targetProcessCommerceExternalID;

+ (_Bool)supportsSecureCoding;
+ (_Bool)canOpenFileAsKTraceFile:(const char *)arg1 errorOut:(id *)arg2;
+ (id)sampleStoreForKTraceFile:(const char *)arg1 warningsOut:(id)arg2 errorOut:(id *)arg3;
+ (void)_sortStateChangeArraysOfSampleStore:(id)arg1;
+ (id)newSampleStoreFromFilePath:(const char *)arg1 warningsOut:(id)arg2 errorOut:(id *)arg3;

- (id)init;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)targetTask;
- (void)gatherExtraInfoForTargetProcess:(id)arg1;
- (void)gatherKextStat;
- (void)gatherKernelVersion;
- (void)gatherOsVersions;
- (void)gatherMachineArchitecture;
- (void)gatherWorkQueueSoftThreadLimit;
- (void)gatherWorkQueueHardThreadLimit;
- (void)gatherHardwareModel;
- (void)gatherNumActiveCPUs;
- (void)gatherBootArgs;
- (struct _CSArchitecture)arch;
- (void)useDsymForUUIDFor:(id)arg1;
- (_Bool)setTargetProcessWithHint:(id)arg1;
- (_Bool)cacheLoadInfoForProcess:(int)arg1;
- (void)startingSamplingLiveSystem;
- (void)addProcessInfoFromTailspin:(id)arg1;
- (unsigned long long)addKCDataStackshots:(id)arg1 createSeparateSamplePerStackshot:(_Bool)arg2;
- (void)setArch:(struct _CSArchitecture)arg1;
- (struct mach_timebase_info)machTimebase;
- (void)setMachTimebase:(struct mach_timebase_info)arg1;
- (void)addSymbolsFromTailspin:(id)arg1;
- (id)tidsForPid:(int)arg1;
- (void)addDsymPaths:(id)arg1;
- (id)symbolHandleForAddress:(unsigned long long)arg1 inLivingPid:(int)arg2;
- (void)addDSCSymFromBuffer:(const void *)arg1 withLength:(unsigned long long)arg2;
- (void)setPidToTidSetDict:(id)arg1;
- (void)setTidToPidDict:(id)arg1;
- (void)setTidToTidStateChangeArrayDictionary:(id)arg1;
- (void)setPidToPidStateChangeArrayDictionary:(id)arg1;
- (void)setIdleThreadSet:(id)arg1;
- (void)_asynchronouslyCacheSymbolicatorForPid:(int)arg1;
- (id)timeInsensitiveTaskDataPid:(int)arg1 andUniqueId:(unsigned long long)arg2 andName:(const char *)arg3 didExec:(_Bool)arg4;
- (void)_addPid:(int)arg1 tid:(unsigned long long)arg2;
- (id)getMissingSampleTaskInCurrentSampleForPid:(int)arg1 andTaskName:(const char *)arg2 didExecSinceLastSample:(_Bool)arg3 needNewTaskForThisSample:(_Bool)arg4;
- (void)_addProcessStateChangeToArray:(id)arg1;
- (void)_addThreadStateChange:(id)arg1;
- (id)getMissingSampleThreadInCurrentSampleInTask:(id)arg1 forTid:(unsigned long long)arg2 needNewThreadForThisSample:(_Bool)arg3;
- (id)addKernelStack:(id)arg1;
- (id)_latestThreadStateChangeForTid:(unsigned long long)arg1;
- (id)_latestProcessStateChangeForPid:(int)arg1;
- (double)timeForMachAbsTime:(unsigned long long)arg1;
- (id)timeInsensitiveTaskDataForKCDataStackshotTask:(const struct task_snapshot_v2 *)arg1 withLoadInfos:(const struct dyld_uuid_info_64 *)arg2 numLoadInfos:(unsigned int)arg3 andMachineArchitecture:(struct _CSArchitecture)arg4;
- (void)backfillKPerfTaskWithDataFromKCDataTask:(const struct task_snapshot_v2 *)arg1;
- (void)backfillKPerfThreadWithDataFromKCDataThread:(const struct thread_snapshot_v2 *)arg1 inPid:(int)arg2 withLeafUserFrame:(id)arg3 andLeafKernelFrame:(id)arg4 andName:(const char *)arg5 taskIsSuspended:(_Bool)arg6 threadInstructionCycles:(const struct instrs_cycles_snapshot *)arg7;
- (id)_firstPetSampleAfterTime:(double)arg1;
- (int)_addKPerfDataFromKTraceSession:(struct ktrace_session *)arg1 beforeTime:(unsigned long long)arg2;
- (unsigned long long)_backfillPETSamplesUsingKCDataStackshotFromBuffer:(const void *)arg1 withLength:(unsigned long long)arg2;
- (void)_addTidToIdleThreadSet:(unsigned long long)arg1;
- (int)pidForTid:(unsigned long long)arg1;
- (void)cacheSymbolInformationForAllSymbols;
- (id)symbolHandleForAddress:(unsigned long long)arg1 inSampleTask:(id)arg2;
- (void)flushCachedSymbolicatorForTask:(id)arg1;
- (id)symbolHandleForOffset:(unsigned long long)arg1 inBinaryWithUUID:(id)arg2 inSampleTask:(id)arg3;
- (id)newArrayOfSamplesForSampleIndexRangeStart:(unsigned long long)arg1 end:(unsigned long long)arg2;
- (_Bool)hasSampleOnOrAfterTime:(double)arg1 returningFirstIndex:(unsigned long long *)arg2;
- (id)newArrayOfSamplesForTimeRangeWithMachStartTime:(double)arg1 andEndTime:(double)arg2;
- (_Bool)hasSampleOnOrAfterWallTime:(double)arg1 returningFirstIndex:(unsigned long long *)arg2;
- (id)newArrayOfSamplesForTimeRangeWithWallClockStartTime:(double)arg1 andEndTime:(double)arg2;
- (id)fanSpeedClosestToMachTime:(double)arg1;
- (void)printFrameRateReportWithStartSampleIndex:(unsigned long long)arg1 andEndIndex:(unsigned long long)arg2 andStartDisplayIndex:(unsigned long long)arg3 toStream:(id)arg4;
- (id)copyImageInfosForPid:(int)arg1;
- (unsigned long long)_addKCDataStackshotFromBuffer:(const void *)arg1 withLength:(unsigned long long)arg2 toSample:(id)arg3 shouldSkipSampleOut:(_Bool *)arg4;
- (void)_addSampleToSampleArray:(id)arg1;
- (id)timeInsensitiveTaskDataForKCDataStackshotDeltaTask:(const struct task_delta_snapshot_v2 *)arg1 withLoadInfos:(const struct dyld_uuid_info_64 *)arg2 numLoadInfos:(unsigned int)arg3 andMachineArchitecture:(struct _CSArchitecture)arg4;
- (_Bool)addKCDataThreadV4:(const struct thread_snapshot_v4 *)arg1 orKCDataThreadV2:(const struct thread_snapshot_v2 *)arg2 orDeltaThreadV3:(const struct thread_delta_snapshot_v3 *)arg3 orDeltaThreadV2:(const struct thread_delta_snapshot_v2 *)arg4 withStack:(id)arg5 andName:(const char *)arg6 andWaitInfo:(const struct stackshot_thread_waitinfo *)arg7 andInstructionCycles:(const struct instrs_cycles_snapshot *)arg8 toTask:(id)arg9 withCurrentThreads:(id)arg10 withPreviousThreads:(id)arg11;
- (id)timeInsensitiveTaskDataForUniqueId:(unsigned long long)arg1;
- (_Bool)_addStackshot:(id)arg1;
- (id)timeInsensitiveTaskDataForStackshotTask:(id)arg1 andMachineArchitecture:(struct _CSArchitecture)arg2;
- (void)gatherOccasionalLiveDataForMachTime:(double)arg1;
- (void)doneSamplingLiveSystem;
- (void)gatherNonTimeCriticalDataFromLiveSystem;
- (id)cachedSymbolHandleForAddress:(unsigned long long)arg1 inPid:(int)arg2;
- (void)flushAllSymbolicators;
- (void)flushAllCachedSymbolInformation;
- (id)sharedCacheInfoForSampleTask:(id)arg1;
- (id)sharedCacheImageInfosForSharedCacheInfo:(id)arg1;
- (void)setDSCSymDir:(id)arg1;
- (unsigned long long)addKCDataStackshotFromBuffer:(const void *)arg1 withLength:(unsigned long long)arg2;
- (unsigned long long)addStackshots:(id)arg1;
- (void)addStackshot:(id)arg1;
- (void)addPidToSampledPids:(int)arg1;
- (void)addPidsWithNameToSampledPids:(id)arg1;
- (void)sampleTrackedPidsNow;

@end
