/*
 Image: /System/Library/PrivateFrameworks/CoreSpeech.framework/CoreSpeech
 */

#import <Foundation/NSObject.h>

@class CSAsset, CSAudioCircularBuffer, CSAudioStream, CSKeywordAnalyzerNDAPI, CSKeywordAnalyzerNDEAPI, CSKeywordAnalyzerQuasar, CSPlainAudioFileWriter, CSSpIdVTTextDependentSpeakerRecognizer, CSSpeakerDetectorNDAPI, CSSpeakerModel, NSData, NSDate, NSDictionary, NSMutableDictionary, NSString, NSUUID;

@protocol CSVoiceTriggerDelegate, OS_dispatch_queue;

@interface CSVoiceTriggerSecondPass : NSObject

{
    _Bool _hasReceivedNDEAPIResult;
    _Bool _isSecondChanceHot;
    _Bool _isSATDetectionRunning;
    _Bool _shouldUsePHS;
    _Bool _hasPendingNearMiss;
    _Bool _isRunningRecognizer;
    _Bool _recognizerResultPending;
    _Bool _didWakeAP;
    _Bool _hasTriggerCandidate;
    _Bool _isStartSampleCountMarked;
    _Bool _secondPassHasMadeDecision;
    _Bool _skipTdsrProc;
    _Bool _tdsrResultPending;
    _Bool _kwdRejectCleanupPending;
    float _referenceKeywordThreshold;
    float _keywordThreshold;
    float _keywordThresholdSecondChance;
    float _effectiveKeywordThreshold;
    float _keywordLoggingThreshold;
    float _keywordRejectLoggingThreshold;
    float _lastScore;
    float _recognizerScore;
    float _recognizerScoreScaleFactor;
    float _recognizerThresholdOffset;
    float _firstPassChannelSelectionDelaySeconds;
    float _firstPassMasterChannelScoreBoost;
    float _firstPassOnsetScore;
    float _twoShotFeedbackDelay;
    float _mediaVolume;
    NSString *_UUID;
    id <CSVoiceTriggerDelegate> _delegate;
    unsigned long long _secondChanceHotTillMachTime;
    NSObject<OS_dispatch_queue> *_queue;
    CSAsset *_currentAsset;
    CSAudioStream *_audioStream;
    NSString *_audioProviderUUID;
    CSKeywordAnalyzerNDAPI *_keywordAnalyzerNDAPI;
    CSKeywordAnalyzerNDEAPI *_keywordAnalyzerNDEAPI;
    CSKeywordAnalyzerQuasar *_keywordAnalyzerQuasar;
    CSSpeakerDetectorNDAPI *_speakerDetector;
    CSSpeakerModel *_speakerModel;
    CDUnknownBlockType _resultCompletion;
    CSSpIdVTTextDependentSpeakerRecognizer *_tdsrAnalyzer;
    double _tdSpeakerRecognizerCombinationWeight;
    double _tdSpeakerRecognizerSATThreshold;
    unsigned long long _secondPassTimeout;
    unsigned long long _numProcessedSamples;
    unsigned long long _numAnalyzedSamples;
    unsigned long long _extraSamplesAtStart;
    unsigned long long _analyzerPrependingSamples;
    unsigned long long _analyzerTrailingSamples;
    unsigned long long _nearMissDelayTimeout;
    unsigned long long _nearMissCandidateDetectedSamples;
    NSDictionary *_lastAnalyzerResult;
    unsigned long long _recognizerWaitSamples;
    unsigned long long _earlyDetectFiredMachTime;
    unsigned long long _activeChannel;
    NSDictionary *_lastResult;
    unsigned long long _processedSampleCountsInPending;
    unsigned long long _firstPassTriggerStartSampleCount;
    unsigned long long _firstPassTriggerFireSampleCount;
    NSDictionary *_firstPassChannelSelectionScores;
    unsigned long long _firstPassOnsetChannel;
    unsigned long long _secondPassAnalyzerStartSampleCount;
    unsigned long long _secondPassTriggerMachAbsTime;
    NSObject<OS_dispatch_queue> *_stateSerialQueue;
    double _lastAggTime;
    double _cumulativeUptime;
    double _cumulativeDowntime;
    NSData *_superVector;
    CSAudioCircularBuffer *_audioBuffer;
    unsigned long long _firstPassSource;
    NSString *_firstPassDeviceID;
    CSPlainAudioFileWriter *_audioFileWriter;
    long long _mediaPlayingState;
    NSMutableDictionary *_lastVoiceTriggerEventInfo;
    NSDate *_tdsrStartTime;
    unsigned long long _kwdRejectCleanupSecondPassResult;
    NSUUID *_kwdRejectCleanupToken;
    NSUUID *_tdsrTimeoutToken;
}

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain, nonatomic) CSAsset *currentAsset;
@property (retain, nonatomic) CSAudioStream *audioStream;
@property (retain, nonatomic) NSString *audioProviderUUID;
@property (retain, nonatomic) CSKeywordAnalyzerNDAPI *keywordAnalyzerNDAPI;
@property (retain, nonatomic) CSKeywordAnalyzerNDEAPI *keywordAnalyzerNDEAPI;
@property (retain, nonatomic) CSKeywordAnalyzerQuasar *keywordAnalyzerQuasar;
@property (retain, nonatomic) CSSpeakerDetectorNDAPI *speakerDetector;
@property (retain, nonatomic) CSSpeakerModel *speakerModel;
@property (copy, nonatomic) CDUnknownBlockType resultCompletion;
@property (retain, nonatomic) CSSpIdVTTextDependentSpeakerRecognizer *tdsrAnalyzer;
@property (nonatomic) double tdSpeakerRecognizerCombinationWeight;
@property (nonatomic) double tdSpeakerRecognizerSATThreshold;
@property (nonatomic) _Bool hasReceivedNDEAPIResult;
@property (nonatomic) unsigned long long secondPassTimeout;
@property (nonatomic) unsigned long long numProcessedSamples;
@property (nonatomic) unsigned long long numAnalyzedSamples;
@property (nonatomic) float referenceKeywordThreshold;
@property (nonatomic) float keywordThreshold;
@property (nonatomic) float keywordThresholdSecondChance;
@property (nonatomic) float effectiveKeywordThreshold;
@property (nonatomic) float keywordLoggingThreshold;
@property (nonatomic) float keywordRejectLoggingThreshold;
@property (nonatomic) float lastScore;
@property (nonatomic) _Bool isSecondChanceHot;
@property (nonatomic) unsigned long long extraSamplesAtStart;
@property (nonatomic) unsigned long long analyzerPrependingSamples;
@property (nonatomic) unsigned long long analyzerTrailingSamples;
@property (nonatomic) _Bool isSATDetectionRunning;
@property (nonatomic) _Bool shouldUsePHS;
@property (nonatomic) unsigned long long nearMissDelayTimeout;
@property (nonatomic) unsigned long long nearMissCandidateDetectedSamples;
@property (nonatomic) _Bool hasPendingNearMiss;
@property (retain, nonatomic) NSDictionary *lastAnalyzerResult;
@property (nonatomic) float recognizerScore;
@property (nonatomic) _Bool isRunningRecognizer;
@property (nonatomic) _Bool recognizerResultPending;
@property (nonatomic) float recognizerScoreScaleFactor;
@property (nonatomic) float recognizerThresholdOffset;
@property (nonatomic) unsigned long long recognizerWaitSamples;
@property (nonatomic) unsigned long long earlyDetectFiredMachTime;
@property (nonatomic) unsigned long long activeChannel;
@property (retain, nonatomic) NSDictionary *lastResult;
@property (nonatomic) unsigned long long processedSampleCountsInPending;
@property (nonatomic) unsigned long long firstPassTriggerStartSampleCount;
@property (nonatomic) unsigned long long firstPassTriggerFireSampleCount;
@property (retain, nonatomic) NSDictionary *firstPassChannelSelectionScores;
@property (nonatomic) float firstPassChannelSelectionDelaySeconds;
@property (nonatomic) float firstPassMasterChannelScoreBoost;
@property (nonatomic) float firstPassOnsetScore;
@property (nonatomic) unsigned long long firstPassOnsetChannel;
@property (nonatomic) _Bool didWakeAP;
@property (nonatomic) _Bool hasTriggerCandidate;
@property (nonatomic) _Bool isStartSampleCountMarked;
@property (nonatomic) unsigned long long secondPassAnalyzerStartSampleCount;
@property (nonatomic) unsigned long long secondPassTriggerMachAbsTime;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *stateSerialQueue;
@property (nonatomic) double lastAggTime;
@property (nonatomic) double cumulativeUptime;
@property (nonatomic) double cumulativeDowntime;
@property (retain, nonatomic) NSData *superVector;
@property (weak, nonatomic) CSAudioCircularBuffer *audioBuffer;
@property (nonatomic) unsigned long long firstPassSource;
@property (retain, nonatomic) NSString *firstPassDeviceID;
@property (nonatomic) float twoShotFeedbackDelay;
@property (retain, nonatomic) CSPlainAudioFileWriter *audioFileWriter;
@property (nonatomic) _Bool secondPassHasMadeDecision;
@property (nonatomic) long long mediaPlayingState;
@property (nonatomic) float mediaVolume;
@property (retain, nonatomic) NSMutableDictionary *lastVoiceTriggerEventInfo;
@property (nonatomic) _Bool skipTdsrProc;
@property (retain, nonatomic) NSDate *tdsrStartTime;
@property (nonatomic) _Bool tdsrResultPending;
@property (nonatomic) _Bool kwdRejectCleanupPending;
@property (nonatomic) unsigned long long kwdRejectCleanupSecondPassResult;
@property (retain, nonatomic) NSUUID *kwdRejectCleanupToken;
@property (retain, nonatomic) NSUUID *tdsrTimeoutToken;
@property (nonatomic, readonly) NSString *UUID;
@property (weak, nonatomic) id <CSVoiceTriggerDelegate> delegate;
@property (nonatomic) unsigned long long secondChanceHotTillMachTime;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;

+ (id)timeStampString;
+ (id)secondPassAudioLoggingFilePath;
+ (id)secondPassAudioLogDirectory;

- (void)dealloc;
- (void)start;
- (void)reset;
- (void)_reset;
- (void)setAsset:(id)arg1;
- (void)cancelCurrentRequest;
- (void)_setAsset:(id)arg1;
- (void)textDependentSpeakerRecognizer:(id)arg1 failedWithError:(id)arg2;
- (void)textDependentSpeakerRecognizer:(id)arg1 hasSatScore:(float)arg2;
- (void)CSMediaPlayingMonitor:(id)arg1 didReceiveMediaPlayingChanged:(long long)arg2;
- (void)CSVolumeMonitor:(id)arg1 didReceiveMusicVolumeChanged:(float)arg2;
- (void)_resetStartAnalyzeTime;
- (void)_setStartAnalyzeTime:(unsigned long long)arg1;
- (void)audioStreamProvider:(id)arg1 didStopStreamUnexpectly:(long long)arg2;
- (void)audioStreamProvider:(id)arg1 audioBufferAvailable:(id)arg2;
- (void)audioStreamProvider:(id)arg1 audioChunkForTVAvailable:(id)arg2;
- (void)CSAudioServerCrashMonitorDidReceiveServerRestart:(id)arg1;
- (void)keywordAnalyzerNDAPI:(id)arg1 hasResultAvailable:(id)arg2 forChannel:(unsigned long long)arg3;
- (id)initWithPHSEnabled:(_Bool)arg1;
- (void)handleVoiceTriggerSecondPassFrom:(unsigned long long)arg1 deviceId:(id)arg2 audioProviderUUID:(id)arg3 firstPassInfo:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_clearTriggerCandidate;
- (void)_didStopAudioStream;
- (void)keywordAnalyzerNDEAPI:(id)arg1 hasResultAvailable:(id)arg2 forChannel:(unsigned long long)arg3;
- (void)selfTriggerDetector:(id)arg1 didDetectSelfTrigger:(id)arg2;
- (void)_initializeMediaPlayingState;
- (void)_resetUpTime;
- (void)_analyzeForKeywordDetection:(id)arg1 result:(id)arg2 forChannel:(unsigned long long)arg3 forceMaximized:(_Bool)arg4;
- (void)_computeEffectiveThreshold;
- (void)_logUptimeWithVTSwitchChanged:(_Bool)arg1 VTEnabled:(_Bool)arg2;
- (void)CSVoiceTriggerEnabledMonitor:(id)arg1 didReceiveEnabled:(_Bool)arg2;
- (void)_prepareStartAudioStream;
- (void)_didStartAudioStream:(_Bool)arg1;
- (void)_requestStartAudioStreamWitContext:(id)arg1 audioProviderUUID:(id)arg2 startStreamOption:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_voiceTriggerFirstPassDidDetectKeywordFrom:(unsigned long long)arg1 deviceId:(id)arg2 audioProviderUUID:(id)arg3 firstPassInfo:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_handleResultCompletion:(unsigned long long)arg1 voiceTriggerInfo:(id)arg2 error:(id)arg3;
- (void)_getDidWakeAP:(id)arg1;
- (void)_handleVoiceTriggerFirstPassFromAP:(id)arg1 audioProviderUUID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_handleVoiceTriggerFirstPassFromHearst:(unsigned long long)arg1 deviceId:(id)arg2 audioProviderUUID:(id)arg3 firstPassInfo:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_handleVoiceTriggerFirstPassFromJarvis:(unsigned long long)arg1 deviceId:(id)arg2 audioProviderUUID:(id)arg3 firstPassInfo:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_handleVoiceTriggerFirstPassFromAOP:(id)arg1 audioProviderUUID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_addDeviceStatusInfoToDict:(id)arg1;
- (void)_addToPHSRejectListIfNeeded:(id)arg1;
- (void)_cleanupKeywordRejectionWithToken:(id)arg1 result:(unsigned long long)arg2 voiceTriggerInfo:(id)arg3;
- (_Bool)_isTDSRProcessingAllowed;
- (void)_handleSecondPassSuccess:(id)arg1;
- (void)handleSATOnlyScore;
- (void)_handleTDSRTimeout:(id)arg1;
- (void)_notifySecondPassReject:(id)arg1 result:(unsigned long long)arg2;
- (void)_markSecondPassTriggerMachAbsoluteTime:(unsigned long long)arg1;
- (void)_implicitTrainingIfNeeded:(id)arg1;
- (_Bool)_supportTwoShotFeedbackDelay;
- (void)_addSatAnalyzerInfoToDict:(id)arg1 satScore:(float)arg2 satThreshold:(float)arg3;
- (void)_addTdsrInfoToDict:(id)arg1 combinedScore:(float)arg2;
- (void)_addRejectStatsToDict:(id)arg1;
- (void)_addPHSExplicitOnlyModelScoresToDict:(id)arg1;
- (void)handleTDSRCombinedScore;
- (void)keywordAnalyzerQuasar:(id)arg1 hasResultAvailable:(id)arg2 forChannel:(unsigned long long)arg3;

@end
