/*
 Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

#import <UIKit/UIViewController.h>

#import <ChatKit/Swift-Protocol.h>

@class CKAppGrabberView, CKBrowserSwitcherFooterView, CKBrowserSwitcherScrollPreventer, CKBrowserTransitionCoordinator, CKImmediatePanGestureRecognizer, IMBalloonPlugin, IMScheduledUpdater, NSArray, NSDate, NSMutableDictionary, NSString, UICollectionView, UICollectionViewFlowLayout, UILongPressGestureRecognizer, UIView, UIViewPropertyAnimator;

@protocol CKBrowserSwitcherViewControllerDelegate><CKBrowserTransitionCoordinatorDelegate, CKBrowserViewControllerProtocol;

@interface CKBrowserSwitcherViewController : UIViewController <Swift>

{
    CKImmediatePanGestureRecognizer *_expandGestureTracker;
    UIViewPropertyAnimator *_expandPropertyAnimator;
    _Bool _isDoingExpandInteraction;
    _Bool _expandInteractionDidMove;
    _Bool _expandGestureStartedOnGrabber;
    double _expandGestureTranslationOffset;
    _Bool _dragging;
    _Bool _browserViewReadyForUserInteraction;
    _Bool _insertedViaCollapse;
    _Bool _inManualContentOffsetChange;
    _Bool _inDragAndDrop;
    _Bool _interactiveExpandStarted;
    _Bool _transitioningFromSnapshotToLiveView;
    _Bool _transitioningExpandedState;
    _Bool _allowFooterLabelUpdates;
    _Bool _allowPluginLaunchNotifications;
    _Bool _viewHasLaidOutSubviews;
    _Bool _browserIsLoadingCompact;
    _Bool _browserIsCollapsingFromFullscreen;
    id <CKBrowserSwitcherViewControllerDelegate><CKBrowserTransitionCoordinatorDelegate> _delegate;
    UIViewController<CKBrowserViewControllerProtocol> *_currentViewController;
    CKBrowserTransitionCoordinator *_transitionCoordinator;
    CKBrowserSwitcherFooterView *_footerView;
    UIView *_contentView;
    UICollectionView *_collectionView;
    UICollectionViewFlowLayout *_flowLayout;
    NSMutableDictionary *_livePluginIdentifierToTimestampMap;
    UILongPressGestureRecognizer *_touchTracker;
    CKBrowserSwitcherScrollPreventer *_scrollPreventer;
    IMScheduledUpdater *_scrollUpdater;
    IMBalloonPlugin *_currentVisiblePlugin;
    CKAppGrabberView *_grabberView;
    UIView *_shadowView;
    id _cancelTouchesToken;
    IMBalloonPlugin *_balloonPlugin;
    NSArray *_gutterDividerViews;
    CDUnknownBlockType _performAfterFirstLayoutBlock;
    NSDate *_timeOfLastScrollingDecelerationEnded;
}

@property (retain, nonatomic) UIView *contentView;
@property (retain, nonatomic) CKBrowserTransitionCoordinator *transitionCoordinator;
@property (retain, nonatomic) UICollectionView *collectionView;
@property (retain, nonatomic) UICollectionViewFlowLayout *flowLayout;
@property (retain, nonatomic) NSMutableDictionary *livePluginIdentifierToTimestampMap;
@property (retain, nonatomic) UILongPressGestureRecognizer *touchTracker;
@property (retain, nonatomic) CKBrowserSwitcherScrollPreventer *scrollPreventer;
@property (retain, nonatomic) IMScheduledUpdater *scrollUpdater;
@property (retain, nonatomic) IMBalloonPlugin *currentVisiblePlugin;
@property (retain, nonatomic) CKAppGrabberView *grabberView;
@property (retain, nonatomic) UIView *shadowView;
@property (nonatomic) _Bool insertedViaCollapse;
@property (nonatomic, getter=isBrowserReadyForUserInteraction) _Bool browserViewReadyForUserInteraction;
@property (nonatomic) _Bool inManualContentOffsetChange;
@property (nonatomic, getter=isDragging) _Bool dragging;
@property (nonatomic, getter=isInDragAndDrop) _Bool inDragAndDrop;
@property (retain, nonatomic) id cancelTouchesToken;
@property (nonatomic) _Bool interactiveExpandStarted;
@property (retain, nonatomic) IMBalloonPlugin *balloonPlugin;
@property (retain, nonatomic) NSArray *gutterDividerViews;
@property (nonatomic, getter=isTransitioningFromSnapshotToLiveView) _Bool transitioningFromSnapshotToLiveView;
@property (nonatomic, getter=isTransitioningExpandedState) _Bool transitioningExpandedState;
@property (nonatomic) _Bool allowFooterLabelUpdates;
@property (nonatomic) _Bool allowPluginLaunchNotifications;
@property (copy, nonatomic) CDUnknownBlockType performAfterFirstLayoutBlock;
@property (nonatomic) _Bool viewHasLaidOutSubviews;
@property (retain, nonatomic) NSDate *timeOfLastScrollingDecelerationEnded;
@property (nonatomic) _Bool browserIsLoadingCompact;
@property (nonatomic) _Bool browserIsCollapsingFromFullscreen;
@property (weak, nonatomic) id <CKBrowserSwitcherViewControllerDelegate><CKBrowserTransitionCoordinatorDelegate> delegate;
@property (nonatomic, readonly) UIViewController<CKBrowserViewControllerProtocol> *currentViewController;
@property (nonatomic, readonly) CKBrowserSwitcherFooterView *footerView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;

- (void)dealloc;
- (void)loadView;
- (id)traitCollection;
- (void)traitCollectionDidChange:(id)arg1;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)layoutMarginsDidChange;
- (void)viewDidLoad;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewDidLayoutSubviews;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (_Bool)shouldAutorotate;
- (id)backdropView:(id)arg1 willChangeToGraphicsQuality:(long long)arg2;
- (void)backdropView:(id)arg1 didChangeToGraphicsQuality:(long long)arg2;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (double)_rubberBandOffsetWithoutDecorationForOffset:(double)arg1 maxOffset:(double)arg2 minOffset:(double)arg3 range:(double)arg4 outside:(_Bool *)arg5;
- (void)dragManagerDidEndDragging:(id)arg1;
- (_Bool)_currentPluginIsJellyfish;
- (void)animateInCompactWithCompletion:(CDUnknownBlockType)arg1;
- (void)animateOutCompactWithCompletion:(CDUnknownBlockType)arg1;
- (void)updateGrabberTitleAndIconForPlugin:(id)arg1;
- (_Bool)shouldAlwaysShowAppTitle;
- (void)appGrabberViewCloseButtonTapped:(id)arg1;
- (void)scrollPreventer:(id)arg1 didReceiveTouchAtDate:(id)arg2;
- (void)scrollPreventerDidLayoutSubviews:(id)arg1;
- (void)scrollPreventerWillBeginDragging:(id)arg1;
- (void)scrollPreventer:(id)arg1 scrolledToOffset:(struct CGPoint)arg2;
- (void)scrollPreventerDidEndDecelerating:(id)arg1;
- (void)unloadRemoteViewControllers;
- (id)initWithConversation:(id)arg1 sendDelegate:(id)arg2 presentingViewController:(id)arg3;
- (void)scrollCollectionViewToPlugin:(id)arg1;
- (void)showBrowserFullscreenForPlugin:(id)arg1 datasource:(id)arg2;
- (void)showBrowserInSwitcherForPlugin:(id)arg1 datasource:(id)arg2 reloadData:(_Bool)arg3;
- (void)dismissBrowserFullscreenAnimated:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)transitionToFullscreen;
- (void)transitionToCollapsed;
- (void)showBrowserFullscreenModalForPlugin:(id)arg1 datasource:(id)arg2;
- (void)browserTransitionCoordinator:(id)arg1 expandedStateDidChange:(_Bool)arg2 withReason:(long long)arg3;
- (void)browserTransitionCoordinatorWillTransitionOrPresentToFullscreen:(id)arg1 withReason:(long long)arg2;
- (void)browserTransitionCoordinatorDidTransitionOrPresentToFullscreen:(id)arg1 withReason:(long long)arg2;
- (void)browserTransitionCoordinatorWillCollapseOrDismiss:(id)arg1 withReason:(long long)arg2;
- (void)browserTransitionCoordinatorDidCollapseOrDismiss:(id)arg1 withReason:(long long)arg2;
- (void)browserTransitionCoordinator:(id)arg1 browserWillBecomeInactive:(id)arg2;
- (void)browserTransitionCoordinator:(id)arg1 didTransitionFromOrientation:(long long)arg2 toOrientation:(long long)arg3;
- (void)browserTransitionCoordinator:(id)arg1 didSwitchToPlugin:(id)arg2;
- (void)browserTransitionCoordinator:(id)arg1 hasUpdatedLastTouchDate:(id)arg2;
- (struct CGSize)browserTransitionCoordinator:(id)arg1 preferredSizeForBrowser:(id)arg2;
- (void)browserTransitionCoordinatorWantsPresentationOfAppStore:(id)arg1;
- (void)browserTransitionCoordinatorWantsPresentationOfAppManager:(id)arg1;
- (id)appGrabberForBrowserTransitionCoordinator:(id)arg1;
- (void)reinsertAppGrabberViewForBrowserTransitionCoordinator:(id)arg1;
- (struct CGRect)cachedCompactFrameInWindowCoordsForBrowserTransitionCoordinator:(id)arg1;
- (double)browserTransitionCoordinatorCollapsedContentHeight:(id)arg1;
- (_Bool)browserTransitionCoordinatorShouldDismissOnDragSuccess:(id)arg1;
- (id)appTitleOverride;
- (id)appIconOverride;
- (id)transitionsPresentationViewController;
- (double)restingCollectionViewOriginY;
- (void)expandGestureTouchMoved:(id)arg1;
- (void)_scrollUpdaterFired;
- (_Bool)_hasLandscapeGutters;
- (struct CGRect)restingGrabberFrame;
- (id)activeBrowserView;
- (void)_updateBrowserViewPositionForPluginAndInsertIfNecessary:(id)arg1;
- (void)dragManagerWillStartDrag:(id)arg1;
- (void)dragManagerDidStartDrag:(id)arg1;
- (void)_transitionSnapshotViewToBrowserViewAfterViewDidPrepareForDisplay:(id)arg1;
- (void)_handleRemoteViewControllerConnectionInterrupted:(id)arg1;
- (void)saveSnapshotForCurrentBrowserViewControllerIfPossible;
- (void)_handleVisibleSwitcherPluginsChanged:(id)arg1;
- (void)_updateCurrentBrowserSnapshotIfPossible;
- (void)setCurrentViewController:(id)arg1;
- (void)stopExpandAnimatorAndCleanupState;
- (void)_removeBrowserWithPluginIdentifierFromViewHierarchy:(id)arg1;
- (double)_horizontalOffsetForVisibleSwitcherPluginIndex:(unsigned long long)arg1;
- (void)cleanupExpandAnimatorState;
- (void)_endHoldingScrollUpdatesForKey:(id)arg1;
- (void)setupPausedExpandAnimatorIfNeeded;
- (void)_beginHoldingScrollUpdatesForKey:(id)arg1;
- (void)handleExpandButton:(id)arg1;
- (void)reverseAndCleanupExpandAnimator;
- (void)_transitionSnapshotViewToBrowserView;
- (void)_updateForBeginScrolling;
- (void)_updateForEndScrolling;
- (void)_updateAppNameAndPageForOffset:(struct CGPoint)arg1;
- (void)_removeBrowserFromViewHierarchy:(id)arg1;
- (void)_loadBrowserForBalloonPlugin:(id)arg1 datasource:(id)arg2;
- (void)_moveLiveBrowserViewsToUpdatedVisibleIndices;
- (void)_cleanupOffscreenChildViewControllersWithDelay;
- (void)_performAfterFirstLayout:(CDUnknownBlockType)arg1;
- (void)_updateVisibleBrowserView;
- (_Bool)_scrollToVisiblePluginWithIdentifier:(id)arg1;
- (void)_snapshotCurrentViewController;
- (void)_updatePluginFromScrollPosition;
- (_Bool)_pluginHasLiveBrowserViewInSwitcher:(id)arg1;
- (void)_deferredUpdateVisibleBrowserView;
- (id)currentSwitcherCell;
- (_Bool)_usesHorizontalSwipeToSwitchApps;
- (unsigned long long)_visibleSwitcherPluginIndexForHorizontalOffset:(double)arg1;
- (void)_updateGutterDividerViewsForCurrentVisibleBrowser;
- (double)_delayWhenScrollingBeforeLoadingNewBrowser;
- (void)_updateActiveBrowserTimestampForCurrentBalloonPlugin;
- (void)_updateActiveBrowserAlphaStateOnInsertForCurrentController:(id)arg1 currentView:(id)arg2;
- (struct CGSize)_browserSize;
- (void)_cleanupOffscreenChildViewControllers;
- (void)_insertCurrentBrowserAndRemoveOldBrowsersIfNeeded;
- (_Bool)isBrowserSwitcherFirstLaunch;

@end
