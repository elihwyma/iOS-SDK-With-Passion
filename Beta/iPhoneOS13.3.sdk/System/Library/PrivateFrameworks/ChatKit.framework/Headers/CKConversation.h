/*
 Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

#import <Foundation/NSObject.h>

@class CKComposition, CKEntity, IMChat, IMService, NSArray, NSAttributedString, NSDate, NSNumber, NSSet, NSString;

@interface CKConversation : NSObject

{
    NSArray *_recipients;
    NSString *_name;
    IMChat *_chat;
    unsigned int _limitToLoad;
    struct {
        unsigned int ignoringTypingUpdates:1;
    } _conversationFlags;
    _Bool _needsReload;
    _Bool _hasLoadedAllMessages;
    _Bool _isReportedAsSpam;
    _Bool _wasKnownSender;
    _Bool _holdWasKnownSenderUpdates;
    int _wasDetectedAsSMSSpam;
    int _wasDetectedAsiMessageSpam;
    NSArray *_pendingHandles;
    NSString *_selectedLastAddressedHandle;
    NSString *_selectedLastAddressedSIMID;
    NSSet *_pendingRecipients;
    NSAttributedString *_groupName;
    NSString *_previewText;
    NSNumber *_businessConversation;
    NSDate *_dateLastViewed;
}

@property (retain, nonatomic) IMChat *chat;
@property (retain, nonatomic) NSArray *recipients;
@property (copy, nonatomic) NSString *previewText;
@property (retain, nonatomic) NSSet *pendingRecipients;
@property (nonatomic) unsigned int limitToLoad;
@property (nonatomic) _Bool hasLoadedAllMessages;
@property (nonatomic) _Bool isReportedAsSpam;
@property (retain, nonatomic) NSNumber *businessConversation;
@property (retain, nonatomic) NSDate *dateLastViewed;
@property (nonatomic) _Bool wasKnownSender;
@property (nonatomic) _Bool holdWasKnownSenderUpdates;
@property (nonatomic, readonly) NSArray *frequentReplies;
@property (retain, nonatomic) NSString *selectedLastAddressedHandle;
@property (retain, nonatomic) NSString *selectedLastAddressedSIMID;
@property (nonatomic, readonly) NSString *lastAddressedHandle;
@property (nonatomic, readonly) NSString *lastAddressedSIMID;
@property (nonatomic, readonly) CKEntity *recipient;
@property (copy, nonatomic, readonly) NSArray *recipientStrings;
@property (nonatomic, readonly) unsigned long long recipientCount;
@property (nonatomic, readonly) _Bool isToEmailAddress;
@property (nonatomic, readonly) NSString *rawAddressedName;
@property (nonatomic, readonly) NSString *name;
@property (nonatomic, readonly) _Bool hasDisplayName;
@property (nonatomic) NSString *displayName;
@property (nonatomic, readonly) NSAttributedString *groupName;
@property (nonatomic, readonly) NSString *serviceDisplayName;
@property (nonatomic, readonly) BOOL buttonColor;
@property (nonatomic, readonly) _Bool isPreviewTextForAttachment;
@property (nonatomic, getter=isPinned) _Bool pinned;
@property (copy, nonatomic, readonly) NSString *senderIdentifier;
@property (retain, nonatomic) CKComposition *unsentComposition;
@property (nonatomic, readonly) unsigned long long unreadCount;
@property (nonatomic, readonly) _Bool hasUnreadMessages;
@property (nonatomic, readonly, getter=isMuted) _Bool muted;
@property (nonatomic, readonly, getter=shouldSendReadReceipts) _Bool sendReadReceipts;
@property (nonatomic, readonly) _Bool needsReload;
@property (nonatomic, readonly) NSString *groupID;
@property (nonatomic, readonly) NSString *deviceIndependentID;
@property (nonatomic, readonly) int wasDetectedAsSMSSpam;
@property (nonatomic, readonly) int wasDetectedAsiMessageSpam;
@property (nonatomic, readonly) int wasDetectedAsSpam;
@property (nonatomic, readonly) IMService *sendingService;
@property (nonatomic) _Bool forceMMS;
@property (nonatomic, readonly, getter=isGroupConversation) _Bool groupConversation;
@property (nonatomic, readonly) _Bool canLeave;
@property (nonatomic, readonly, getter=hasLeft) _Bool left;
@property (nonatomic, readonly) _Bool supportsMutatingGroupMembers;
@property (nonatomic, readonly, getter=hasLeftGroupChat) _Bool leftGroupChat;
@property (nonatomic, readonly) _Bool shouldShowCharacterCount;
@property (nonatomic) _Bool localUserIsTyping;
@property (nonatomic) _Bool localUserIsRecording;
@property (copy, nonatomic) NSString *localUserIsComposing;
@property (nonatomic, readonly, getter=isPending) _Bool pending;
@property (copy, nonatomic, readonly) NSArray *pendingEntities;
@property (copy, nonatomic) NSArray *pendingHandles;
@property (nonatomic, readonly) NSArray *handles;
@property (nonatomic, readonly) unsigned long long disclosureAtomStyle;
@property (nonatomic, getter=isIgnoringTypingUpdates) _Bool ignoringTypingUpdates;

+ (id)newPendingConversation;
+ (_Bool)isSMSSpamFilteringEnabled;
+ (_Bool)pinnedConversationsEnabled;
+ (_Bool)_iMessage_canSendMessageWithMediaObjectTypes:(int *)arg1;
+ (_Bool)_sms_canSendMessageWithMediaObjectTypes:(int *)arg1 phoneNumber:(id)arg2 simID:(id)arg3;
+ (double)_sms_maxTrimDurationForMediaType:(int)arg1;
+ (double)_iMessage_maxTrimDurationForMediaType:(int)arg1;
+ (_Bool)_sms_canAcceptMediaObjectType:(int)arg1 givenMediaObjects:(id)arg2 phoneNumber:(id)arg3 simID:(id)arg4;
+ (_Bool)_iMessage_canAcceptMediaObjectType:(int)arg1 givenMediaObjects:(id)arg2;
+ (_Bool)_sms_canSendComposition:(id)arg1 lastAddressedHandle:(id)arg2 lastAddressedSIMID:(id)arg3 error:(id *)arg4;
+ (_Bool)_iMessage_canSendComposition:(id)arg1 lastAddressedHandle:(id)arg2 lastAddressedSIMID:(id)arg3 currentService:(id)arg4 forceSMS:(_Bool)arg5 error:(id *)arg6;
+ (id)conversationForAddresses:(id)arg1 allowRetargeting:(_Bool)arg2 candidateConversation:(id)arg3;
+ (long long)_iMessage_maxAttachmentCount;
+ (_Bool)_iMessage_canSendMessageWithMediaObjectTypes:(int *)arg1 errorCode:(long long *)arg2;
+ (id)_iMessage_localizedErrorForReason:(long long)arg1;
+ (unsigned long long)_iMessage_maxTransferFileSizeForWiFi:(_Bool)arg1;
+ (long long)_sms_maxAttachmentCountForPhoneNumber:(id)arg1 simID:(id)arg2;
+ (_Bool)_sms_canSendMessageWithMediaObjectTypes:(int *)arg1 phoneNumber:(id)arg2 simID:(id)arg3 errorCode:(long long *)arg4;
+ (_Bool)_sms_mediaObjectPassesRestriction:(id)arg1;
+ (_Bool)_sms_mediaObjectPassesDurationCheck:(id)arg1;
+ (id)_sms_localizedErrorForReason:(long long)arg1;

- (id)init;
- (void)dealloc;
- (id)description;
- (id)date;
- (id)uniqueIdentifier;
- (_Bool)isPlaceholder;
- (_Bool)isDowngraded;
- (id)shortDescription;
- (void)didBecomeActive;
- (void)resetCaches;
- (void)reloadIfNeeded;
- (void)setNeedsReload;
- (_Bool)canSendComposition:(id)arg1 error:(id *)arg2;
- (void)sendMessage:(id)arg1 onService:(id)arg2 newComposition:(_Bool)arg3;
- (void)_chatItemsDidChange:(id)arg1;
- (_Bool)isBusinessConversation;
- (id)copyForPendingConversation;
- (_Bool)canInsertMoreRecipients;
- (_Bool)_allowedByScreenTime;
- (_Bool)isBlockedByCommunicationLimits;
- (id)displayNameForMediaObjects:(id)arg1 subject:(id)arg2;
- (BOOL)sendButtonColor;
- (_Bool)canAcceptMediaObjectType:(int)arg1 givenMediaObjects:(id)arg2;
- (void)_handleChatParticipantsDidChange:(id)arg1;
- (void)_handleChatJoinStateDidChange:(id)arg1;
- (void)_handlePreferredServiceChangedNotification:(id)arg1;
- (void)_handleEngroupFinishedUpdating:(id)arg1;
- (void)_chatPropertiesChanged:(id)arg1;
- (id)initWithChat:(id)arg1;
- (long long)compareBySequenceNumberAndDateDescending:(id)arg1;
- (void)deleteAllMessagesAndRemoveGroup;
- (_Bool)isKnownSender;
- (void)updateWasKnownSender;
- (void)updateLastViewedDate;
- (void)markAllMessagesAsRead;
- (_Bool)canSendToRecipients:(id)arg1 alertIfUnable:(_Bool)arg2;
- (id)messagesFromComposition:(id)arg1;
- (void)sendMessage:(id)arg1 newComposition:(_Bool)arg2;
- (double)maxTrimDurationForMediaType:(int)arg1;
- (void)acceptTransfer:(id)arg1;
- (void)loadAllMessages;
- (_Bool)hasReplyEnabled;
- (void)setLocalUserIsComposing:(id)arg1 typingIndicatorIcon:(id)arg2;
- (void)deleteAllMessages;
- (void)fetchSuggestedNameIfNecessary;
- (_Bool)hasVerifiedBusiness;
- (id)fastPreviewTextIgnoringPluginContent;
- (void)updateDisplayNameIfSMSSpam;
- (void)resetNameCaches;
- (_Bool)containsHandleWithUID:(id)arg1;
- (void)setLoadedMessageCount:(unsigned long long)arg1;
- (id)messageWithComposition:(id)arg1;
- (_Bool)isAppleConversation;
- (void)setMutedUntilDate:(id)arg1;
- (void)unmute;
- (_Bool)isMakoConversation;
- (void)addRecipientHandles:(id)arg1;
- (void)setSendReadReceipts:(_Bool)arg1;
- (void)removeRecipientHandles:(id)arg1;
- (void)refreshServiceForSending;
- (void)clearConversationLoadFromSpotlight;
- (long long)maximumRecipientsForSendingService;
- (id)orderedContactsWithMaxCount:(unsigned long long)arg1 keysToFetch:(id)arg2;
- (void)enumerateMessagesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)_clearTypingIndicatorsIfNecessary;
- (void)_deleteAllMessagesAndRemoveGroup:(_Bool)arg1;
- (_Bool)_earlyReturnHistoryLoad;
- (_Bool)hasLoadedFromSpotlight;
- (void)loadMoreMessagesBeforeFirstMessage;
- (void)setLoadedMessageCount:(unsigned long long)arg1 loadImmediately:(_Bool)arg2;
- (_Bool)_sms_canSendToRecipients:(id)arg1 alertIfUnable:(_Bool)arg2;
- (_Bool)_iMessage_canSendToRecipients:(id)arg1 alertIfUnable:(_Bool)arg2;
- (_Bool)_chatSupportsTypingIndicators;
- (_Bool)_sms_supportsCharacterCountForAddresses:(id)arg1;
- (_Bool)_iMessage_supportsCharacterCountForAddresses:(id)arg1;
- (id)nameWithRawAddresses:(_Bool)arg1;
- (id)_nameForHandle:(id)arg1;
- (id)_headerTitleForPendingMediaObjects:(id)arg1 subject:(id)arg2 onService:(id)arg3;
- (id)_headerTitleForService:(id)arg1;
- (void)willBecomeInactive;
- (id)orderedContactsForAvatarView;
- (id)orderedContactsForAvatar3DTouchUIWithKeysToFetch:(id)arg1;
- (_Bool)_handleIsForThisConversation:(id)arg1;
- (_Bool)noAvailableServices;
- (void)loadAllUnreadMessagesUpToMessageGUID:(id)arg1;
- (void)loadMoreMessagesAfterLastMessage;
- (void)loadFrequentReplies;
- (void)loadMoreMessages;
- (id)ensureMessageWithGUIDIsLoaded:(id)arg1;
- (void)setPendingComposeRecipients:(id)arg1;
- (void)resortMessagesIfNecessary;
- (void)updateUserActivity;
- (BOOL)outgoingBubbleColor;
- (_Bool)_sms_willSendMMSByDefaultForAddresses:(id)arg1;
- (_Bool)supportsSurf;

@end
