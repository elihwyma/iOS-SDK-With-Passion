/*
 Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
 */

#import <Foundation/NSObject.h>

@class CKAccountOverrideInfo, CKContainerID, CKDAccount, CKDAppContainerIntersectionMetadata, CKDAppContainerTuple, CKDApplicationMetadata, CKDCachePurger, CKDFlowControlManager, CKDKeyValueDiskCache, CKDMMCS, CKDPCSCache, CKDPCSManager, CKDPublicIdentityLookupService, CKDServerConfiguration, CKDZoneGatekeeper, NSHashTable, NSMutableDictionary, NSString, NSURL;

@protocol OS_dispatch_group, OS_dispatch_queue;

@interface CKDClientContext : NSObject

{
    _Bool _isForClouddInternalUse;
    _Bool _hasDataContainer;
    _Bool _captureResponseHTTPHeaders;
    _Bool _useZoneWidePCS;
    _Bool _returnPCSMetadata;
    _Bool _bypassPCSEncryption;
    _Bool _forceEnableReadOnlyManatee;
    _Bool _isSiloedContext;
    _Bool _sandboxed;
    _Bool _finishedAppProxySetup;
    _Bool _finishedProxySetup;
    _Bool _wasInitializedWithProxy;
    unsigned int _clientSDKVersion;
    CKDServerConfiguration *_config;
    NSURL *_publicCloudDBURL;
    NSURL *_publicShareServiceURL;
    NSURL *_publicDeviceServiceURL;
    NSURL *_publicCodeServiceURL;
    NSURL *_publicMetricsServiceURL;
    NSURL *_publicDatabaseRPCServiceURL;
    NSString *_containerScopedUserID;
    NSString *_orgAdminUserID;
    NSHashTable *_proxies;
    long long _cachedEnvironment;
    CKContainerID *_containerID;
    NSString *_applicationBundleID;
    NSString *_sourceApplicationBundleID;
    NSString *_personaID;
    NSString *_applicationVersion;
    NSURL *_applicationIcon;
    NSString *_applicationDisplayName;
    NSString *_applicationContainerPath;
    NSString *_applicationContainerCloudKitDirectory;
    NSString *_applicationCachesDirectory;
    NSString *_applicationTemporaryDirectory;
    NSString *_applicationMMCSDirectory;
    NSString *_applicationAssetDbDirectory;
    NSString *_applicationFileStagingDirectory;
    NSString *_applicationFileDownloadDirectory;
    NSString *_applicationRecordCacheDirectory;
    NSString *_applicationFrameworkCachesDirectory;
    NSString *_applicationPackageStagingDirectory;
    CKDAppContainerTuple *_appContainerTuple;
    NSString *_hardwareID;
    long long _contextType;
    CKDAccount *_account;
    CKAccountOverrideInfo *_accountInfoOverride;
    CKDMMCS *_MMCS;
    CKDPCSCache *_pcsCache;
    CKDZoneGatekeeper *_foregroundZoneGatekeeper;
    CKDZoneGatekeeper *_backgroundZoneGatekeeper;
    NSMutableDictionary *_fakeErrorsByClassName;
    NSMutableDictionary *_fakeResponseOperationLifetimeByClassName;
    NSMutableDictionary *_fakeResponseOperationResultByClassNameByItemID;
    NSObject<OS_dispatch_queue> *_setupQueue;
    NSString *_contextID;
    CKDCachePurger *_cachePurger;
    NSString *_containerEncryptionServiceName;
    NSString *_entitlementSpecifiedPCSServiceName;
    CKDKeyValueDiskCache *_publicIdentitiesDiskCache;
    CKDPublicIdentityLookupService *_foregroundPublicIdentityLookupService;
    CKDPublicIdentityLookupService *_backgroundPublicIdentityLookupService;
    CKDAppContainerIntersectionMetadata *_appContainerIntersectionMetadata;
    CKDApplicationMetadata *_applicationMetadata;
    CKDFlowControlManager *_flowControlManager;
    CKDPCSManager *_pcsManager;
    unsigned long long _mmcsEncryptionSupport;
    NSObject<OS_dispatch_group> *_proxyPreparationGroup;
}

@property (retain) CKDAccount *account;
@property (retain) CKDMMCS *MMCS;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *setupQueue;
@property (nonatomic, getter=isSandboxed) _Bool sandboxed;
@property (nonatomic) _Bool finishedAppProxySetup;
@property (nonatomic) _Bool finishedProxySetup;
@property (nonatomic, readonly) NSString *contextID;
@property (retain, nonatomic) CKDZoneGatekeeper *foregroundZoneGatekeeper;
@property (retain, nonatomic) CKDZoneGatekeeper *backgroundZoneGatekeeper;
@property (retain, nonatomic) CKDCachePurger *cachePurger;
@property (retain, nonatomic) NSString *applicationContainerPath;
@property (retain, nonatomic) NSString *applicationContainerCloudKitDirectory;
@property (retain, nonatomic) NSString *applicationCachesDirectory;
@property (retain, nonatomic) NSString *applicationMMCSDirectory;
@property (retain, nonatomic) NSString *applicationAssetDbDirectory;
@property (retain, nonatomic) NSString *applicationFileStagingDirectory;
@property (retain, nonatomic) NSString *applicationFileDownloadDirectory;
@property (retain, nonatomic) NSString *applicationRecordCacheDirectory;
@property (retain, nonatomic) NSString *applicationFrameworkCachesDirectory;
@property (retain, nonatomic) NSString *applicationPackageStagingDirectory;
@property (nonatomic) _Bool wasInitializedWithProxy;
@property (retain, nonatomic) NSString *containerEncryptionServiceName;
@property (retain, nonatomic) NSString *entitlementSpecifiedPCSServiceName;
@property (retain, nonatomic) CKDKeyValueDiskCache *publicIdentitiesDiskCache;
@property (retain, nonatomic) CKDPublicIdentityLookupService *foregroundPublicIdentityLookupService;
@property (retain, nonatomic) CKDPublicIdentityLookupService *backgroundPublicIdentityLookupService;
@property (retain, nonatomic) CKDAppContainerIntersectionMetadata *appContainerIntersectionMetadata;
@property (retain, nonatomic) CKDApplicationMetadata *applicationMetadata;
@property (retain, nonatomic) CKDFlowControlManager *flowControlManager;
@property (retain, nonatomic) NSString *applicationVersion;
@property (retain, nonatomic) CKDPCSManager *pcsManager;
@property (retain, nonatomic) NSHashTable *proxies;
@property (nonatomic, readonly) unsigned long long mmcsEncryptionSupport;
@property (retain, nonatomic) NSString *applicationBundleID;
@property (retain, nonatomic) NSString *associatedApplicationBundleID;
@property (nonatomic) _Bool hasMasqueradingEntitlement;
@property (nonatomic) _Bool hasAllowSetEnvironmentEntitlement;
@property (nonatomic) _Bool hasAllowCustomAccountsEntitlement;
@property (retain, nonatomic) NSString *clientPrefixEntitlement;
@property (nonatomic) _Bool hasTCCAuthorization;
@property (nonatomic) long long contextType;
@property (retain, nonatomic) NSObject<OS_dispatch_group> *proxyPreparationGroup;
@property (retain, nonatomic) CKDServerConfiguration *config;
@property (copy) NSURL *publicCloudDBURL;
@property (copy) NSURL *publicShareServiceURL;
@property (copy) NSURL *publicDeviceServiceURL;
@property (copy) NSURL *publicCodeServiceURL;
@property (copy) NSURL *publicMetricsServiceURL;
@property (copy) NSURL *publicDatabaseRPCServiceURL;
@property (copy) NSString *containerScopedUserID;
@property (copy) NSString *orgAdminUserID;
@property (nonatomic) _Bool isForClouddInternalUse;
@property long long cachedEnvironment;
@property (nonatomic, readonly) CKContainerID *containerID;
@property (nonatomic, readonly) NSString *sourceApplicationBundleID;
@property (nonatomic, readonly) NSString *personaID;
@property (nonatomic, readonly) NSURL *applicationIcon;
@property (nonatomic, readonly) NSString *applicationDisplayName;
@property (nonatomic, readonly) NSString *applicationTemporaryDirectory;
@property (nonatomic, readonly) CKDAppContainerTuple *appContainerTuple;
@property (nonatomic, readonly) NSString *applicationBundleIDForPush;
@property (nonatomic, readonly) NSString *applicationBundleIDForServer;
@property (nonatomic, readonly) NSString *hardwareID;
@property (retain, nonatomic, setter=setAPSEnvironmentString:) NSString *apsEnvironmentString;
@property (nonatomic, readonly) CKAccountOverrideInfo *accountInfoOverride;
@property (nonatomic, readonly) _Bool canAccessAccount;
@property (nonatomic, readonly) _Bool canAuthWithCloudKit;
@property (nonatomic, readonly) _Bool allowsCellularAccess;
@property (nonatomic) _Bool hasDataContainer;
@property (nonatomic) _Bool canAccessProtectionData;
@property (nonatomic) _Bool canAccessZoneProtectionData;
@property (nonatomic) _Bool canSetDeviceIdentifier;
@property (nonatomic, setter=setHasSystemServiceEntitlement:) _Bool hasSystemServiceEntitlement;
@property (nonatomic) _Bool allowsPowerNapScheduling;
@property (nonatomic) _Bool hasAllowAccessDuringBuddyEntitlement;
@property (nonatomic) _Bool hasLightweightPCSEntitlement;
@property (nonatomic) _Bool captureResponseHTTPHeaders;
@property (nonatomic) _Bool hasOutOfProcessUIEntitlement;
@property (nonatomic) _Bool hasParticipantPIIEntitlement;
@property (nonatomic) _Bool hasDisplaysSystemAcceptPromptEntitlement;
@property (nonatomic, readonly) _Bool useZoneWidePCS;
@property (nonatomic) _Bool returnPCSMetadata;
@property (nonatomic, readonly) NSString *encryptionServiceName;
@property (nonatomic, readonly) _Bool bypassPCSEncryption;
@property (nonatomic, readonly) _Bool forceEnableReadOnlyManatee;
@property (nonatomic) unsigned int clientSDKVersion;
@property (nonatomic, readonly) _Bool isSiloedContext;
@property (nonatomic) _Bool hasNonLegacyShareURLEntitlement;
@property (nonatomic) _Bool hasAllowUnverifiedAccountEntitlement;
@property (nonatomic) _Bool hasExplicitCodeOperationURLEntitlement;
@property (nonatomic, readonly) CKDPCSCache *pcsCache;
@property (retain, nonatomic) NSMutableDictionary *fakeErrorsByClassName;
@property (retain, nonatomic) NSMutableDictionary *fakeResponseOperationLifetimeByClassName;
@property (retain, nonatomic) NSMutableDictionary *fakeResponseOperationResultByClassNameByItemID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;
@property (nonatomic, readonly) NSString *deviceName;
@property (nonatomic, readonly) NSString *languageCode;
@property (nonatomic, readonly) NSString *regionCode;
@property (nonatomic, readonly) NSString *processName;

+ (id)contextWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2 proxy:(id)arg3;
+ (id)sharedContextWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2 proxy:(id)arg3;
+ (id)applicationContainerPathForBundleID:(id)arg1 bundleURL:(id *)arg2 contextType:(long long *)arg3;
+ (id)applicationCachesPathForBundleID:(id)arg1;
+ (id)sharedContexts;
+ (id)_sharedContextWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2 proxy:(id)arg3 forInternalUse:(_Bool)arg4;
+ (id)_sharedContextWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2 proxy:(id)arg3 forInternalUse:(_Bool)arg4 addToSharedContexts:(_Bool)arg5;
+ (id)applicationCachesPathForBundleID:(id)arg1 usingHomeCachesDirectory:(_Bool)arg2;
+ (id)sharedContextForInternalUseWithAppContainerAccountTuple:(id)arg1;
+ (id)sharedContextForInternalUseWithAppContainerTuple:(id)arg1 unitTestingAccountInfoProvider:(id)arg2;

- (void)dealloc;
- (id)CKPropertiesDescription;
- (void)showUserNotification:(void *)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)clearContextFromMetadataCache;
- (void)clearPILSCacheForLookupInfos:(id)arg1;
- (void)setFakeError:(id)arg1 forNextRequestOfClassName:(id)arg2;
- (void)setFakeResponseOperationResult:(id)arg1 forNextRequestOfClassName:(id)arg2 forItemID:(id)arg3 withLifetime:(int)arg4;
- (double)publicIdentitiesExpirationTimeout;
- (void)clearAssetCache;
- (unsigned long long)countAssetCacheItems;
- (void)showAssetCache;
- (void)clearRecordCache;
- (void)_clearCaches;
- (void)performRequest:(id)arg1;
- (void)addClientProxy:(id)arg1;
- (void)tearDownAssetTransfers;
- (void)removeClientProxy:(id)arg1;
- (id)createAppContainerTuple;
- (_Bool)hasAccountAccessAndTCCAuth;
- (void)fetchImportantUserIDsForOperation:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (id)baseURLForServerType:(long long)arg1 partitionType:(long long)arg2;
- (void)fetchServerEnvironmentForOperation:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)startSetupWithClientProxy:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)finishSetupWithClientProxy:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (unsigned long long)countAssetCacheItemsWithDatabaseScope:(long long)arg1;
- (void)showAssetCacheWithDatabaseScope:(long long)arg1;
- (void)clearAssetCacheWithDatabaseScope:(long long)arg1;
- (void)clearRecordCacheWithDatabaseScope:(long long)arg1;
- (void)clearAuthTokensForRecordWithID:(id)arg1 databaseScope:(long long)arg2;
- (unsigned long long)aggregatedOutstandingOperationCount;
- (void)_reloadAccount:(_Bool)arg1;
- (void)_loadApplicationContainerPathAndType;
- (void)_determineHardwareInfo;
- (void)dropMMCS;
- (void)_cancelAllLongLivedOperations;
- (_Bool)shouldUsePCSEncryption;
- (id)_dataclassNameForContainerIdentifier:(id)arg1;
- (_Bool)_cloudKitEnabledForCurrentClient;
- (_Bool)_anyAssociatedProxyHasTCCAuthorization;
- (id)_issueSandboxExtensionForPath:(id)arg1 withAuditToken:(CDStruct_6ad76789)arg2 error:(id *)arg3;
- (id)initWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2 proxy:(id)arg3;
- (id)assetDirectoryContext;
- (_Bool)_setupDirectoriesWithClientProxy:(id)arg1 sandboxExtensions:(id *)arg2 error:(id *)arg3;
- (_Bool)setupMMCSWrapperWithError:(id *)arg1;
- (id)_urlBySettingCustomBaseURL:(id)arg1 onURL:(id)arg2;
- (void)_fetchContainerInfoForOperation:(id)arg1 requireUserIDs:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)setupAssetTransfersWithClientProxy:(id)arg1 error:(id *)arg2;
- (id)deviceIDForOperation:(id)arg1;
- (void)fetchConfigurationForOperation:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)fetchPublicURLForServerType:(long long)arg1 operation:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)fetchPrivateURLForServerType:(long long)arg1 operation:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;

@end
