/*
 Image: /System/Library/PrivateFrameworks/NanoPassKit.framework/NanoPassKit
 */

#import <Foundation/NSObject.h>

@class NPKPaymentProvisioningFlowControllerRequestContext, NSData, NSDecimalNumber, NSString, PKAddPaymentPassRequest, PKAddPaymentPassRequestConfiguration, PKContactlessCardIngester, PKPaymentAuthorizationController, PKPaymentCredential, PKPaymentPass, PKPaymentProvisioningController, PKPaymentProvisioningMethodMetadata, PKPaymentRequest, PKPaymentSetupFieldsModel, PKPaymentSetupProduct, PKPaymentWebService, PKServiceProviderPurchase;

@protocol NPKPaymentProvisioningFlowControllerDelegate, NSObject, OS_dispatch_source;

@interface NPKPaymentProvisioningFlowController : NSObject

{
    _Bool _readerModeProvisioningSupported;
    _Bool _digitalIssuanceSupported;
    _Bool _separateLocalDeviceEntryRequired;
    _Bool _termsAcceptedOutOfBand;
    int _currentStep;
    id <NPKPaymentProvisioningFlowControllerDelegate> _delegate;
    PKPaymentProvisioningController *_provisioningController;
    long long _setupContext;
    PKPaymentAuthorizationController *_unitTestingAuthorizationController;
    PKContactlessCardIngester *_unitTestingCardIngester;
    PKAddPaymentPassRequestConfiguration *_inAppProvisioningRequestConfiguration;
    PKAddPaymentPassRequest *_inAppProvisioningRequest;
    NSData *_inAppProvisioningPublicKeyHash;
    NSData *_inAppProvisioningNonce;
    NSObject<OS_dispatch_source> *_inAppProvisioningGetRequestTimer;
    PKPaymentWebService *_webService;
    NSString *_chooseCredentialsStepIdentifier;
    NSString *_immediatelyBeforeTermsStepIdentifier;
    PKPaymentSetupFieldsModel *_fieldsModel;
    id <NSObject> _progressNotificationToken;
    NPKPaymentProvisioningFlowControllerRequestContext *_provisioningProgressRequestContext;
    PKPaymentPass *_issuerVerificationPass;
    PKPaymentCredential *_currentCredential;
    PKPaymentSetupProduct *_currentProduct;
    unsigned long long _termsReason;
    PKPaymentRequest *_digitalIssuancePaymentRequest;
    NSDecimalNumber *_digitalIssuanceAmount;
    PKServiceProviderPurchase *_digitalIssuancePurchase;
    NPKPaymentProvisioningFlowControllerRequestContext *_digitalIssuanceRequestContext;
    PKPaymentAuthorizationController *_authorizationController;
    PKContactlessCardIngester *_cardIngester;
    unsigned long long _internalIngestionState;
    unsigned long long _flowIngestionState;
    double _ingestionProgress;
    unsigned long long _ingestionStateOnRetry;
    NSString *_ingestionCardSessionToken;
    NSObject<OS_dispatch_source> *_ingestionCardNotFoundTimer;
    PKPaymentProvisioningMethodMetadata *_ingestionMethodMetadata;
    NPKPaymentProvisioningFlowControllerRequestContext *_readerModeRequestContext;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;
@property (retain, nonatomic) PKAddPaymentPassRequestConfiguration *inAppProvisioningRequestConfiguration;
@property (retain, nonatomic) PKAddPaymentPassRequest *inAppProvisioningRequest;
@property (retain, nonatomic) NSData *inAppProvisioningPublicKeyHash;
@property (retain, nonatomic) NSData *inAppProvisioningNonce;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *inAppProvisioningGetRequestTimer;
@property (retain, nonatomic) PKPaymentWebService *webService;
@property (nonatomic) int currentStep;
@property (retain, nonatomic) NSString *chooseCredentialsStepIdentifier;
@property (retain, nonatomic) NSString *immediatelyBeforeTermsStepIdentifier;
@property (retain, nonatomic) PKPaymentSetupFieldsModel *fieldsModel;
@property (retain, nonatomic) id <NSObject> progressNotificationToken;
@property (retain, nonatomic) NPKPaymentProvisioningFlowControllerRequestContext *provisioningProgressRequestContext;
@property (retain, nonatomic) PKPaymentPass *issuerVerificationPass;
@property (retain, nonatomic) PKPaymentCredential *currentCredential;
@property (retain, nonatomic) PKPaymentSetupProduct *currentProduct;
@property (nonatomic) unsigned long long termsReason;
@property (nonatomic) _Bool termsAcceptedOutOfBand;
@property (retain, nonatomic) PKPaymentRequest *digitalIssuancePaymentRequest;
@property (retain, nonatomic) NSDecimalNumber *digitalIssuanceAmount;
@property (retain, nonatomic) PKServiceProviderPurchase *digitalIssuancePurchase;
@property (retain, nonatomic) NPKPaymentProvisioningFlowControllerRequestContext *digitalIssuanceRequestContext;
@property (retain, nonatomic) PKPaymentAuthorizationController *authorizationController;
@property (retain, nonatomic) PKContactlessCardIngester *cardIngester;
@property (nonatomic) unsigned long long internalIngestionState;
@property (nonatomic) unsigned long long flowIngestionState;
@property (nonatomic) double ingestionProgress;
@property (nonatomic) unsigned long long ingestionStateOnRetry;
@property (retain, nonatomic) NSString *ingestionCardSessionToken;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *ingestionCardNotFoundTimer;
@property (retain, nonatomic) PKPaymentProvisioningMethodMetadata *ingestionMethodMetadata;
@property (retain, nonatomic) NPKPaymentProvisioningFlowControllerRequestContext *readerModeRequestContext;
@property (weak, nonatomic) id <NPKPaymentProvisioningFlowControllerDelegate> delegate;
@property (nonatomic, readonly) PKPaymentProvisioningController *provisioningController;
@property (nonatomic, readonly) long long setupContext;
@property (nonatomic, getter=isReaderModeProvisioningSupported) _Bool readerModeProvisioningSupported;
@property (nonatomic, getter=isDigitalIssuanceSupported) _Bool digitalIssuanceSupported;
@property (nonatomic, getter=isSeparateLocalDeviceEntryRequired) _Bool separateLocalDeviceEntryRequired;
@property (retain, nonatomic) PKPaymentAuthorizationController *unitTestingAuthorizationController;
@property (retain, nonatomic) PKContactlessCardIngester *unitTestingCardIngester;

+ (id)_authContext;
+ (id)_readerModeResources;
+ (_Bool)_localCredentials:(id)arg1 containProduct:(id)arg2;
+ (id)_flowPickerSectionsWithContext:(long long)arg1 provisioningController:(id)arg2 readerModeSupported:(_Bool)arg3 digitalIssuanceSupported:(_Bool)arg4;
+ (id)_displayableErrorWithIneligibilityReason:(long long)arg1 learnMoreURL:(id)arg2;
+ (id)_displayableErrorWithUnderlyingVerificationError:(id)arg1;
+ (id)_filteredPaymentSetupProducts:(id)arg1 localCredentials:(id)arg2 setupContext:(long long)arg3 webService:(id)arg4 mobileCarrierRegion:(id)arg5 readerModeSupported:(_Bool)arg6 digitalIssuanceSupported:(_Bool)arg7;
+ (_Bool)_isHSA2Enabled;
+ (_Bool)_readerModeEntryAllowedForProduct:(id)arg1;
+ (id)_displayableCouldNotAddCardErrorWithUnderlyingError:(id)arg1;
+ (id)_physicalCardURLFromMetadata:(id)arg1 forScale:(double)arg2;

- (void)dealloc;
- (void)reset;
- (id)_titleForState:(unsigned long long)arg1;
- (void)paymentAuthorizationControllerDidFinish:(id)arg1;
- (void)paymentAuthorizationController:(id)arg1 didAuthorizePayment:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)paymentAuthorizationController:(id)arg1 didAuthorizePurchase:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)contactlessCardIngester:(id)arg1 didFailToIngestCardWithError:(id)arg2 resetProvisioning:(_Bool)arg3 isRecoverable:(_Bool)arg4;
- (void)contactlessCardIngester:(id)arg1 didUpdateCardIngestionStatus:(unsigned long long)arg2;
- (id)_subtitleForState:(unsigned long long)arg1;
- (id)_paymentRequestForAmount:(id)arg1;
- (void)_startIngestion;
- (void)_tearDownCardIngester;
- (void)_removePassIfNecessary;
- (void)_invalidateCardNotFoundTimer;
- (void)_startCardNotFoundTimer;
- (void)_setupCardIngester;
- (void)_startReadingCard;
- (void)_startTransferringCard;
- (void)_provisioningLocalizedProgressDescriptionDidChange:(id)arg1;
- (void)_performTerms:(id)arg1;
- (id)initWithProvisioningController:(id)arg1 setupContext:(long long)arg2;
- (void)startProvisioningFlow:(id)arg1;
- (void)acknowledgeWelcome:(id)arg1;
- (void)chooseFlowForPickerItem:(id)arg1 requestContext:(id)arg2;
- (void)chooseProduct:(id)arg1 requestContext:(id)arg2;
- (void)chooseCredentials:(id)arg1 requestContext:(id)arg2;
- (void)chooseManualEntry:(id)arg1;
- (void)handleManualEntryFields:(id)arg1 credential:(id)arg2 requestContext:(id)arg3;
- (void)acceptTerms:(id)arg1;
- (void)skipProvisioning:(id)arg1;
- (void)handleIssuerVerificationChannel:(id)arg1 requestContext:(id)arg2;
- (void)handleIssuerVerificationFields:(id)arg1 requestContext:(id)arg2;
- (void)handleIssuerVerificationCode:(id)arg1 requestContext:(id)arg2;
- (void)startIssuerVerificationFlowForPaymentPass:(id)arg1 requestContext:(id)arg2;
- (void)acknowledgeMoreInformation:(id)arg1;
- (void)handleDigitalIssuanceAmount:(id)arg1 requestContext:(id)arg2;
- (void)chooseReaderMode:(id)arg1;
- (void)handleReaderModeFields:(id)arg1 requestContext:(id)arg2;
- (void)_handleProvisioningFlowStarted:(id)arg1;
- (void)_performNextActionForProvisioningState:(id)arg1;
- (void)_transitionToChooseFlowWithSections:(id)arg1 requestContext:(id)arg2;
- (void)_transitionBasedOnCredentials:(id)arg1 product:(id)arg2 requestContext:(id)arg3;
- (void)_transitionToChooseProductWithProducts:(id)arg1 requestContext:(id)arg2;
- (void)_handleProductChosen:(id)arg1 requestContext:(id)arg2;
- (void)_startDigitalIssuancePaymentWithAmount:(id)arg1 requestContext:(id)arg2;
- (void)_transitionToReaderModeForProduct:(id)arg1 requestContext:(id)arg2;
- (void)_transitionToTermsForReason:(unsigned long long)arg1 URL:(id)arg2 requestContext:(id)arg3;
- (void)_handleProceedWithCredentials:(id)arg1 chosenByUser:(_Bool)arg2 requestContext:(id)arg3;
- (void)_performTransitionToStep:(int)arg1 withContext:(id)arg2;
- (id)_localRequiredFieldsFromRequirementsResponse;
- (id)_requiredFieldsFromRequirementsResponseExcludingLocalFields;
- (_Bool)_fieldsModelCompleteExceptForLocalFields:(id)arg1;
- (void)_transitionToSecondaryManualEntryWithFields:(id)arg1 credential:(id)arg2 requestContext:(id)arg3;
- (void)_handleReaderModeTermsAccepted:(id)arg1;
- (void)_handleDigitalIssuanceTermsAccepted:(id)arg1;
- (void)_handleEndOfProvisioningFlowForCurrentPass:(id)arg1 requestContext:(id)arg2;
- (void)_performNextStepForProvisionedPass:(id)arg1 moreInfoAcknowledged:(_Bool)arg2 requestContext:(id)arg3;
- (void)_requestVerificationOptionsForPass:(id)arg1 context:(id)arg2;
- (void)_updateVerificationForPass:(id)arg1 channel:(id)arg2 context:(id)arg3;
- (void)_handleVerificationFieldsForPass:(id)arg1 context:(id)arg2;
- (void)_handleVerificationCode:(id)arg1 forPass:(id)arg2 context:(id)arg3;
- (void)_endProvisioningFlowWithError:(id)arg1 requestContext:(id)arg2;
- (void)_performEligibility:(id)arg1;
- (void)_fetchInAppProvisioningCertificates:(id)arg1;
- (void)_fetchAddRequestWithCertificatesResponse:(id)arg1 requestContext:(id)arg2;
- (void)_sendDidEncounterError:(id)arg1 requestContext:(id)arg2;
- (void)_handlePreconditionsVerified:(id)arg1;
- (void)_verifyPasscodeStateIfNecessaryWithCompletion:(CDUnknownBlockType)arg1;
- (void)_configureWebServiceIfNecessary:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_startProvisioningForCredential:(id)arg1 requestContext:(id)arg2;
- (void)_requestRequirements:(id)arg1;
- (void)_requestPassDetailsForAccountCredential:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)_noteProvisioningStateChangeForReaderMode:(long long)arg1;
- (void)_performRequirementsOrEligibilityForInAppProvisioning:(id)arg1;
- (void)_performPasscodeUpgrade:(id)arg1;
- (void)_performProvision:(id)arg1;
- (void)_handleFinished:(id)arg1;
- (id)_newPaymentRequirementsRequest;
- (void)_transitionToProductDisambiguationWithProducts:(id)arg1 requestContext:(id)arg2;
- (id)_newPaymentEligibilityRequest;
- (void)_transitionToProvisioningProgressWithRequestContext:(id)arg1;
- (id)_newPaymentProvisioningRequest;
- (void)_performNextStepForProvisionedPass:(id)arg1 requestContext:(id)arg2;
- (void)_transitionToMoreInformationWithItems:(id)arg1 pass:(id)arg2 requestContext:(id)arg3;
- (void)_transitionToVerificationFieldsWithPaymentPass:(id)arg1 fields:(id)arg2 requestContext:(id)arg3;
- (void)_transitionToVerificationCodeWithPaymentPass:(id)arg1 channel:(id)arg2 requestContext:(id)arg3;
- (void)_downloadAndAddUpdatedPassForPaymentPass:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_transitionToVerificationChannelsWithPaymentPass:(id)arg1 channels:(id)arg2 requestContext:(id)arg3;
- (void)_handleVerificationResponseForPass:(id)arg1 context:(id)arg2;
- (void)_downloadRemoteAssetsAndAddPaymentPass:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_transitionToChooseCredentials:(id)arg1 requestContext:(id)arg2;
- (void)_transitionToDigitalIssuanceForProduct:(id)arg1 requestContext:(id)arg2;
- (void)_transitionToManualEntry:(id)arg1;
- (id)_filteredPaymentSetupFields:(id)arg1 forLocalDeviceEntry:(_Bool)arg2;
- (void)_endProvisioningFlowWithSuccessForPass:(id)arg1 requestContext:(id)arg2;
- (void)_sendDidTransitionFromStep:(int)arg1 toStep:(int)arg2 withContext:(id)arg3;
- (id)_requiredFieldsFromRequirementsResponse;
- (_Bool)_fieldRequiresLocalEntry:(id)arg1;
- (void)handleProductSelection:(id)arg1 requestContext:(id)arg2;
- (void)skipIssuerVerification:(id)arg1;
- (void)startInAppProvisioningFlowWithConfiguration:(id)arg1 requestContext:(id)arg2;
- (void)handleIssuerApplicationAddRequest:(id)arg1 requestContext:(id)arg2;
- (id)_addCardErrorForPaymentRequest:(id)arg1;
- (void)_startReaderModeIngestion:(id)arg1;
- (void)_transitionToIngestionProgress:(double)arg1;
- (void)_transitionToFlowIngestionState:(unsigned long long)arg1;
- (void)_resetReaderModeProvisioningState;
- (void)_transitionToFlowIngestionState:(unsigned long long)arg1 progress:(double)arg2;
- (void)_cardNotFoundTimerFired;

@end
