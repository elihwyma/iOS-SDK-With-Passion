/*
 Image: /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon
 */

#import <Foundation/NSObject.h>

@class CSSearchableIndex, EFCancelationToken, EFFuture, EFLazyCache, EFObservable, NSMutableArray, NSMutableSet, NSString, _EMSearchableIndexPendingRemovals;

@protocol EDSearchableIndexDataSource, EDSearchableIndexReasonProvider, EDSearchableIndexSchedulableDelegate, EFScheduler, OS_dispatch_queue, OS_dispatch_source, OS_os_activity;

@interface EDSearchableIndex : NSObject

{
    NSString *_indexName;
    EFCancelationToken *_cancelationToken;
    NSObject<OS_dispatch_queue> *_stateTransitionQueue;
    NSObject<OS_dispatch_source> *_coalescingTimer;
    long long _resumeCount;
    long long _transaction;
    unsigned long long _throttledIndexingBatchSize;
    unsigned long long _throttledDataSourceBatchSize;
    unsigned long long _currentMaximumBatchSize;
    NSObject<OS_os_activity> *_batchIndexingActivity;
    NSMutableSet *_removedIdentifiers;
    NSMutableArray *_preparingItems;
    NSMutableArray *_pendingItems;
    NSMutableArray *_preprocessingItems;
    NSMutableArray *_processingItems;
    NSMutableSet *_pendingDomainRemovals;
    _EMSearchableIndexPendingRemovals *_pendingIdentifierRemovals;
    NSObject<OS_dispatch_queue> *_indexingQueue;
    NSObject<OS_dispatch_queue> *_dataSourceQueue;
    id <EFScheduler> _preprocessingScheduler;
    struct os_unfair_lock_s _mainThreadAccessibleIvarLock;
    id <EFScheduler> _indexingBatchScheduler;
    EFLazyCache *_searchResultsCache;
    _Bool _isActive;
    _Bool _needsRefresh;
    _Bool _needsVerification;
    _Bool _coalesceTimerFired;
    _Bool _scheduledProcessing;
    _Bool _scheduledRefresh;
    _Bool _scheduledVerification;
    _Bool _indexImmediately;
    _Atomic long long _countOfBlocksAffectingDataSourceAndIndex;
    _Bool _dataSourceIndexingPermitted;
    _Bool _persistenceAvailable;
    _Bool _skipIndexExclusionCheck;
    _Bool _clientStateFetched;
    _Bool _enableSpotlightVerification;
    id <EDSearchableIndexDataSource> _dataSource;
    id <EDSearchableIndexReasonProvider> _reasonProvider;
    id <EDSearchableIndexSchedulableDelegate> _schedulableDelegate;
    CSSearchableIndex *_csIndex;
    NSString *_searchableIndexBundleID;
    double _coalescingDelaySeconds;
    double _dataSourceUpdateTimeLimit;
    EFFuture *_delayDataSourceAssignmentFuture;
}

@property (readonly, getter=_transaction) long long transaction;
@property (retain, nonatomic) CSSearchableIndex *csIndex;
@property (copy, nonatomic, readonly) NSString *copyDiagnosticInformation;
@property (nonatomic) _Bool skipIndexExclusionCheck;
@property (nonatomic) _Bool clientStateFetched;
@property (nonatomic) _Bool enableSpotlightVerification;
@property (copy, nonatomic) NSString *searchableIndexBundleID;
@property (nonatomic) double coalescingDelaySeconds;
@property (nonatomic) double dataSourceUpdateTimeLimit;
@property (readonly) long long resumeCount;
@property (readonly, getter=isActive) _Bool active;
@property (retain, nonatomic) EFFuture *delayDataSourceAssignmentFuture;
@property (copy, nonatomic, readonly) NSString *indexName;
@property (weak, nonatomic) id <EDSearchableIndexDataSource> dataSource;
@property (weak, nonatomic) id <EDSearchableIndexReasonProvider> reasonProvider;
@property (weak, nonatomic) id <EDSearchableIndexSchedulableDelegate> schedulableDelegate;
@property (nonatomic, readonly) unsigned long long pendingIndexItemsCount;
@property (readonly, getter=isPerformingBlockAffectingDataSourceAndIndex) _Bool performingBlockAffectingDataSourceAndIndex;
@property (getter=isPersistenceAvailable) _Bool persistenceAvailable;
@property (nonatomic, readonly) EFObservable *powerObservable;
@property (nonatomic, readonly, getter=isPluggedIn) _Bool pluggedIn;
@property (nonatomic, readonly) _Bool shouldCancelSearchQuery;
@property (nonatomic, readonly) _Bool canIndexAttachments;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;
@property (readonly) unsigned long long signpostID;
@property (nonatomic, getter=isDataSourceIndexingPermitted) _Bool dataSourceIndexingPermitted;

+ (id)log;
+ (id)signpostLog;
+ (_Bool)isIncrementalIndexingType:(long long)arg1;
+ (id)_localClientStateURL;
+ (id)_localClientState;
+ (void)_saveLocalClientState:(id)arg1;
+ (_Bool)isValidTransaction:(long long)arg1;
+ (id)userHandle;

- (void)dealloc;
- (void)_suspend;
- (void)_resume;
- (void)resume;
- (void)removeAllItems;
- (void)suspend;
- (void)_invalidateCache;
- (void)refresh;
- (void)setForeground:(_Bool)arg1;
- (void)applicationWillSuspend;
- (void)searchableIndex:(id)arg1 reindexAllSearchableItemsWithAcknowledgementHandler:(CDUnknownBlockType)arg2;
- (void)searchableIndex:(id)arg1 reindexSearchableItemsWithIdentifiers:(id)arg2 acknowledgementHandler:(CDUnknownBlockType)arg3;
- (void)removeItemsWithIdentifiers:(id)arg1;
- (id)identifiersMatchingCriterion:(id)arg1;
- (void)applicationWillResume;
- (void)indexItems:(id)arg1;
- (void)removeItemsForDomainIdentifier:(id)arg1;
- (void)reindexSearchableItemsWithIdentifiers:(id)arg1 acknowledgementHandler:(CDUnknownBlockType)arg2;
- (void)reindexAllSearchableItemsWithAcknowledgementHandler:(CDUnknownBlockType)arg1;
- (void)scheduleRecurringActivity;
- (id)initWithName:(id)arg1 dataSource:(id)arg2 reasonProvider:(id)arg3;
- (void)indexItems:(id)arg1 immediately:(_Bool)arg2;
- (void)indexMessages:(id)arg1 includeBody:(_Bool)arg2 indexingType:(long long)arg3;
- (void)logPowerEventWithIdentifier:(id)arg1 eventData:(id)arg2;
- (void)addSearchQueryCancelable:(id)arg1;
- (void)removeSearchQueryCancelable:(id)arg1;
- (id)dataSourceRefreshReasons;
- (id)purgeReasons;
- (id)exclusionReasons;
- (id)currentReasons;
- (id)messageIDsMatchingQuery:(id)arg1;
- (void)_powerStateChanged;
- (void)_registerDistantFutureSpotlightVerification;
- (void)_queueRefresh;
- (void)_queueTransitionActive:(_Bool)arg1 fromRefresh:(_Bool)arg2;
- (void)_scheduleSpotlightVerificationOnIndexingQueueWithCompletion:(CDUnknownBlockType)arg1;
- (void)_handleFailingTransactionIDs:(id)arg1 sampleCount:(unsigned long long)arg2;
- (void)_processSpotlightVerificationWithCompletion:(CDUnknownBlockType)arg1;
- (void)_transitionWithBudgetTimeUsed:(double)arg1;
- (void)_verifySpotlightIndex;
- (void)_invalidateItemsInTransactions:(id)arg1;
- (void)_dataSourceInvalidateItemsGreaterThanTransaction:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (unsigned long long)_countOfItemsInPendingQueues;
- (id)_eventDataForTransitionState:(id)arg1;
- (void)_dataSourceScheduleWork:(CDUnknownBlockType)arg1;
- (void)_dataSourceAssignTransaction:(long long)arg1 updates:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)removeItemsWithIdentifiers:(id)arg1 reasons:(id)arg2 fromRefresh:(_Bool)arg3;
- (void)indexItems:(id)arg1 fromRefresh:(_Bool)arg2 immediately:(_Bool)arg3;
- (double)_throttleRequestedSize:(unsigned long long *)arg1 targetTime:(double)arg2 action:(CDUnknownBlockType)arg3;
- (void)_queueConsumeBudgetElapsedPeriod:(double)arg1;
- (id)_pendingIdentifiers;
- (void)_coalescingTimerFired;
- (void)_fetchLastClientState;
- (void)_stopCoalescingTimer;
- (void)_scheduleProcessPendingItemsFromRefresh:(_Bool)arg1;
- (void)_startCoalescingTimer;
- (_Bool)_queueContentsAllowsRefresh;
- (void)_scheduleDataSourceRefresh;
- (void)_scheduleSpotlightVerification;
- (void)_logSignpostForIndexingBatchStartWithPendingItemsCount:(id)arg1;
- (id)_consumeBatchOfSize:(unsigned long long)arg1;
- (void)_getDomainRemovals:(id *)arg1 identifierRemovals:(id *)arg2;
- (long long)_nextTransaction;
- (id)_identifiersStringForItems:(id)arg1 maxLength:(unsigned long long)arg2;
- (id)_processDomainRemovals:(id)arg1;
- (void)_logSignpostForIndexingBatchAssignedDomainRemovalCount:(unsigned long long)arg1;
- (_Bool)_processIndexingBatch:(id)arg1 clientState:(id)arg2 itemsNotIndexed:(id)arg3;
- (void)_processIdentifierRemovals:(id)arg1;
- (void)_logSignpostForIndexingBatchAssignedUpdatesWithItemsIndexedCount:(unsigned long long)arg1;
- (void)_noteNeedsLastClientStateFetch;
- (void)_logSignpostForIndexingBatchCompletedWithItemsIndexedCount:(id)arg1;
- (void)_processRefreshRequestWithCompletion:(CDUnknownBlockType)arg1;
- (void)beginUpdatesAffectingDataSourceAndIndex;
- (void)endUpdatesAffectingDataSourceAndIndex;
- (id)_identifiersForItems:(id)arg1;
- (void)_dataSourceRequestNeededUpdatesExcludingIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_dataSourceVerifyRepresentativeSampleWithCompletion:(CDUnknownBlockType)arg1;
- (void)_dataSourceAssignTransaction:(long long)arg1 forIdentifiers:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)reindexAllItemsWithOptions:(unsigned long long)arg1 acknowledgementHandler:(CDUnknownBlockType)arg2;
- (void)_indexItems:(id)arg1 fromRefresh:(_Bool)arg2 immediately:(_Bool)arg3;
- (void)_dataSourcePrepareToIndexItems:(id)arg1 fromRefresh:(_Bool)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (_Bool)_preprocessItemIfNecessary:(id)arg1 fromRefresh:(_Bool)arg2;
- (void)_queueConsumeBudgetItemCount:(unsigned long long)arg1;
- (void)removeAllItemsWithAcknowledgementHandler:(CDUnknownBlockType)arg1;
- (id)bundleIdentifierForSearchableIndexVerifier:(id)arg1;
- (id)dataSamplesForSearchableIndexVerifier:(id)arg1 searchableIndex:(id)arg2 count:(unsigned long long)arg3;
- (id)searchableIndexForSearchableIndexVerifier:(id)arg1;
- (void)performBlockAffectingDataSourceAndIndex:(CDUnknownBlockType)arg1;
- (id)issueDiagnosticsRequestForMessageRowId:(id)arg1;
- (id)indexedEmptySubjectIdentifers;
- (void)removeMessages:(id)arg1;
- (void)indexAttachmentsForMessageWithIdentifier:(id)arg1;
- (void)markMessagesAsPrinted:(id)arg1;
- (void)waitForAsynchronousWork;

@end
