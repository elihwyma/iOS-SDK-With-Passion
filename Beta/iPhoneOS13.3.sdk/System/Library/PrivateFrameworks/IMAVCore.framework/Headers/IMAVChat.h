/*
 Image: /System/Library/PrivateFrameworks/IMAVCore.framework/IMAVCore
 */

#import <Foundation/NSObject.h>

@class IMAVChatParticipant, IMAccount, IMHandle, IMTimingCollection, NSArray, NSData, NSDate, NSDictionary, NSError, NSMutableArray, NSMutableDictionary, NSNumber, NSString, NSTimer;

@protocol OS_dispatch_queue;

@interface IMAVChat : NSObject

{
    NSString *_GUID;
    NSString *_conferenceID;
    NSMutableArray *_participants;
    IMHandle *_initiator;
    IMAVChatParticipant *_localParticipant;
    NSMutableDictionary *_conferenceStateCache;
    NSNumber *_natType;
    NSMutableDictionary *_extraServerContext;
    NSDate *_dateCreated;
    NSDate *_dateStartedConnecting;
    NSDate *_dateConnected;
    NSDate *_dateEnded;
    NSDate *_dateReceivedRelayInitiate;
    NSDate *_dateReceivedRelayUpdate;
    NSDate *_interruptionBegan;
    NSDictionary *_pingTestResults;
    NSNumber *_frontCameraCaptureTime;
    NSNumber *_backCameraCaptureTime;
    NSNumber *_dataRate;
    NSNumber *_dataUploaded;
    NSNumber *_dataDownloaded;
    IMTimingCollection *_timingCollection;
    unsigned long long _localNetworkConnectionType;
    unsigned long long _remoteNetworkConnectionType;
    long long _pingTestResult;
    long long _networkCheckResult;
    NSDictionary *_callerProperties;
    NSObject<OS_dispatch_queue> *_conferenceQueue;
    NSData *_relayRemotePrimaryIdentifier;
    unsigned int _sessionID;
    NSError *_error;
    unsigned int _localState;
    unsigned int _lastPostedState;
    NSString *_callStatisticsGUID;
    double _connectionTimeoutTime;
    double _invitationTimeoutTime;
    _Bool _hasGatheredInfo;
    _Bool _hasReceivedFirstFrame;
    _Bool _hasPendingAccept;
    _Bool _hasPendingInit;
    _Bool _isCaller;
    _Bool _isVideo;
    int _connectionType;
    _Bool _needsVideoRestart;
    _Bool _needsAudioRestart;
    _Bool _isVideoInterrupted;
    _Bool _isAudioInterrupted;
    _Bool _connectionStarted;
    _Bool _relayed;
    _Bool _mayRequireBreakBeforeMake;
    _Bool _terminating;
    _Bool _didRemoteMute;
    _Bool _didRemotePause;
    _Bool _airplaneModeEnabled;
    _Bool _metadataFinalized;
    id _conferenceController;
    NSTimer *_inviteTimeoutTimer;
    NSDate *_inviteTimeoutTimerStart;
    NSTimer *_firstFrameTimeoutTimer;
    NSTimer *_connectionTimeoutTimer;
    struct CGSize _portraitAspectRatios;
    struct CGSize _landscapeAspectRatios;
}

@property (nonatomic) void *localVideoLayer;
@property (nonatomic) void *localVideoBackLayer;
@property (nonatomic) unsigned int cameraOrientation;
@property (nonatomic) unsigned int cameraType;
@property (nonatomic) double invitationTimeoutTime;
@property (nonatomic) double connectionTimeoutTime;
@property (nonatomic, setter=setMute:) _Bool isMute;
@property (nonatomic, setter=setRemoteMute:) _Bool isRemoteMute;
@property (nonatomic) _Bool isSendingAudio;
@property (nonatomic, readonly) _Bool didRemoteMute;
@property (nonatomic, setter=setPaused:) _Bool isPaused;
@property (nonatomic, readonly) _Bool hasReceivedFirstFrame;
@property (nonatomic) _Bool isSendingVideo;
@property (nonatomic, readonly) _Bool didRemotePause;
@property (nonatomic, readonly) _Bool _allParticipantsUsingICE;
@property (readonly) NSDictionary *_extraServerContext;
@property (retain, nonatomic, setter=_setConferenceID:) NSString *conferenceID;
@property (retain, nonatomic, setter=_setCallStatisticsGUID:) NSString *_callStatisticsGUID;
@property (nonatomic, setter=_setConferenceController:) id _conferenceController;
@property (retain, nonatomic, setter=_setGUID:) NSString *GUID;
@property (retain, nonatomic, setter=_setNatType:) NSNumber *_natType;
@property (nonatomic, readonly) NSNumber *_remoteNatType;
@property (nonatomic, readonly) NSNumber *_currentNatType;
@property (nonatomic, setter=_setConnectionType:) int _connectionType;
@property (nonatomic, readonly) long long _bustedCallID;
@property (nonatomic, readonly) NSNumber *_connectDuration;
@property (nonatomic, readonly) NSNumber *_callDuration;
@property (nonatomic, readonly) NSNumber *_relayConnectDuration;
@property (nonatomic, readonly) _Bool _usesRelay;
@property (nonatomic, readonly) _Bool _isProxy;
@property (retain, nonatomic, setter=_setRelayRemotePrimaryIdentifier:) NSData *_relayRemotePrimaryIdentifier;
@property (retain, nonatomic, setter=_setInterruptionBegan:) NSDate *_interruptionBegan;
@property (retain, nonatomic, setter=_setFrontCameraCaptureTime:) NSNumber *_frontCameraCaptureTime;
@property (retain, nonatomic, setter=_setBackCameraCaptureTime:) NSNumber *_backCameraCaptureTime;
@property (retain, nonatomic, setter=setDataRate:) NSNumber *dataRate;
@property (retain, nonatomic, setter=setDataUploaded:) NSNumber *dataUploaded;
@property (retain, nonatomic, setter=setDataDownloaded:) NSNumber *dataDownloaded;
@property (nonatomic, setter=_setIsVideoInterrupted:) _Bool _isVideoInterrupted;
@property (nonatomic, setter=_setIsAudioInterrupted:) _Bool _isAudioInterrupted;
@property (nonatomic, setter=_setLocalNetworkConnectionType:) unsigned long long _localNetworkConnectionType;
@property (nonatomic, setter=_setRemoteNetworkConnectionType:) unsigned long long _remoteNetworkConnectionType;
@property (nonatomic, setter=_setNeedsAudioRestart:) _Bool _needsAudioRestart;
@property (nonatomic, setter=_setNeedsVideoRestart:) _Bool _needsVideoRestart;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *_conferenceQueue;
@property (retain, nonatomic, setter=_setPingTestResults:) NSDictionary *_pingTestResults;
@property (nonatomic, setter=_setPingTestResult:) long long _pingTestResult;
@property (nonatomic, setter=_setNetworkCheckResult:) long long _networkCheckResult;
@property (retain, nonatomic, setter=_setCallerProperties:) NSDictionary *callerProperties;
@property (nonatomic, setter=_setConnectionStarted:) _Bool _connectionStarted;
@property (nonatomic, readonly) NSArray *_imHandles;
@property (nonatomic) _Bool mayRequireBreakBeforeMake;
@property (retain, nonatomic, setter=_setInviteTimeoutTimer:) NSTimer *inviteTimeoutTimer;
@property (retain, nonatomic, setter=_setInviteTimeoutTimerStart:) NSDate *inviteTimeoutTimerStart;
@property (retain, nonatomic, setter=_setFirstFrameTimeoutTimer:) NSTimer *firstFrameTimeoutTimer;
@property (retain, nonatomic, setter=_setConnectionTimeoutTimer:) NSTimer *connectionTimeoutTimer;
@property (nonatomic, setter=_setPortraitAspectRatios:) struct CGSize portraitAspectRatios;
@property (nonatomic, setter=_setLandscapeAspectRatios:) struct CGSize landscapeAspectRatios;
@property (nonatomic, getter=isTerminating, setter=_setTerminating:) _Bool terminating;
@property (nonatomic, setter=_setDidRemoteMute:) _Bool didRemoteMute;
@property (nonatomic, setter=_setDidRemotePause:) _Bool didRemotePause;
@property (nonatomic, setter=_setAirplaneModeEnabled:) _Bool airplaneModeEnabled;
@property (nonatomic, setter=_setMetadataFinalized:) _Bool metadataFinalized;
@property (nonatomic, readonly) unsigned int sessionID;
@property (nonatomic, readonly) IMHandle *initiatorIMHandle;
@property (nonatomic, readonly) IMHandle *otherIMHandle;
@property (nonatomic, readonly) IMAccount *account;
@property (nonatomic, readonly) IMAVChatParticipant *initiatorParticipant;
@property (nonatomic, readonly) IMAVChatParticipant *localParticipant;
@property (nonatomic, readonly) NSArray *participants;
@property (nonatomic, readonly) NSArray *remoteParticipants;
@property (nonatomic, readonly) unsigned int state;
@property (nonatomic, readonly) _Bool isActive;
@property (nonatomic, readonly) _Bool isStateFinal;
@property (nonatomic, readonly) int endedError;
@property (nonatomic, readonly) unsigned int endedReason;
@property (nonatomic, readonly) NSDate *dateCreated;
@property (nonatomic, readonly) NSDate *dateConnected;
@property (nonatomic, readonly) NSDate *dateEnded;
@property (nonatomic, readonly) _Bool isCaller;
@property (nonatomic, readonly) _Bool isVideo;
@property (nonatomic, readonly) _Bool isUsingWifi;
@property (nonatomic, getter=isRelayed) _Bool relayed;

+ (id)outgoingInvitations;
+ (id)_outgoingInvitations;
+ (id)incomingInvitations;
+ (id)_incomingInvitations;
+ (id)_avChatWaitingForReplyFromIMHandle:(id)arg1 orConferenceID:(id)arg2;
+ (id)_avChatWithConferenceID:(id)arg1;
+ (id)_avChatConnectingFromIMHandle:(id)arg1;
+ (id)_activeChat;
+ (id)_nonFinalChat;
+ (id)_connectedChat;
+ (id)_avChatArray;
+ (id)_bestGuessAVChatWithIMHandle:(id)arg1 conferenceID:(id)arg2 sessionID:(unsigned int)arg3 properties:(id)arg4;
+ (id)_imHandleFromProxyRepresentation:(id)arg1;
+ (id)_avChatWithGUID:(id)arg1;
+ (double)defaultConnectionTimeoutTime;
+ (double)defaultInvitationTimeoutTime;
+ (int)systemSupportsNewOutgoingConferenceTo:(id)arg1 isVideo:(_Bool)arg2;
+ (id)_avChatWithMatchingIMHandles:(id)arg1 video:(_Bool)arg2;
+ (id)_proxyRepresentationForIMHandle:(id)arg1;
+ (id)_connectingChats;
+ (id)_connectedChats;
+ (id)_chatListLock;
+ (void)setDefaultInvitationTimeoutTime:(double)arg1;
+ (void)setDefaultConnectionTimeoutTime:(double)arg1;
+ (id)activeChat;
+ (id)chatList;
+ (id)chatsWithIMAVChatState:(unsigned int)arg1;
+ (id)connectingChats;
+ (id)connectedChats;
+ (id)_chatList;
+ (id)_chatsWithIMAVChatState:(unsigned int)arg1;
+ (id)_chatWithSessionID:(unsigned int)arg1;
+ (id)_avChatInvitedByIMHandle:(id)arg1 orConferenceID:(id)arg2;
+ (id)connectedChat;
+ (id)nonFinalChat;
+ (id)acceptedChats;
+ (id)avChatWithGUID:(id)arg1;
+ (id)_acceptedChats;

- (void)dealloc;
- (id)description;
- (void)_postNotificationName:(id)arg1 userInfo:(id)arg2;
- (_Bool)stopPreview;
- (id)_timings;
- (void)systemWillShutdown;
- (void)systemApplicationDidEnterBackground;
- (void)systemApplicationWillEnterForeground;
- (void)systemApplicationDidBecomeActive;
- (void)systemApplicationDidSuspend;
- (void)systemApplicationDidResume;
- (void)systemApplicationDidResumeForEventsOnly;
- (void)notificationCenterWillAppear;
- (void)notificationCenterDidDisappear;
- (void)systemDidFastUserSwitchOut;
- (void)acceptInvitation;
- (void)cancelInvitation;
- (void)declineInvitation;
- (void)_clearCache;
- (void)setRemoteVideoPresentationSize:(struct CGSize)arg1;
- (void)setRemoteVideoPresentationState:(unsigned int)arg1;
- (id)participantMatchingIMHandle:(id)arg1;
- (id)initIncomingFrom:(id)arg1 isVideo:(_Bool)arg2 callerProperties:(id)arg3;
- (void)beginChat;
- (void)endChat;
- (void)_responseToVCInvite:(id)arg1;
- (void)_cancelInvitationWithReason:(unsigned int)arg1 error:(int)arg2;
- (void)handleGenericAVMessageFromParticipant:(id)arg1 type:(unsigned int)arg2 userInfo:(id)arg3;
- (void)_peerID:(id)arg1 changedTo:(id)arg2;
- (void)_submitCallStartedLoggingWithRecipientID:(id)arg1 isCaller:(_Bool)arg2 isVideo:(_Bool)arg3;
- (void)declineInvitationWithResponse:(unsigned int)arg1;
- (id)_initOutgoingTo:(id)arg1 isVideo:(_Bool)arg2 isRelayed:(_Bool)arg3 GUID:(id)arg4;
- (void)endChatWithReason:(unsigned int)arg1;
- (void)inviteAll;
- (void)invite:(id)arg1 additionalPeers:(id)arg2 excludingPushTokens:(id)arg3;
- (void)setLocalAspectRatio:(struct CGSize)arg1 cameraOrientation:(unsigned int)arg2 cameraType:(unsigned int)arg3;
- (void)_handleAVError:(id)arg1;
- (void)_handleRelayInitate:(id)arg1 fromParticipant:(id)arg2;
- (void)_handleRelayUpdate:(id)arg1 fromParticipant:(id)arg2;
- (void)_handleRelayCancel:(id)arg1 fromParticipant:(id)arg2;
- (id)_initWith:(id)arg1 invitedBy:(id)arg2 sessionID:(unsigned int)arg3 isRelayed:(_Bool)arg4 GUID:(id)arg5 video:(_Bool)arg6 extraProperties:(id)arg7;
- (void)_setCreationDate;
- (void)_initParticipantsWithIMHandles:(id)arg1;
- (_Bool)_participantsCheckOut;
- (void)_airplaneModeChanged:(id)arg1;
- (void)_entitlementsChanged:(id)arg1;
- (id)_initWith:(id)arg1 invitedBy:(id)arg2 sessionID:(unsigned int)arg3 GUID:(id)arg4 video:(_Bool)arg5 extraProperties:(id)arg6;
- (id)initOutgoingTo:(id)arg1 isVideo:(_Bool)arg2 isRelayed:(_Bool)arg3;
- (id)initOutgoingTo:(id)arg1 isVideo:(_Bool)arg2 isRelayed:(_Bool)arg3 GUID:(id)arg4;
- (void)_clearConnectionTimeoutTimer;
- (void)_clearFirstFrameTimeoutTimer;
- (void)_clearInvitationTimeoutTimer;
- (void)endChatWithReason:(unsigned int)arg1 error:(int)arg2;
- (void)_endChatWithReason:(unsigned int)arg1 andError:(int)arg2;
- (void)_submitCallEndedLoggingWithReason:(unsigned int)arg1 andError:(int)arg2;
- (void)_postStateToDelegateIfNecessary;
- (_Bool)_isCallUpgradeTo:(id)arg1;
- (void)_setActiveConference;
- (void)_vccInitDidFinish:(id)arg1;
- (void)_insertRemoteParticipant:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)invite:(id)arg1 additionalPeers:(id)arg2;
- (_Bool)_processVCResponseDict:(id)arg1;
- (void)__responseToVCInvite:(id)arg1;
- (void)_handleGenericAVMessageFromParticipant:(id)arg1 type:(unsigned int)arg2 userInfo:(id)arg3 handled:(_Bool)arg4;
- (id)_participantMatchingVCPartyID:(id)arg1;
- (void)_setDateConnected;
- (void)_submitCallConnectedLogging;
- (id)initOutgoingTo:(id)arg1 isVideo:(_Bool)arg2;
- (void)endChatWithError:(int)arg1;
- (id)inviteesInfo;
- (_Bool)_isVideoUpgradeTo:(id)arg1;
- (void)invite:(id)arg1;
- (void)_setStateDisconnected;
- (void)_applicationWillTerminate:(id)arg1;
- (id)participantWithAVConferenceCallID:(long long)arg1;
- (id)participantWithID:(id)arg1;
- (id)vcPartyIDForIMHandle:(id)arg1;
- (_Bool)isConferenceSilent;
- (void)_postNotificationName:(id)arg1 participant:(id)arg2 userInfo:(id)arg3;
- (void)_noteFirstFrame;
- (void)_cacheBool:(_Bool)arg1 forKey:(id)arg2;
- (_Bool)_hasCachedBoolForKey:(id)arg1;
- (_Bool)_cachedBoolForKey:(id)arg1;
- (void)conferencePersonWithID:(id)arg1 mediaDidStall:(_Bool)arg2;
- (void)_reduceInvitationTimeoutTime;
- (void)participant:(id)arg1 changedFromState:(unsigned int)arg2 toState:(unsigned int)arg3;
- (struct CGSize)localAspectRatioForCameraOrientation:(unsigned int)arg1 cameraType:(unsigned int)arg2;
- (_Bool)startPreviewWithError:(id *)arg1;
- (id)_proxyRepresentation;
- (void)_postParticipantMediaChangeNotification:(id)arg1 cameraChanged:(_Bool)arg2 orientationChanged:(_Bool)arg3 aspectChanged:(_Bool)arg4 cameraWillSwitch:(_Bool)arg5 camera:(unsigned int)arg6 orientation:(unsigned int)arg7 aspect:(struct CGSize)arg8;
- (void)_setInvitationTimeoutTimer;
- (void)_setConnectionTimeoutTimer;
- (void)_connectionTimeout:(id)arg1;
- (void)_invitationTimeout:(id)arg1;
- (void)_firstFrameTimeout:(id)arg1;
- (void)_setFirstFrameTimeoutTimer;
- (void)_conferenceOtherParticipant:(id)arg1 didConnect:(_Bool)arg2;
- (void)conferenceDidStopWithCallID:(long long)arg1 error:(id)arg2;
- (void)conferenceDidPauseAudioWithCallID:(long long)arg1 didPauseAudio:(_Bool)arg2;
- (void)conferenceAVConferenceCallID:(long long)arg1 didConnect:(_Bool)arg2;
- (void)conferencePersonWithID:(id)arg1 didMute:(_Bool)arg2;
- (void)conferencePersonWithID:(id)arg1 didPause:(_Bool)arg2;
- (void)conferencePersonWithID:(id)arg1 didDegrade:(_Bool)arg2;
- (void)conferencePersonWithID:(id)arg1 sendRelayRequest:(id)arg2;
- (void)conferencePersonWithID:(id)arg1 sendRelayUpdate:(id)arg2;
- (void)conferencePersonWithID:(id)arg1 sendRelayCancel:(id)arg2;
- (void)conferencePersonWithID:(id)arg1 localIPDidChange:(id)arg2;
- (void)toggleMute;
- (void)togglePaused;
- (void)_resumeAudioState;
- (void)_resumeVideoState;
- (void)_saveVideoRestartState;
- (void)_saveAudioRestartState;
- (void)_updateIMHandleInBuddyList:(id)arg1;
- (_Bool)_moveVCPartyID:(id)arg1 toIndex:(unsigned int)arg2 inCount:(unsigned int)arg3;
- (void)_submitCallInterruptionBeganLogging;
- (void)_submitCallInterruptionEndedLogging;
- (void)setMetadataFinalized;
- (id)_proxyRepresentationForIMAVChatParticipant:(id)arg1;
- (void)__sendEndCallMetricToAWDWithReason:(unsigned int)arg1 andError:(int)arg2;
- (void)__sendEndCallMetricToViceroyWithReason:(unsigned int)arg1 andError:(int)arg2;

@end
