/*
 Image: /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI
 */

#import <UIKit/UIControl.h>

@class CADisplayLink, CAMDisplayLinkTarget, CAMDynamicShutterGestureRecognizer, CAMFeedbackController, CAMLiquidShutterRenderer, CAMMetalView, CAMShutterButtonRingView, CAMSpring, CAMTimelapseShutterRingView, CAMTrackingSpring, NSArray, NSString, UIImageView, UILabel, UIView;

@protocol CAMDynamicShutterControlAGGDDelegate, CAMDynamicShutterControlDelegate;

@interface CAMDynamicShutterControl : UIControl

{
    struct {
        _Bool respondsToDidShortPress;
        _Bool respondsToShouldBeginGesture;
        _Bool respondsToGesturesDidBegin;
        _Bool respondsToGesturesDidEnd;
        _Bool respondsToGesturesDidCancel;
        _Bool respondsToDidStart;
        _Bool respondsToDidStop;
        _Bool respondsToDidPressLockButton;
        _Bool respondsToDidPresentCounter;
        _Bool respondsToDidDismissCounter;
        _Bool respondsToTouchAttemptedWhileDisabled;
    } _delegateFlags;
    _Bool _spinning;
    _Bool _showDisabled;
    _Bool __externalShutterPressed;
    _Bool __externalLockButtonPressed;
    _Bool __shouldCheckTouchUpEvents;
    _Bool __ignoreNextCancelledGesture;
    id <CAMDynamicShutterControlDelegate> _delegate;
    double _lockButtonCenterRightInset;
    long long _orientation;
    CADisplayLink *__displayLink;
    CAMDisplayLinkTarget *__displayLinkTarget;
    CAMLiquidShutterRenderer *__liquidShutterRenderer;
    CAMMetalView *__metalView;
    CAMShutterButtonRingView *__centerOuterView;
    UIImageView *__centerOuterImageView;
    CAMTimelapseShutterRingView *__centerTimelapseOuterView;
    UIView *__lockButtonOuterView;
    UIImageView *__videoLockImageView;
    UIView *__leftLineView;
    UIView *__rightLineView;
    UILabel *__counterLabel;
    UIView *__spinnerView;
    double __touchBeganTime;
    long long __touchSequencePhase;
    CAMDynamicShutterGestureRecognizer *__gestureRecognizer;
    CAMFeedbackController *__feedbackController;
    long long __shutterState;
    long long __dragHandleState;
    long long __innerShapeState;
    long long __counterValue;
    NSArray *__springs;
    CAMTrackingSpring *__dragHandleOffsetSpring;
    CAMSpring *__dragHandleWidthSpring;
    CAMSpring *__dragHandleColorIsWhiteSpring;
    CAMSpring *__dragHandleAlphaSpring;
    CAMSpring *__innerShapeWidthSpring;
    CAMSpring *__innerShapePowerSpring;
    CAMSpring *__innerShapeColorIsRedSpring;
    CAMSpring *__innerShapeAlphaSpring;
    CAMSpring *__drawLockUISpring;
    CAMSpring *__expandLockRingSpring;
    id <CAMDynamicShutterControlAGGDDelegate> _aggdDelegate;
    CDStruct_299b3d1e __firstTouch;
    CDStruct_299b3d1e __mostRecentTouch;
    struct CAMShutterButtonSpec __shutterButtonSpec;
    struct CAMShutterButtonSpec __lockButtonActiveSpec;
    struct CAMShutterButtonSpec __lockButtonInactiveSpec;
    CDStruct_41c1ae05 _settings;
}

@property (nonatomic, readonly) CADisplayLink *_displayLink;
@property (nonatomic, readonly) CAMDisplayLinkTarget *_displayLinkTarget;
@property (nonatomic, readonly) CAMLiquidShutterRenderer *_liquidShutterRenderer;
@property (nonatomic, readonly) CAMMetalView *_metalView;
@property (nonatomic, readonly) CAMShutterButtonRingView *_centerOuterView;
@property (retain, nonatomic) UIImageView *_centerOuterImageView;
@property (retain, nonatomic) CAMTimelapseShutterRingView *_centerTimelapseOuterView;
@property (nonatomic, readonly) UIView *_lockButtonOuterView;
@property (nonatomic, readonly) UIImageView *_videoLockImageView;
@property (nonatomic, readonly) UIView *_leftLineView;
@property (nonatomic, readonly) UIView *_rightLineView;
@property (nonatomic, readonly) UILabel *_counterLabel;
@property (retain, nonatomic) UIView *_spinnerView;
@property (nonatomic, readonly) struct CAMShutterButtonSpec _shutterButtonSpec;
@property (nonatomic, readonly) struct CAMShutterButtonSpec _lockButtonActiveSpec;
@property (nonatomic, readonly) struct CAMShutterButtonSpec _lockButtonInactiveSpec;
@property (nonatomic, readonly) struct CGPoint _shutterButtonCenter;
@property (nonatomic, readonly) struct CGPoint _lockButtonCenter;
@property (nonatomic, readonly) double _dragHandleXPosition;
@property (nonatomic, setter=_setTouchBeganTime:) double _touchBeganTime;
@property (nonatomic, setter=_setTouchSequencePhase:) long long _touchSequencePhase;
@property (nonatomic, setter=_setFirstTouch:) CDStruct_299b3d1e _firstTouch;
@property (nonatomic, setter=_setMostRecentTouch:) CDStruct_299b3d1e _mostRecentTouch;
@property (nonatomic, readonly) CAMDynamicShutterGestureRecognizer *_gestureRecognizer;
@property (nonatomic, readonly) CAMFeedbackController *_feedbackController;
@property (nonatomic, readonly, getter=_isDraggingEnabled) _Bool _draggingEnabled;
@property (nonatomic, readonly, getter=_isPastStartStopDragThreshold) _Bool _pastStartStopDragThreshold;
@property (nonatomic, readonly, getter=_isPastCounterDragThreshold) _Bool _pastCounterDragThreshold;
@property (nonatomic, setter=_setShutterState:) long long _shutterState;
@property (nonatomic, setter=_setDragHandleState:) long long _dragHandleState;
@property (nonatomic, setter=_setInnerShapeState:) long long _innerShapeState;
@property (nonatomic, getter=_isExternalShutterPressed, setter=_setExternalShutterPressed:) _Bool _externalShutterPressed;
@property (nonatomic, getter=_isExternalLockButtonPressed, setter=_setExternalLockButtonPressed:) _Bool _externalLockButtonPressed;
@property (nonatomic, setter=_setCounterValue:) long long _counterValue;
@property (nonatomic) _Bool _shouldCheckTouchUpEvents;
@property (nonatomic, setter=_setIgnoreNextCancelledGesture:) _Bool _ignoreNextCancelledGesture;
@property (nonatomic, readonly) NSArray *_springs;
@property (nonatomic, readonly) CAMTrackingSpring *_dragHandleOffsetSpring;
@property (nonatomic, readonly) CAMSpring *_dragHandleWidthSpring;
@property (nonatomic, readonly) CAMSpring *_dragHandleColorIsWhiteSpring;
@property (nonatomic, readonly) CAMSpring *_dragHandleAlphaSpring;
@property (nonatomic, readonly) CAMSpring *_innerShapeWidthSpring;
@property (nonatomic, readonly) CAMSpring *_innerShapePowerSpring;
@property (nonatomic, readonly) CAMSpring *_innerShapeColorIsRedSpring;
@property (nonatomic, readonly) CAMSpring *_innerShapeAlphaSpring;
@property (nonatomic, readonly) CAMSpring *_drawLockUISpring;
@property (nonatomic, readonly) CAMSpring *_expandLockRingSpring;
@property (weak, nonatomic) id <CAMDynamicShutterControlAGGDDelegate> aggdDelegate;
@property (weak, nonatomic) id <CAMDynamicShutterControlDelegate> delegate;
@property (nonatomic) CDStruct_41c1ae05 settings;
@property (nonatomic, getter=isSpinning) _Bool spinning;
@property (nonatomic) _Bool showDisabled;
@property (nonatomic) double lockButtonCenterRightInset;
@property (nonatomic) long long orientation;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;

+ (struct CAMShutterButtonSpec)shutterButtonSpec;

- (void)dealloc;
- (struct CGSize)intrinsicContentSize;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)layoutSubviews;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)setOrientation:(long long)arg1 animated:(_Bool)arg2;
- (long long)incrementCounter;
- (void)_handlePress:(id)arg1;
- (void)_updateSpinningAnimations;
- (void)resetAnimated:(_Bool)arg1;
- (id)initWithMetalDevice:(id)arg1 commandQueue:(id)arg2;
- (void)setShowDisabled:(_Bool)arg1 animated:(_Bool)arg2;
- (void)externalButtonPressed;
- (void)externalButtonReleased;
- (void)externalButtonCancelled;
- (void)resetCounter;
- (void)setSettings:(CDStruct_41c1ae05)arg1 animated:(_Bool)arg2;
- (void)externalLockButtonPressed;
- (void)externalLockButtonReleased;
- (void)metalViewDidChangeDrawableSize:(id)arg1;
- (void)_updateForTargetTimestamp:(double)arg1;
- (void)_updateCounterLabelText;
- (_Bool)_isStartStopShutterState:(long long)arg1;
- (_Bool)_isValidChangeFromState:(long long)arg1 toState:(long long)arg2;
- (void)_updateSpringTargets;
- (void)_updateOuterAndInnerLayersAnimated:(_Bool)arg1;
- (void)_setDragHandleState:(long long)arg1 animated:(_Bool)arg2;
- (void)_setInnerShapeState:(long long)arg1 animated:(_Bool)arg2;
- (_Bool)_isActiveTouchSequencePhase:(long long)arg1;
- (void)_cancelTouchSequenceForReset:(_Bool)arg1;
- (void)_updateViewsFromCurrentState;
- (struct CGRect)_shutterButtonFrame;
- (struct CGRect)_lockButtonFrame;
- (_Bool)_isPointWithinLockRingTouchArea:(struct CGPoint)arg1;
- (_Bool)_isHandleWithinLockRing;
- (_Bool)_isPointWithinShutterButtonTouchArea:(struct CGPoint)arg1;
- (CDStruct_299b3d1e)_touchForPoint:(struct CGPoint)arg1;
- (_Bool)_shouldReceiveTouch:(CDStruct_299b3d1e)arg1;
- (void)_touchSequenceBegan:(CDStruct_299b3d1e)arg1;
- (void)_touchSequenceChanged:(CDStruct_299b3d1e)arg1;
- (void)_touchSequenceEnded:(CDStruct_299b3d1e)arg1 forReset:(_Bool)arg2;
- (void)_touchSequenceCancelledForReset:(_Bool)arg1;
- (_Bool)_canDragStartStop;
- (_Bool)_canDragCounter;
- (_Bool)_shouldStartStopOnTouchDown;
- (void)_handleTapToStartStop;
- (_Bool)_shouldShortPressOnTouchDown;
- (_Bool)_isTrackingHandleState:(long long)arg1;
- (void)_updateStateForTouchPoint:(struct CGPoint)arg1;
- (void)_updateTrackingDragHandleOffsetTargetWithPoint:(struct CGPoint)arg1;
- (_Bool)_shouldShortPressOnTouchUp;
- (id)_outerImage;
- (void)_updateMetalViewAlpha;
- (long long)_consumeAndUpdateTouchSequencePhase;
- (void)_updateTrackingSpringTargets;
- (void)_updateStateToLongPressIfNeededWithPhase:(long long)arg1;
- (void)_updateRendererShapes;
- (void)_updateDragHandleWidthTarget;
- (void)_updateInnerShapeWidthTarget;
- (void)_updateStaticDragHandleOffsetTargetAnimated:(_Bool)arg1;
- (void)_updateDragHandleColorIsWhiteTarget;
- (void)_updateDragHandleAlphaTarget;
- (void)_updateInnerShapePowerTarget;
- (void)_updateInnerShapeColorIsRedTarget;
- (void)_updateInnerShapeAlphaTarget;
- (void)_updateDrawLockUITarget;
- (void)_updateExpandLockRingTarget;
- (CDStruct_e17a5956)_innerShapeColor;
- (CDStruct_e17a5956)_dragHandleColor;
- (void)_updateLeftLine;
- (void)_updateRightLine;
- (void)_updateLockUI;
- (void)_updateCounterAlpha;
- (struct CGRect)frameForAlignmentRect:(struct CGRect)arg1 availableWidth:(double)arg2;

@end
