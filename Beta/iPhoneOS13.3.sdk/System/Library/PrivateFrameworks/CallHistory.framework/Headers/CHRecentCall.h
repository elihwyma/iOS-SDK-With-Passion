/*
 Image: /System/Library/PrivateFrameworks/CallHistory.framework/CallHistory
 */

#import <Foundation/NSObject.h>

@class CHHandle, CNContact, NSDate, NSMutableArray, NSNumber, NSSet, NSString, NSUUID, NSValue;

@protocol CHPhoneBookManagerProtocol, OS_dispatch_queue;

@interface CHRecentCall : NSObject

{
    _Bool _read;
    _Bool _callerIdIsBlocked;
    _Bool _multiCall;
    _Bool _answered;
    _Bool _mobileOriginated;
    unsigned int _callerIdAvailability;
    unsigned int _callStatus;
    unsigned int _callCategory;
    unsigned int _callType;
    NSString *_callerNetworkName;
    long long _handleType;
    NSUUID *_localParticipantUUID;
    NSUUID *_outgoingLocalParticipantUUID;
    NSSet *_remoteParticipantHandles;
    long long _verificationStatus;
    CHHandle *_localParticipantHandle;
    NSString *_uniqueId;
    NSString *_serviceProvider;
    NSNumber *_bytesOfDataUsed;
    NSDate *_date;
    double _duration;
    NSString *_isoCountryCode;
    NSString *_mobileCountryCode;
    NSString *_mobileNetworkCode;
    NSNumber *_disconnectedCause;
    NSNumber *_filteredOutReason;
    NSString *_callerNetworkFirstName;
    NSString *_callerNetworkSecondName;
    unsigned long long _unreadCount;
    NSString *_clientAddressBookRecordId;
    NSString *_contactIdentifier;
    long long _mediaType;
    long long _ttyType;
    NSNumber *_timeToEstablish;
    NSValue *_addressBookRecordRef;
    NSString *_addressBookRecordId;
    NSString *_addressBookCallerIDMultiValueId;
    NSString *_devicePhoneId;
    NSString *_callerId;
    NSObject<OS_dispatch_queue> *_queue;
    NSString *_callerName;
    NSMutableArray *_callOccurrences;
    NSString *_callerIdLabel;
    NSString *_callerIdLocation;
    CNContact *_contactRef;
    NSString *_callerIdFormatted;
    id <CHPhoneBookManagerProtocol> _phoneBookManager;
}

@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic) long long verificationStatus;
@property (copy, nonatomic) NSString *callerName;
@property _Bool callerIdIsBlocked;
@property (copy) NSString *callerNetworkFirstName;
@property (copy) NSString *callerNetworkSecondName;
@property unsigned long long unreadCount;
@property (retain, nonatomic) NSMutableArray *callOccurrences;
@property (copy, nonatomic) NSString *callerIdLabel;
@property (copy, nonatomic) NSString *callerIdLocation;
@property _Bool multiCall;
@property (copy, nonatomic) CNContact *contactRef;
@property (copy, nonatomic, getter=callerIdForDisplay) NSString *callerIdFormatted;
@property (retain) id <CHPhoneBookManagerProtocol> phoneBookManager;
@property _Bool answered;
@property _Bool mobileOriginated;
@property (retain, nonatomic) CHHandle *localParticipantHandle;
@property (retain, nonatomic) NSUUID *localParticipantUUID;
@property (retain, nonatomic) NSUUID *outgoingLocalParticipantUUID;
@property (copy, nonatomic) NSSet *remoteParticipantHandles;
@property (copy, nonatomic) NSString *uniqueId;
@property (copy, nonatomic) NSString *callerNetworkName;
@property (nonatomic) unsigned int callStatus;
@property (copy, nonatomic) NSString *serviceProvider;
@property (copy, nonatomic) NSNumber *bytesOfDataUsed;
@property (copy, nonatomic) NSDate *date;
@property (nonatomic) double duration;
@property (copy, nonatomic) NSString *isoCountryCode;
@property (nonatomic) _Bool read;
@property (copy) NSString *mobileCountryCode;
@property (copy) NSString *mobileNetworkCode;
@property (copy) NSNumber *disconnectedCause;
@property (copy) NSNumber *filteredOutReason;
@property (nonatomic) unsigned int callerIdAvailability;
@property (copy) NSString *clientAddressBookRecordId;
@property (copy, nonatomic) NSString *contactIdentifier;
@property (nonatomic) long long mediaType;
@property (nonatomic) long long ttyType;
@property (nonatomic) long long handleType;
@property (copy, nonatomic) NSNumber *timeToEstablish;
@property (copy) NSValue *addressBookRecordRef;
@property (copy, nonatomic) NSString *addressBookRecordId;
@property (copy, nonatomic) NSString *addressBookCallerIDMultiValueId;
@property (nonatomic) unsigned int callCategory;
@property (nonatomic) unsigned int callType;
@property (copy) NSString *devicePhoneId;
@property (copy) NSString *callerId;

+ (_Bool)supportsSecureCoding;
+ (id)callTypeAsString:(unsigned int)arg1;
+ (id)unarchivedObjectClasses;
+ (id)unarchivedObjectFromData:(id)arg1 error:(id *)arg2;
+ (id)predicateForCallsWithStatusRead:(_Bool)arg1;
+ (id)predicateForCallsWithMediaType:(long long)arg1;
+ (unsigned int)categoryForCallType:(unsigned int)arg1;
+ (id)serviceProviderForCallType:(unsigned int)arg1;
+ (id)predicateForCallsWithTTYType:(long long)arg1;
+ (id)predicateForCallsWithServiceProvider:(id)arg1;
+ (id)getLocationForCallerId:(id)arg1 andIsoCountryCode:(id)arg2;
+ (id)callStatusAsString:(unsigned int)arg1;
+ (id)callMediaTypeAsString:(long long)arg1;
+ (id)callTTYTypeAsString:(long long)arg1;
+ (id)callCategoryAsString:(unsigned int)arg1;
+ (id)callHandleTypeAsString:(long long)arg1;
+ (unsigned int)getCallTypeForCategory:(unsigned int)arg1 andServiceProvider:(id)arg2;
+ (unsigned int)categoryForMediaType:(long long)arg1 andTTYType:(long long)arg2;
+ (long long)mediaTypeForCallCategory:(unsigned int)arg1;
+ (long long)ttyTypeForCallCategory:(unsigned int)arg1;
+ (id)predicateForCallsWithCategory:(unsigned int)arg1;
+ (id)predicateForCallsWithRemoteParticipantHandleValue:(id)arg1;
+ (id)predicateForCallsWithRemoteParticipantHandleNormalizedValue:(id)arg1;
+ (id)predicateForCallsWithRemoteParticipantHandleType:(long long)arg1;
+ (id)predicateForCallsWithAnyRemoteParticipantHandleTypes:(id)arg1;
+ (id)predicateForCallsWithAnyRemoteParticipantHandleValues:(id)arg1;
+ (id)predicateForCallsWithAnyRemoteParticipantHandleNormalizedValues:(id)arg1;
+ (id)predicateForCallsWithRemoteParticipantHandle:(id)arg1;
+ (id)predicateForCallsWithUniqueID:(id)arg1;
+ (id)predicateForCallsBetweenStartDate:(id)arg1 endDate:(id)arg2;
+ (id)predicateForCallsWithAnyMediaTypes:(id)arg1;
+ (id)predicateForCallsWithRemoteParticipantCount:(long long)arg1;
+ (id)predicateForCallsWithAnyRemoteParticipantHandles:(id)arg1;
+ (id)predicateForCallsWithAnyServiceProviders:(id)arg1;
+ (id)predicateForCallsWithStatus:(unsigned int)arg1;
+ (id)predicateForCallsWithStatusAnswered:(_Bool)arg1;
+ (id)predicateForCallsWithStatusOriginated:(_Bool)arg1;
+ (id)predicateForCallsWithAnyTTYTypes:(id)arg1;
+ (id)predicateForCallsWithAnyUniqueIDs:(id)arg1;

- (id)init;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithQueue:(id)arg1;
- (void)execute:(CDUnknownBlockType)arg1;
- (void)executeSync:(CDUnknownBlockType)arg1;
- (id)archivedDataWithError:(id *)arg1;
- (_Bool)canCoalesceWithCall:(id)arg1 withStrategy:(id)arg2;
- (_Bool)coalesceWithCall:(id)arg1 withStrategy:(id)arg2;
- (id)callerIdSubStringForDisplay;
- (id)callerNameForDisplay;
- (id)executeSyncWithResult:(CDUnknownBlockType)arg1;
- (id)coalescingHash;
- (unsigned long long)numberOfOccurrences;
- (void)fixCallTypeInfo;
- (id)callerNameSync;
- (_Bool)canCoalesceRemoteParticipantHandlesFromCall:(id)arg1;
- (_Bool)canCoalesceSyncWithRecentsStrategyWithCall:(id)arg1;
- (_Bool)canCoalesceSyncWithCollapseIfEqualStrategyWithCall:(id)arg1;
- (id)contactIdentifierSync;
- (_Bool)canCoalesceSyncWithCall:(id)arg1 withStrategy:(id)arg2;
- (id)callOccurrencesSync;
- (void)addOccurrencesFromArraySync:(id)arg1;
- (unsigned long long)numberOfOccurrencesSync;
- (void)createOccurrenceArraySync;
- (_Bool)callerIdIsEmailAddressSync;
- (void)fetchAndSetContactIdentifierSync;
- (void)fetchAndSetFullContactSync;
- (id)contactRefSync;
- (id)addressBookRecordIdSync;
- (long long)handleTypeSync;
- (id)callerIdForDisplaySync;
- (id)getLocalizedStringSync:(id)arg1;
- (id)callerNameForDisplaySync;
- (id)callerIdLabelSync;
- (id)callerIdLocationSync;
- (id)callOccurrencesAsStringSync;
- (void)updateTTYAndMediaType;
- (void)addressBookChanged;
- (id)addressBookRecordRefSync;
- (_Bool)callerIdIsEmailAddress;
- (_Bool)representsCallAtDate:(id)arg1;
- (id)descriptionInDepth;

@end
