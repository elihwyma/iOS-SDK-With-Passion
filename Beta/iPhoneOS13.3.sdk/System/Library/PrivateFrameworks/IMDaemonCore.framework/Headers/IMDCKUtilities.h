/*
 Image: /System/Library/PrivateFrameworks/IMDaemonCore.framework/IMDaemonCore
 */

#import <Foundation/NSObject.h>

@class FTDeviceSupport, IDSServerBag, IMDCKSyncState, IMDefaults, IMLockdownManager, NSString;

@interface IMDCKUtilities : NSObject

{
    _Bool _didKeyRollPendingCheck;
    _Bool _useDeprecatedApi;
    IMDCKSyncState *_syncState;
    IMLockdownManager *_lockdownManager;
    IDSServerBag *_serverBag;
    FTDeviceSupport *_deviceSupport;
    IMDefaults *_imDefaults;
}

@property (nonatomic) _Bool didKeyRollPendingCheck;
@property (retain, nonatomic) IMLockdownManager *lockdownManager;
@property (retain, nonatomic) IDSServerBag *serverBag;
@property (retain, nonatomic) FTDeviceSupport *deviceSupport;
@property (retain, nonatomic) IMDefaults *imDefaults;
@property (nonatomic, readonly) _Bool isInCloudKitDemoMode;
@property (nonatomic) _Bool useDeprecatedApi;
@property (nonatomic, readonly) IMDCKSyncState *syncState;
@property (nonatomic, readonly) _Bool isSyncingPaused;
@property (nonatomic, readonly, getter=isKeyRollPending) _Bool keyRollPending;
@property (nonatomic, readonly, getter=isDeviceCharging) _Bool deviceCharging;
@property (nonatomic, readonly, getter=isDeviceOnWifi) _Bool deviceOnWifi;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;

+ (id)sharedInstance;
+ (id)logHandle;
+ (id)im_AKSecurityLevelKey;
+ (id)restoreFailuresDirectory;

- (id)init;
- (id)dsid;
- (id)_accountStore;
- (id)internalQueue;
- (id)logHandle;
- (id)_accountManager;
- (id)_authenticationController;
- (unsigned long long)messageDatabaseSize;
- (void)broadcastCloudKitState;
- (void)broadcastCloudKitStateAfterFetchingAccountStatus;
- (void)broadcastCloudKitStateAfterClearingErrors;
- (void)fetchSecurityLevelAndUpdateMiCSwitchEligibility;
- (id)_primaryiCloudAccount;
- (id)initWithServerBag:(id)arg1 lockDownmanager:(id)arg2 deviceSupport:(id)arg3 imDefaults:(id)arg4;
- (_Bool)cloudKitSyncingEnabled;
- (id)backupController;
- (void)syncStateWillUpdate:(id)arg1;
- (void)fetchCloudKitAccountStatusAndCheckForAccountNeedsRepairWithCompletion:(CDUnknownBlockType)arg1;
- (id)_truthDatabase;
- (long long)_mininimumServerBagClientValue;
- (_Bool)iCloudAccountMatchesiMessageAccount;
- (_Bool)_serverAllowsSync;
- (_Bool)_mocFeatureEnabled;
- (_Bool)_isInExitState;
- (void)_resetKeepMessagesSettingandBroadcastToAllDevices;
- (void)evalToggleiCloudSettingsSwitch;
- (id)_getKeepMessagesValue;
- (_Bool)_shouldDisplayPopUpForResettingKeepMessages;
- (_Bool)_allowDestructiveMOCFeaturesBasedOnDSID;
- (_Bool)_serverAllowsCacheDelete;
- (_Bool)_serverAllowsRemovalFromBackUp;
- (void)fetchCloudKitAccountStatusWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)cacheDeleteEnabled;
- (id)_truthContainer;
- (_Bool)_checkEligibilityWithAccountInfo:(id)arg1;
- (_Bool)_accountInfoWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)_createAccountError:(id)arg1;
- (void)_checkEligibilityWithLoggedInAccountWithCompletion:(CDUnknownBlockType)arg1;
- (void)fetchSecurityLevelForAccount:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (_Bool)_accountNeedsRepairOverride;
- (void)_setEligibleToToggleMiCSwitch:(_Bool)arg1;
- (_Bool)shouldRepairAccountWithDeviceAccountSecurityLevel:(unsigned long long)arg1 serverAccountStatus:(long long)arg2;
- (unsigned long long)_primaryiCloudAccountSecurityLevel;
- (_Bool)_checkIfEnabledByServerBagOrDefault:(id)arg1;
- (_Bool)_isLogDumpAllowed;
- (id)logCollectorAddress;
- (void)reportMOCDebuggingErrorWithString:(id)arg1 internalOnly:(_Bool)arg2 initialSync:(_Bool)arg3 sendToHandle:(id)arg4;
- (void)reportMOCDebuggingErrorWithString:(id)arg1 internalOnly:(_Bool)arg2 initialSync:(_Bool)arg3 sendToHandle:(id)arg4 reasonString:(id)arg5;
- (_Bool)shouldLogDumpOnCloudKitError;
- (void)logDumpAndSendMessageTo:(id)arg1 forHours:(int)arg2 reason:(id)arg3 isInitialSync:(_Bool)arg4 requirePreviousPrompt:(_Bool)arg5 willSendBlock:(CDUnknownBlockType)arg6;
- (_Bool)shouldPresentTTROnCloudKitError;
- (void)_askToTapToRadarWithString:(id)arg1 internalOnly:(_Bool)arg2;
- (unsigned long long)_mocEnabledStateFromAccountStatus:(long long)arg1;
- (_Bool)_isCKErrorPartialFailure:(id)arg1;
- (id)_errorsFromPartialError:(id)arg1;
- (_Bool)CKPartialError:(id)arg1 onlyHasErrorCodes:(id)arg2;
- (_Bool)errorIndicatesQuotaExceeded:(id)arg1;
- (_Bool)errorIndicatesDeviceConditionsDontAllowSync:(id)arg1;
- (void)reportMOCDebuggingErrorWithString:(id)arg1 internalOnly:(_Bool)arg2 initialSync:(_Bool)arg3;
- (_Bool)_shouldiCloudSwitchBeEnabled;
- (void)_setiCloudSettingsSwitchEnabled:(_Bool)arg1;
- (id)_personIdFromAccount:(id)arg1;
- (void)_fetchPrimaryAccountWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)_isSyncingPausedOverride;
- (_Bool)_deviceActive;
- (void)postSyncStateToCloudKit:(id)arg1 useManatee:(_Bool)arg2 legacyOnly:(_Bool)arg3;
- (id)exitManager;
- (_Bool)serverAllowsAnalyticDetailsSubmission;
- (_Bool)serverAllowsMetricSubmission;
- (id)syncFailureMetricString:(id)arg1 isRecoverable:(_Bool)arg2 error:(id)arg3;
- (_Bool)serverAllowsAnalyticSubmission;
- (_Bool)isCKPartialError:(id)arg1;
- (id)deviceActiveString;
- (void)logToPowerLogForLogDumpGUID:(id)arg1 logDumpCompleted:(_Bool)arg2 logDumpSucceeded:(_Bool)arg3 logDumpSendingCompleted:(_Bool)arg4 logDumpSendingSucceeded:(_Bool)arg5 reason:(id)arg6;
- (void)_showCKLogNotificationWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)deviceConditionsAllowPeriodicSync;
- (_Bool)_isRunningInAutomation;
- (_Bool)logDumpIsExpected;
- (id)ckStatisticCalculations;
- (void)_metricForPCSReportManateeStatusWithReason:(id)arg1 linkedFunction:(CDUnknownFunctionPointerType)arg2 timeoutInSec:(double)arg3 completion:(CDUnknownBlockType)arg4;
- (void)metricForPCSReportManateeStatusWithReason:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)_primaryiCloudAccountAltDSID;
- (void)setCloudKitSyncingEnabled:(_Bool)arg1;
- (void)keyRollPendingStateDidChange;
- (_Bool)shouldUseDevContainer;
- (_Bool)shouldUseDevNickNameContainer;
- (_Bool)shouldForceArchivedMessagesSync;
- (_Bool)shouldSyncToSRContainer;
- (long long)overrideNumberOfChatsToFetch;
- (long long)overrideNumberOfChatsToWrite;
- (void)isFirstSyncWithCompletion:(CDUnknownBlockType)arg1;
- (void)checkiCloudQuota:(CDUnknownBlockType)arg1;
- (_Bool)cloudKitSyncDownloadAssetsOnly;
- (_Bool)enableAttachmentMetricCollection;
- (_Bool)removeFromBackUpAllowed;
- (_Bool)accountIsVerifiedForMOCAndSafeForCacheDelete;
- (void)fetchLocalAccountSecurityLevel:(CDUnknownBlockType)arg1;
- (_Bool)shouldCollectDailyLogDump;
- (_Bool)shouldCollectDailyLogDumpForRestoreFailures;
- (void)reportMOCDebuggingErrorWithString:(id)arg1 internalOnly:(_Bool)arg2;
- (id)recordNameForMessageWithGUID:(id)arg1 usingSalt:(id)arg2;
- (void)fetchMOCEnabledStateWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)extractServerRecordFromCKServerErrorRecordChanged:(id)arg1;
- (_Bool)CKPartialError:(id)arg1 hasErrorCode:(id)arg2;
- (_Bool)CKPartialErrorOnlyHasQuotaExceededError:(id)arg1;
- (_Bool)isRecoverableCloudKitError:(id)arg1 withRetryInterval:(id *)arg2;
- (_Bool)acceptableErrorCodeWhileDeleting:(id)arg1;
- (id)extractRecordIDsDeletedFromCKPartialError:(id)arg1;
- (_Bool)errorIndicatesZoneNotCreated:(id)arg1;
- (_Bool)errorIndicatesUserDeletedZone:(id)arg1;
- (void)resetLastSyncDate;
- (_Bool)errorIndicatesChatZoneCreationFailed:(id)arg1;
- (void)checkCloudkitEnabledStatusAndToggleiCloudSwitchIfNeeded;
- (void)fetchiCloudAccountPersonID:(CDUnknownBlockType)arg1;
- (void)primaryAccountHasiCloudBackupEnabledWithCompletion:(CDUnknownBlockType)arg1;
- (id)deviceConditions;
- (id)newfilteredArrayRemovingCKRecordDupes:(id)arg1;
- (id)newfilteredArrayRemovingCKRecordIDDupes:(id)arg1;
- (id)lastDeviceBackUpDate;
- (_Bool)errorIndicatesIdentityWasLost:(id)arg1;
- (_Bool)errorIndicateDeviceDoesNotHaveKeysToSync:(id)arg1;
- (_Bool)shouldKickOffWriteForSyncType:(long long)arg1;
- (_Bool)isLocalCachedSaltPresent;
- (void)postSyncStateToCloudKit:(id)arg1;
- (void)postSyncStateToCloudKit:(id)arg1 useManatee:(_Bool)arg2;
- (void)postSyncStateToCloudKit:(id)arg1 legacyOnly:(_Bool)arg2;
- (void)reportZoneCreation:(id)arg1;
- (void)reportErrorForSyncType:(long long)arg1 syncStep:(id)arg2 isRecoverable:(_Bool)arg3 error:(id)arg4;
- (void)reportCompletionForSyncType:(long long)arg1 isCoreDuetSync:(_Bool)arg2 onAttempt:(unsigned long long)arg3 wasSuccessful:(_Bool)arg4;
- (id)findRootCause:(id)arg1;
- (void)logDumpAndSendMessageTo:(id)arg1 forHours:(int)arg2 reason:(id)arg3;
- (void)logDumpAndSendMessageTo:(id)arg1 forHours:(int)arg2 reason:(id)arg3 requirePreviousPrompt:(_Bool)arg4 willSendBlock:(CDUnknownBlockType)arg5;
- (void)logCloudKitSyncToPowerLogForSyncType:(long long)arg1 isCoreDuetSync:(_Bool)arg2 didStartSync:(_Bool)arg3 didFinishSync:(_Bool)arg4 didSucceedSyncing:(_Bool)arg5;
- (void)logCloudKitSyncToPowerLogForSyncType:(long long)arg1 isCoreDuetSync:(_Bool)arg2 didCompleteChatSync:(_Bool)arg3 didSucceedSyncingChats:(_Bool)arg4 didCompleteMessageSync:(_Bool)arg5 didSucceedSyncingMessages:(_Bool)arg6 didCompleteAttachmentSync:(_Bool)arg7 didSucceedSyncingAttachments:(_Bool)arg8 syncAttemptCount:(unsigned long long)arg9;
- (_Bool)logDumpIsNecessaryAfterSync;
- (void)submitPCSReportManateeStatuMetricWithPrefix:(id)arg1 andReason:(id)arg2;
- (void)fetchSecurityLevelAndUpdateMiCSwitchEligibilityIfNeededOnImagentLaunch;
- (_Bool)signedIntoiCloudAndiMessageAndiCloudAccountMatchesiMessageAccount;
- (void)enableMOCIfNeeded;
- (void)downgradingFromHSA2AndDisablingMOC;
- (void)eligibleForTruthZoneWithCompletion:(CDUnknownBlockType)arg1;
- (void)disableAllDevicesWithCompletion:(CDUnknownBlockType)arg1;
- (id)accountDSID:(id)arg1;
- (id)accountWithDSID:(id)arg1;

@end
