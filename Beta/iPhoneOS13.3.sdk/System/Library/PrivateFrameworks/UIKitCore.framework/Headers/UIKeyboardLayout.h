/*
 Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

#import <UIKitCore/UIView.h>

@class NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject, NSString, NSUUID, UIKBCadenceMonitor, UIKBScreenTraits, UIKBTextEditingTraits, UIKeyboardTaskQueue, UIKeyboardTypingStyleEstimator, UITextInputTraits, _UIKBRTFingerDetection, _UIKBRTRecognizer, _UIKBRTTouchDrifting, _UIKBRTTouchVelocities, _UIScreenEdgePanRecognizer;

@protocol OS_dispatch_queue;

@interface UIKeyboardLayout : UIView

{
    UITextInputTraits *_inputTraits;
    UIKBScreenTraits *_screenTraits;
    UIKBTextEditingTraits *_textEditingTraits;
    NSMutableArray *_uncommittedTouchUUIDs;
    NSUUID *_activeTouchUUID;
    NSUUID *_shiftKeyTouchUUID;
    unsigned long long _cursorLocation;
    _Bool _disableInteraction;
    UIKeyboardTaskQueue *_taskQueue;
    UIKeyboardTypingStyleEstimator *_typingStyleEstimator;
    _Bool hideKeysUnderIndicator;
    _Bool _hasPreferredHeight;
    _Bool _isExecutingDeferredTouchTasks;
    _Bool _listeningForWillChange;
    _Bool _listeningForDidChange;
    double _preferredHeight;
    _UIScreenEdgePanRecognizer *_screenEdgePanRecognizer;
    CDUnknownBlockType _deferredTouchDownTask;
    CDUnknownBlockType _deferredTouchMovedTask;
    _UIKBRTRecognizer *_handRestRecognizer;
    _UIKBRTFingerDetection *_fingerDetection;
    UIKBCadenceMonitor *_cadenceMonitor;
    _UIKBRTTouchVelocities *_touchVelocities;
    double lastTouchUpTime;
    double _timestampOfLastTouchesEnded;
    CDUnknownBlockType _deferredTaskForActiveTouch;
    _UIKBRTTouchDrifting *_touchDrifting;
    NSMutableDictionary *_deferredTouchTaskLists;
    NSObject<OS_dispatch_queue> *_deferredTouchTaskListsQueue;
    NSMutableSet *_touchIgnoredUUIDSet;
}

@property (retain, nonatomic) _UIScreenEdgePanRecognizer *screenEdgePanRecognizer;
@property (retain, nonatomic) _UIKBRTRecognizer *handRestRecognizer;
@property (retain, nonatomic) _UIKBRTFingerDetection *fingerDetection;
@property (retain, nonatomic) _UIKBRTTouchDrifting *touchDrifting;
@property (retain, nonatomic) UIKBCadenceMonitor *cadenceMonitor;
@property (retain, nonatomic) _UIKBRTTouchVelocities *touchVelocities;
@property (copy, nonatomic) CDUnknownBlockType deferredTouchDownTask;
@property (copy, nonatomic) CDUnknownBlockType deferredTouchMovedTask;
@property (retain, nonatomic) NSMutableDictionary *deferredTouchTaskLists;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *deferredTouchTaskListsQueue;
@property (retain, nonatomic) NSMutableSet *touchIgnoredUUIDSet;
@property (nonatomic) _Bool isExecutingDeferredTouchTasks;
@property (nonatomic) double lastTouchUpTime;
@property (nonatomic) _Bool listeningForWillChange;
@property (nonatomic) _Bool listeningForDidChange;
@property (retain, nonatomic) UIKeyboardTaskQueue *taskQueue;
@property (retain, nonatomic) NSUUID *activeTouchUUID;
@property (retain, nonatomic) NSUUID *shiftKeyTouchUUID;
@property (nonatomic, readonly) long long orientation;
@property (nonatomic, readonly) long long idiom;
@property (nonatomic) _Bool hideKeysUnderIndicator;
@property (retain, nonatomic) NSString *layoutTag;
@property (nonatomic, readonly) double timestampOfLastTouchesEnded;
@property (copy, nonatomic) CDUnknownBlockType deferredTaskForActiveTouch;
@property (nonatomic, readonly) UIKeyboardTypingStyleEstimator *typingStyleEstimator;
@property (nonatomic) unsigned long long cursorLocation;
@property (nonatomic) _Bool disableInteraction;
@property (nonatomic) double preferredHeight;
@property (nonatomic, readonly) _Bool hasPreferredHeight;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;

+ (_Bool)_showSmallDisplayKeyplane;
+ (struct CGSize)keyboardSizeForInputMode:(id)arg1 screenTraits:(id)arg2 keyboardType:(long long)arg3;
+ (Class)_subclassForScreenTraits:(id)arg1;

- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (struct CGRect)frameForKeylayoutName:(id)arg1;
- (void)didMoveToWindow;
- (void)willMoveToWindow:(id)arg1;
- (void)setRenderConfig:(id)arg1;
- (id)currentKeyplane;
- (_Bool)isShiftKeyBeingHeld;
- (void)touchesEstimatedPropertiesUpdated:(id)arg1;
- (id)candidateList;
- (_Bool)hasCandidateKeys;
- (void)traitCollectionDidChange;
- (void)screenEdgePanRecognizerStateDidChange:(id)arg1;
- (long long)currentHandBias;
- (double)biasedKeyboardWidthRatio;
- (void)setKeyboardBias:(long long)arg1;
- (void)deactivateActiveKeysClearingTouchInfo:(_Bool)arg1 clearingDimming:(_Bool)arg2;
- (void)deactivateActiveKeys;
- (void)updateGlobeKeyAndLayoutOriginBeforeSnapshotForInputView:(id)arg1;
- (void)setRecentInputs:(id)arg1;
- (id)keyplaneForKey:(id)arg1;
- (_Bool)usesAutoShift;
- (_Bool)isAlphabeticPlane;
- (_Bool)isKanaPlane;
- (_Bool)diacriticForwardCompose;
- (_Bool)isShiftKeyPlaneChooser;
- (struct CGSize)stretchFactor;
- (void)showKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;
- (void)longPressAction;
- (_Bool)canHandleEvent:(id)arg1;
- (_Bool)canMultitap;
- (void)acceptRecentInputIfNecessary;
- (unsigned char)getHandRestRecognizerState;
- (_Bool)supportsEmoji;
- (_Bool)ignoresShiftState;
- (void)setDisableTouchInput:(_Bool)arg1;
- (unsigned long long)targetEdgesForScreenGestureRecognition;
- (void)clearTransientState;
- (struct CGRect)dragGestureRectInView:(id)arg1;
- (_Bool)showsDedicatedEmojiKeyAlongsideGlobeButton;
- (id)keyplaneNamed:(id)arg1;
- (void)willBeginIndirectSelectionGesture;
- (_Bool)isEmojiKeyplane;
- (void)cancelTouchesForTwoFingerTapGesture:(id)arg1;
- (void)didEndIndirectSelectionGesture;
- (_Bool)isResizing;
- (_Bool)shouldAllowSelectionGestures:(_Bool)arg1 atPoint:(struct CGPoint)arg2 toBegin:(_Bool)arg3;
- (_Bool)isHandwritingPlane;
- (_Bool)hasActiveContinuousPathInput;
- (_Bool)globeKeyDisplaysAsEmojiKey;
- (void)updateTouchProcessingForKeyplaneChange;
- (void)updateLocalizedKeys:(_Bool)arg1;
- (void)setTextEditingTraits:(id)arg1;
- (void)reloadKeyboardGestureRecognition;
- (_Bool)_allowContinuousPathUI;
- (_Bool)canProduceString:(id)arg1;
- (void)setShift:(_Bool)arg1;
- (void)didClearInput;
- (void)setLabel:(id)arg1 forKey:(id)arg2;
- (void)restoreDefaultsForKey:(id)arg1;
- (_Bool)_hasRelatedTouchesForTouchState:(id)arg1;
- (struct CGSize)handRestRecognizerStandardKeyPixelSize;
- (unsigned long long)fingerIDForTouchUUID:(id)arg1;
- (struct CGPoint)getCenterForKeyUnderLeftIndexFinger;
- (void)setNeedsVirtualDriftUpdate;
- (_Bool)supportsVirtualDrift;
- (void)resetHRRLayoutState;
- (double)hitBuffer;
- (void)_updateTouchState:(id)arg1 errorVector:(struct CGPoint)arg2 rowOffsetFromHomeRow:(long long)arg3;
- (void)_ignoreTouchState:(id)arg1;
- (_Bool)isReachableDevice;
- (id)touchUUIDsToCommitBeforeTouchUUID:(id)arg1;
- (void)commitTouches:(id)arg1 executionContext:(id)arg2;
- (_Bool)canForceTouchUUIDCommit:(id)arg1 inWindow:(id)arg2;
- (void)touchDragged:(id)arg1;
- (double)flickDistance;
- (void)setAutoshift:(_Bool)arg1;
- (void)touchCancelled:(id)arg1 forResting:(_Bool)arg2 executionContext:(id)arg3;
- (struct CGPoint)leftVirtualDriftOffset;
- (struct CGPoint)rightVirtualDriftOffset;
- (id)baseKeyForString:(id)arg1;
- (void)changeToKeyplane:(id)arg1;
- (void)clearUnusedObjects:(_Bool)arg1;
- (SEL)handlerForNotification:(id)arg1;
- (id)internationalKeyDisplayStringOnEmojiKeyboard;
- (void)setPasscodeOutlineAlpha:(double)arg1;
- (void)updateBackgroundCorners;
- (_Bool)isResized;
- (void)setTwoFingerTapTimestamp:(double)arg1;
- (_Bool)shouldMergeAssistantBarWithKeyboardLayout;
- (void)setReturnKeyEnabled:(_Bool)arg1 withDisplayName:(id)arg2 withType:(int)arg3;
- (unsigned long long)textEditingKeyMask;
- (_Bool)isGeometricShiftOrMoreKeyForTouch:(id)arg1;
- (_Bool)hasAccentKey;
- (void)setTarget:(id)arg1 forKey:(id)arg2;
- (void)setAction:(SEL)arg1 forKey:(id)arg2;
- (void)setLongPressAction:(SEL)arg1 forKey:(id)arg2;
- (void)restoreDefaultsForAllKeys;
- (id)_keyboardLongPressInteractionRegions;
- (_Bool)shouldShowIndicator;
- (id)activationIndicatorView;
- (_Bool)handRestRecognizerShouldNeverIgnoreTouchState:(id)arg1 fromPoint:(struct CGPoint)arg2 toPoint:(struct CGPoint)arg3 forRestingState:(unsigned long long)arg4 otherRestedTouchLocations:(id)arg5;
- (CDUnknownBlockType)handRestRecognizerSilenceNextTouchDown;
- (void)handRestRecognizerNotifyRestForBegin:(_Bool)arg1 location:(struct CGPoint)arg2 timestamp:(double)arg3 pathIndex:(int)arg4 touchUUID:(id)arg5 context:(id)arg6;
- (struct CGPoint)getCenterForKeyUnderRightIndexFinger;
- (id)getHorizontalOffsetFromHomeRowForRowRelativeToHomeRow:(long long)arg1;
- (_Bool)_handRestRecognizerCancelShouldBeEnd;
- (void)touchDown:(id)arg1 executionContext:(id)arg2;
- (void)touchDragged:(id)arg1 executionContext:(id)arg2;
- (_Bool)performReturnAction;
- (_Bool)performSpaceAction;
- (void)touchUp:(id)arg1 executionContext:(id)arg2;
- (void)touchCancelled:(id)arg1 executionContext:(id)arg2;
- (void)touchChanged:(id)arg1 executionContext:(id)arg2;
- (void)updateUndoKeyState;
- (id)simulateTouch:(struct CGPoint)arg1;
- (id)simulateTouchForCharacter:(id)arg1 errorVector:(struct CGPoint)arg2 shouldTypeVariants:(_Bool)arg3 baseKeyForVariants:(_Bool)arg4;
- (void)fadeWithInvocation:(id)arg1;
- (_Bool)keyplaneContainsDismissKey;
- (_Bool)keyplaneContainsEmojiKey;
- (void)triggerSpaceKeyplaneSwitchIfNecessary;
- (_Bool)shouldFadeFromLayout;
- (_Bool)shouldFadeToLayout;
- (id)_keyboardLayoutView;
- (void)resetTouchProcessingForKeyboardChange;
- (void)updateTouchProcessingForKeyboardChange;
- (void)_setRequiresExclusiveTouch:(_Bool)arg1;
- (CDUnknownBlockType)touchDownTaskForTouchState:(id)arg1;
- (_Bool)_shouldAllowKeyboardHandlingIfNecessaryForTouch:(id)arg1 phase:(long long)arg2 withTouchState:(id)arg3 task:(CDUnknownBlockType)arg4;
- (CDUnknownBlockType)touchDraggedTaskForTouchState:(id)arg1;
- (void)commitTouchUUIDs:(id)arg1;
- (void)touchUp:(id)arg1;
- (void)_clearDeferredTouchTasks;
- (void)clearShiftIfNecessaryForEndedTouchState:(id)arg1;
- (void)didCommitTouchState:(id)arg1;
- (CDUnknownBlockType)touchUpTaskForTouchState:(id)arg1;
- (CDUnknownBlockType)touchCancelledTaskForTouchState:(id)arg1 forResting:(_Bool)arg2;
- (CDUnknownBlockType)touchChangedTaskForTouchState:(id)arg1;
- (_Bool)_shouldAllowKeyboardHandlingForTouchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchDown:(id)arg1;
- (_Bool)_shouldAllowKeyboardHandlingForTouchesMoved:(id)arg1 withEvent:(id)arg2;
- (_Bool)_shouldAllowKeyboardHandlingForTouchesEndedOrCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_removeTouchesFromProcessing:(id)arg1;
- (void)_touchEndedProcessingForTouches:(id)arg1;
- (void)touchCancelled:(id)arg1;
- (void)touchChanged:(id)arg1;
- (void)forceUpdatesForCommittedTouch;
- (_Bool)queryShouldNeverIgnoreTouchStateWithIdentifier:(id)arg1 touchState:(id)arg2 startPoint:(struct CGPoint)arg3 forRestingState:(unsigned long long)arg4;
- (void)_enumerateDeferredTouchUUIDs:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)recognizerBlockUntilTaskQueueReadyForceUsingDeferredTask:(_Bool)arg1;
- (void)_executeDeferredTouchTasks;
- (_Bool)_canAddTouchesToScreenGestureRecognizer:(id)arg1;
- (void)_addTouchToScreenEdgePanRecognizer:(id)arg1;
- (void)assertSavedLocation:(struct CGPoint)arg1 onTouch:(id)arg2 inWindow:(id)arg3 resetPrevious:(_Bool)arg4;
- (void)_resetFingerDetectionFromLayout;
- (void)recognizer:(id)arg1 beginTouchDownForTouchWithId:(id)arg2 atPoint:(struct CGPoint)arg3 forBeginState:(unsigned long long)arg4 whenStateReady:(CDUnknownBlockType)arg5;
- (void)recognizer:(id)arg1 restartTouchDownForTouchWithId:(id)arg2 startingAt:(double)arg3 atPoint:(struct CGPoint)arg4 currentPoint:(struct CGPoint)arg5 whenStateReady:(CDUnknownBlockType)arg6;
- (void)recognizer:(id)arg1 shouldContinueTrackingTouchWithId:(id)arg2 startingAt:(double)arg3 atPoint:(struct CGPoint)arg4 currentPoint:(struct CGPoint)arg5 forContinueState:(unsigned long long)arg6 whenStateReady:(CDUnknownBlockType)arg7;
- (void)recognizer:(id)arg1 willIgnoreTouchWithId:(id)arg2 startingAt:(double)arg3 atPoint:(struct CGPoint)arg4 currentPoint:(struct CGPoint)arg5 whenReady:(CDUnknownBlockType)arg6;
- (void)recognizer:(id)arg1 continueTrackingIgnoredTouchWithId:(id)arg2 currentPoint:(struct CGPoint)arg3 whenReady:(CDUnknownBlockType)arg4;
- (void)recognizer:(id)arg1 releaseTouchToLayoutWithId:(id)arg2 startPoint:(struct CGPoint)arg3 endPoint:(struct CGPoint)arg4 whenReady:(CDUnknownBlockType)arg5;
- (void)recognizer:(id)arg1 cancelTouchOnLayoutWithId:(id)arg2 startPoint:(struct CGPoint)arg3 endPoint:(struct CGPoint)arg4 whenReady:(CDUnknownBlockType)arg5;
- (void)_uikbrtTouchDriftingStateChanged:(id)arg1;
- (unsigned long long)_uikbrtTouchDrifting:(id)arg1 fingerIDFortouchIdentifier:(id)arg2;
- (id)_uikbrtTouchDrifting:(id)arg1 touchIdentifiersForFingerID:(unsigned long long)arg2;
- (struct CGPoint)_uikbrtTouchDrifting:(id)arg1 touchCenterForFingerID:(unsigned long long)arg2;

@end
