/*
 Image: /System/Library/PrivateFrameworks/PowerlogHelperdOperators.framework/PowerlogHelperdOperators
 */

#import <PowerlogCore/PLAgent.h>

@class BrightnessSystemClient, CBAdaptationClient, NSDate, NSDictionary, NSMutableArray, NSString, PLDisplayIOReportStats, PLEntry, PLEntryNotificationOperatorComposition, PLEventForwardDisplayEntry, PLIOKitOperatorComposition, PLMonotonicTimer, PLTimer, PLXPCListenerOperatorComposition;

@interface PLDisplayAgent : PLAgent

{
    _Bool _alsOn;
    _Bool _userTouch;
    _Bool _alsPluginKeyRegistered;
    _Bool _isMultitouchLoggingEnabled;
    _Bool _isMIEActive;
    _Bool _firstEntryOnInit;
    _Bool _wasDisplayOn;
    _Bool _isDisplayOnNow;
    _Bool _isDisplayHighBrightness;
    _Bool _isFirstTimeModeling;
    float _realmNits;
    float _autobrightnessmNits;
    PLIOKitOperatorComposition *_iokitBacklight;
    PLIOKitOperatorComposition *_iokitBacklightControl;
    PLIOKitOperatorComposition *_iokitDisplay;
    PLIOKitOperatorComposition *_iokitTouch;
    PLIOKitOperatorComposition *_iokitKeyboardBrightness;
    PLIOKitOperatorComposition *_iokitLCD;
    BrightnessSystemClient *_brightnessSystemClient;
    CBAdaptationClient *_colorAdaptationClient;
    PLTimer *_backlightFilterTimer;
    PLTimer *_bluelightFilterTimer;
    PLTimer *_uAmpsFilterTimer;
    PLTimer *_alsLuxFilterTimer;
    NSDictionary *_pendingBacklightEntry;
    NSDate *_pendingBacklightEntryDate;
    unsigned long long _pendingALSLux;
    NSDate *_pendingALSLuxEntryDate;
    double _lastALSPowerSaved;
    NSDate *_userTouchDownTime;
    NSDictionary *_displayPowerModel;
    struct __IOHIDEventSystemClient *_touchHIDClientRef;
    struct __IOHIDEventSystemClient *_ambientLightSensorHIDClientRef;
    PLXPCListenerOperatorComposition *_multitouchXPCListener;
    PLMonotonicTimer *_logLastALSPowerSavedTimer;
    PLEntry *_bluelightStatusEntry;
    PLEventForwardDisplayEntry *_uAmpsEntry;
    PLEntryNotificationOperatorComposition *_IOMFBScanoutNotification;
    PLEntryNotificationOperatorComposition *_ApplicationNotification;
    NSMutableArray *_displayStateChanges;
    PLDisplayIOReportStats *_displayIOReportStats;
    double _displayLux;
    double _displaymNits;
    PLEntryNotificationOperatorComposition *_batteryLevelChanged;
    NSString *_lastForegroundAppAPL;
}

@property (readonly) PLIOKitOperatorComposition *iokitBacklight;
@property (readonly) PLIOKitOperatorComposition *iokitBacklightControl;
@property (readonly) PLIOKitOperatorComposition *iokitDisplay;
@property (readonly) PLIOKitOperatorComposition *iokitTouch;
@property (readonly) PLIOKitOperatorComposition *iokitKeyboardBrightness;
@property (readonly) PLIOKitOperatorComposition *iokitLCD;
@property (retain) BrightnessSystemClient *brightnessSystemClient;
@property (retain) CBAdaptationClient *colorAdaptationClient;
@property (retain) PLTimer *backlightFilterTimer;
@property (retain) PLTimer *bluelightFilterTimer;
@property (retain) PLTimer *uAmpsFilterTimer;
@property (retain) PLTimer *alsLuxFilterTimer;
@property (retain) NSDictionary *pendingBacklightEntry;
@property (retain) NSDate *pendingBacklightEntryDate;
@property unsigned long long pendingALSLux;
@property (retain) NSDate *pendingALSLuxEntryDate;
@property _Bool alsOn;
@property double lastALSPowerSaved;
@property _Bool userTouch;
@property (retain) NSDate *userTouchDownTime;
@property (readonly) NSDictionary *displayPowerModel;
@property struct __IOHIDEventSystemClient *touchHIDClientRef;
@property struct __IOHIDEventSystemClient *ambientLightSensorHIDClientRef;
@property _Bool alsPluginKeyRegistered;
@property (retain) PLXPCListenerOperatorComposition *multitouchXPCListener;
@property _Bool isMultitouchLoggingEnabled;
@property (retain) PLMonotonicTimer *logLastALSPowerSavedTimer;
@property (retain) PLEntry *bluelightStatusEntry;
@property (retain) PLEventForwardDisplayEntry *uAmpsEntry;
@property _Bool isMIEActive;
@property _Bool firstEntryOnInit;
@property _Bool wasDisplayOn;
@property _Bool isDisplayOnNow;
@property _Bool isDisplayHighBrightness;
@property _Bool isFirstTimeModeling;
@property (retain) PLEntryNotificationOperatorComposition *IOMFBScanoutNotification;
@property (retain) PLEntryNotificationOperatorComposition *ApplicationNotification;
@property (retain) NSMutableArray *displayStateChanges;
@property (retain) PLDisplayIOReportStats *displayIOReportStats;
@property double displayLux;
@property double displaymNits;
@property float realmNits;
@property float autobrightnessmNits;
@property (retain) PLEntryNotificationOperatorComposition *batteryLevelChanged;
@property (retain) NSString *lastForegroundAppAPL;

+ (void)load;
+ (_Bool)shouldLogDisplay;
+ (id)entryAggregateDefinitions;
+ (id)entryEventPointDefinitions;
+ (id)entryEventForwardDefinitions;
+ (id)entryEventBackwardDefinitions;
+ (id)entryEventNoneDefinitions;
+ (id)entryEventIntervalDefinitions;
+ (id)entryEventNoneDefinitionPanelStats;
+ (id)entryEventPointDefinitionDisplay;
+ (id)entryEventPointDefinitionUserBrightness;
+ (id)entryEventPointDefinitionMultitouch;
+ (id)entryEventPointDefinitionBacklightControl;
+ (id)entryEventPointDefinitionKeyboardBrightness;
+ (_Bool)shouldLogLCD;
+ (_Bool)shouldLogUserBrightness;
+ (_Bool)shouldLogTouch;
+ (_Bool)shouldLogBacklightControl;
+ (_Bool)shouldLogKeyboardBrightness;
+ (id)entryEventForwardDefinitionDisplay;
+ (id)entryEventForwardDefinitionALSUserPreferences;
+ (id)entryEventForwardDefinitionALSEnabled;
+ (id)entryEventForwardDefinitionALSPowerSaved;
+ (id)entryEventForwardDefinitionBlueLightReductionStatus;
+ (id)entryEventForwardDefinitionColorAdaptationMode;
+ (id)entryEventForwardDefinitionALSLux;
+ (id)entryEventForwardDefinitionLinearBrightness;
+ (_Bool)shouldLogALSPowerSaved;
+ (_Bool)shouldLogBLR;
+ (id)entryEventBackwardDefinitionTouch;
+ (id)entryEventBackwardDefinitionBlueLightParameters;
+ (id)entryEventBackwardDefinitionHarmonyParameters;
+ (id)entryEventBackwardDefinitionAPLStats;
+ (_Bool)shouldLogAPL;
+ (id)entryAggregateDefinitionUserTouch;
+ (_Bool)shouldModelPowerFromIOMFB;
+ (_Bool)shouldModelPowerFromAPL;

- (id)init;
- (void)dealloc;
- (void)log;
- (void)initOperatorDependancies;
- (_Bool)isAlsEnabled;
- (void)handleBrightnessClientNotification:(id)arg1 withValue:(id)arg2;
- (void)logEventForwardDisplayWithRawData:(id)arg1 withDate:(id)arg2;
- (unsigned long long)getBacklightEnabledTimestamp:(unsigned int)arg1;
- (void)logEventPointDisplayForBlock:(id)arg1 isActive:(_Bool)arg2;
- (void)logEventBackwardTouch;
- (struct __IOHIDEventSystemClient *)setUpIOHIDTouchSystemClient;
- (void)logDisplayAPL;
- (void)updateLastForegroundAppAPL:(id)arg1;
- (void)modelDynamicDisplayPower:(id)arg1;
- (void)logEventPointMultitouchWithPayload:(id)arg1;
- (void)logEventNonePanelStats;
- (struct __IOHIDEventSystemClient *)setUpIOHIDAmbientLightSensorSystemClient;
- (void)logEventForwardDisplay;
- (void)logEventPointDisplay;
- (void)logEventForwardALSEnabled;
- (void)logEventForwardALSUserPreferences;
- (void)logEventForwardColorAdaptationMode;
- (void)logEventPointDisplayBacklight;
- (void)logEventPointDisplayMIE;
- (void)reArmUAmpsCallback;
- (void)modelDisplayPower:(id)arg1;
- (void)qualifyDisplayPower:(id)arg1;
- (void)logEventForwardALSUserPreferencesEntryWithLux:(id)arg1;
- (double)uAmpsToDisplayPower:(double)arg1;
- (void)logEventPointUserBrightnessCommitted:(double)arg1;
- (void)logEventForwardALSUserPreferencesWithCurrLux;
- (void)logBrightnessDataWithEntryKey:(id)arg1 withColName:(id)arg2 withValue:(id)arg3;
- (void)extractDataWithEntry:(id)arg1 withColName:(id)arg2 withDataArray:(id)arg3;
- (void)logBlueLightDataWithDictionary:(id)arg1;
- (void)reArmCallback;
- (void)modelDynamicDisplayPowerFromAPL:(id)arg1;
- (void)modelDisplayPowerFromIOMFB:(id)arg1;
- (id)getSubFrameMap;
- (double)averageFrameRateFromIOMFBScanout:(id)arg1;
- (double)calculatePowerFromAPL:(double)arg1 withAvgRed:(double)arg2 withAvgGreen:(double)arg3 withAvgBlue:(double)arg4;
- (long long)getBuiltInDisplayID:(id)arg1;
- (void)registerForBuiltInDisplayNotifications:(id)arg1 withNewBuiltInDisplayID:(long long)arg2;
- (void)logEventForwardALSLux:(unsigned long long)arg1;
- (void)logEventForwardLinearBrightness:(id)arg1;
- (void)logEventForwardDisplayWithInactiveScreenHistoryArray:(id)arg1;
- (void)logEventBackwardUserTouch:(_Bool)arg1;
- (_Bool)listenForAlsPluginMatchingKeys:(struct __IOHIDEventSystemClient *)arg1 withKeys:(const void **)arg2 withValues:(const void **)arg3 withCount:(unsigned long long)arg4;

@end
