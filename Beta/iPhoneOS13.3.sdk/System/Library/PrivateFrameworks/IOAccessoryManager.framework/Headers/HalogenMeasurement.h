/*
 Image: /System/Library/PrivateFrameworks/IOAccessoryManager.framework/IOAccessoryManager
 */

#import <Foundation/NSObject.h>

@class BaseResourceArbiterClient, HalogenLdcmCalc, NSCondition, NSMutableData;

@protocol OS_dispatch_queue;

@interface HalogenMeasurement : NSObject

{
    _Bool _shouldInvertData;
    _Bool _isCalibrationDone;
    _Bool _isMeasurementDone;
    _Bool _arbiterLocked;
    _Bool _arbitrationRequired;
    unsigned short _maxOutputAmplitude;
    unsigned short _signalOffset;
    int _precalibrationSampleOffsetInFrames;
    int _calibrationSampleOffsetInFrames;
    int _measurementSampleOffsetInFrames;
    int _halogenResult;
    int _nInputChannels;
    int _nOutputChannels;
    int _sampleRate;
    int _bitDepth;
    int _inputFrameSizeInBytes;
    int _outputFrameSizeInBytes;
    int _warmupTimeInMs;
    int _hydraSettlingTimeInMs;
    int _nMeasurementSamples;
    int _nWarmupSamples;
    int _nHydraSettlingSamples;
    int _nTotalSamples;
    int _nPaddingSamples;
    int _initalPhaseInDegrees;
    int _pcmInputDataMaxSzInBytes;
    int _pcmInputDataIndexInBytes;
    int _pcmInputDataSampleCnt;
    int _pcmOutputDataMaxSzInBytes;
    int _pcmOutputDataIndexInBytes;
    int _audioTimeoutInSec;
    unsigned int _service;
    unsigned int _connect;
    int _pinToMeasure;
    unsigned int _systemPowerPort;
    unsigned int _systemPowerIterator;
    int _powerState;
    double _precalVoltageSignalLevel;
    double _precalVoltageNoiseLevel;
    double _precalVoltageSNR;
    double _precalCurrentSignalLevel;
    double _precalCurrentNoiseLevel;
    double _precalCurrentSNR;
    double _voltageGainCorrection;
    double _currentGainCorrection;
    double _currentPhaseCompensation;
    double _calVoltageSignalLevel;
    double _calVoltageNoiseLevel;
    double _calVoltageSNR;
    double _calCurrentSignalLevel;
    double _calCurrentNoiseLevel;
    double _calCurrentSNR;
    double _goertzelImpedance;
    double _goertzelPhase;
    double _compensatedImpedance;
    double _compensatedPhase;
    double _resistanceInOhms;
    double _capacitanceInNanoF;
    double _clippingScore;
    double _measurementVoltageSignalLevel;
    double _measurementVoltageNoiseLevel;
    double _measurementVoltageSNR;
    double _measurementCurrentSignalLevel;
    double _measurementCurrentNoiseLevel;
    double _measurementCurrentSNR;
    double _measurementCondetSNR;
    HalogenLdcmCalc *_halogenLdcmCalc;
    struct OpaqueAudioComponentInstance *_audioComponentInst;
    double _signalFreq;
    NSMutableData *_pcmInputData;
    NSMutableData *_pcmOutputData;
    NSMutableData *_currentData;
    NSMutableData *_voltageData;
    NSCondition *_audioTimeoutCond;
    unsigned long long _eisPinToken1;
    unsigned long long _eisPinToken2;
    NSObject<OS_dispatch_queue> *_systemPowerQueue;
    struct IONotificationPort *_systemPowerNotifyPortRef;
    NSCondition *_powerStateCond;
    BaseResourceArbiterClient *_arbiterClient;
}

@property HalogenLdcmCalc *halogenLdcmCalc;
@property int nInputChannels;
@property int nOutputChannels;
@property int sampleRate;
@property int bitDepth;
@property int inputFrameSizeInBytes;
@property int outputFrameSizeInBytes;
@property struct OpaqueAudioComponentInstance *audioComponentInst;
@property int warmupTimeInMs;
@property int hydraSettlingTimeInMs;
@property int nMeasurementSamples;
@property int nWarmupSamples;
@property int nHydraSettlingSamples;
@property int nTotalSamples;
@property int nPaddingSamples;
@property double signalFreq;
@property int initalPhaseInDegrees;
@property (nonatomic, readonly) unsigned short maxOutputAmplitude;
@property (nonatomic, readonly) unsigned short signalOffset;
@property NSMutableData *pcmInputData;
@property int pcmInputDataMaxSzInBytes;
@property int pcmInputDataIndexInBytes;
@property int pcmInputDataSampleCnt;
@property _Bool isCalibrationDone;
@property _Bool isMeasurementDone;
@property NSMutableData *pcmOutputData;
@property int pcmOutputDataMaxSzInBytes;
@property int pcmOutputDataIndexInBytes;
@property NSMutableData *currentData;
@property NSMutableData *voltageData;
@property (nonatomic, readonly) _Bool shouldInvertData;
@property int audioTimeoutInSec;
@property NSCondition *audioTimeoutCond;
@property int measurementSampleOffsetInFrames;
@property unsigned int service;
@property unsigned int connect;
@property int pinToMeasure;
@property unsigned long long eisPinToken1;
@property unsigned long long eisPinToken2;
@property (nonatomic) NSObject<OS_dispatch_queue> *systemPowerQueue;
@property (nonatomic) unsigned int systemPowerPort;
@property (nonatomic) struct IONotificationPort *systemPowerNotifyPortRef;
@property (nonatomic) unsigned int systemPowerIterator;
@property (nonatomic) int powerState;
@property NSCondition *powerStateCond;
@property (nonatomic, readonly) BaseResourceArbiterClient *arbiterClient;
@property (nonatomic, readonly) _Bool arbiterLocked;
@property (nonatomic, readonly) _Bool arbitrationRequired;
@property (readonly) int precalibrationSampleOffsetInFrames;
@property (readonly) double precalVoltageSignalLevel;
@property (readonly) double precalVoltageNoiseLevel;
@property (readonly) double precalVoltageSNR;
@property (readonly) double precalCurrentSignalLevel;
@property (readonly) double precalCurrentNoiseLevel;
@property (readonly) double precalCurrentSNR;
@property (readonly) int calibrationSampleOffsetInFrames;
@property (readonly) double voltageGainCorrection;
@property (readonly) double currentGainCorrection;
@property (readonly) double currentPhaseCompensation;
@property (readonly) double calVoltageSignalLevel;
@property (readonly) double calVoltageNoiseLevel;
@property (readonly) double calVoltageSNR;
@property (readonly) double calCurrentSignalLevel;
@property (readonly) double calCurrentNoiseLevel;
@property (readonly) double calCurrentSNR;
@property (readonly) double goertzelImpedance;
@property (readonly) double goertzelPhase;
@property (readonly) double compensatedImpedance;
@property (readonly) double compensatedPhase;
@property (readonly) double resistanceInOhms;
@property (readonly) double capacitanceInNanoF;
@property (readonly) double clippingScore;
@property (readonly) double measurementVoltageSignalLevel;
@property (readonly) double measurementVoltageNoiseLevel;
@property (readonly) double measurementVoltageSNR;
@property (readonly) double measurementCurrentSignalLevel;
@property (readonly) double measurementCurrentNoiseLevel;
@property (readonly) double measurementCurrentSNR;
@property (readonly) double measurementCondetSNR;
@property (readonly) int halogenResult;

- (void)dealloc;
- (void)_freeBuffers;
- (id)initWithSize:(int)arg1 onPort:(int)arg2;
- (id)getResultString;
- (int)doMeasurement:(_Bool)arg1 onPin:(int)arg2 isReceptacleEmpty:(_Bool)arg3 isReceptacleWet:(_Bool)arg4 withWetTransitionThreshold:(double)arg5 withDryTransitionThreshold:(double)arg6;
- (int)saveAsWav:(id)arg1;
- (_Bool)isBoundViolation_currentGainCorrection;
- (_Bool)isBoundViolation_currentPhaseCompensation;
- (_Bool)isLowerBoundViolation_goertzelImpedance;
- (_Bool)isUpperBoundViolation_goertzelImpedance;
- (_Bool)isLowerBoundViolation_goertzelPhase;
- (_Bool)isUpperBoundViolation_goertzelPhase;
- (_Bool)isBoundViolation_measurementCondetSNR;
- (_Bool)_allocBuffers;
- (_Bool)isBoundViolation_voltageGainCorrection;
- (void)_generateSineWave;
- (_Bool)_connectToAccessoryManager:(int)arg1;
- (_Bool)_createSleepWakeNotifier;
- (_Bool)_initArbiter;
- (void)_destroySleepWakeNotifier;
- (void)_disconnectFromAccessoryManager;
- (void)_deinitArbiter;
- (_Bool)_initAudioPath;
- (_Bool)_doHalogenLdcmCalc:(_Bool)arg1 isReceptacleWet:(_Bool)arg2 withWetTransitionThreshold:(double)arg3 withDryTransitionThreshold:(double)arg4;
- (void)_deinitAudioPath;
- (void)_resetCalcValues;

@end
