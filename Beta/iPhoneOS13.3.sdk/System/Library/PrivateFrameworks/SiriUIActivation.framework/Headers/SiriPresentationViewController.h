/*
 Image: /System/Library/PrivateFrameworks/SiriUIActivation.framework/SiriUIActivation
 */

#import <UIKit/UIViewController.h>

@class AFConnection, AFQueue, AFRequestCompletionOptions, AFUISiriLanguage, AFUISiriSetupViewController, AFUISiriViewController, AFWatchdogTimer, BSServiceConnection, NSArray, NSDate, NSMutableDictionary, NSObject, NSString, NSTimer, UIScreen;

@protocol OS_dispatch_queue, SiriPresentationControllerDelegate, SiriPresentationIntentUsageDelegate;

@interface SiriPresentationViewController : UIViewController

{
    long long _identifier;
    _Bool _delaySessionEndForTTS;
    NSDate *_lastGuideCheck;
    AFRequestCompletionOptions *_completionOptions;
    NSMutableDictionary *_activePresentationProperties;
    UIScreen *_activeScreen;
    _Bool _activationHandled;
    _Bool _isIdleAndQuiet;
    CDUnknownBlockType _buttonTrigger;
    _Bool _receivedIncomingPhoneCall;
    NSObject<OS_dispatch_queue> *_watchdogQueue;
    _Bool _springBoardIdleTimerDisabled;
    _Bool _waitingForTelephonyToStart;
    _Bool _startGuidedAccessOnDismissal;
    _Bool _pocketStateKeptScreenOffDuringActivation;
    _Bool _buttonDownEventDidOccur;
    _Bool _predictedRecordRouteIsZLL;
    struct os_unfair_lock_s _lock;
    long long identifier;
    id <SiriPresentationControllerDelegate> siriPresentationControllerDelegate;
    BSServiceConnection *_connection;
    AFConnection *_unownedConnection;
    NSDate *_lastAppUpdateTimestamp;
    double _buttonDownTimestamp;
    NSTimer *_carSiriButtonHoldToTalkTimer;
    double _carSiriButtonTimeInterval;
    NSArray *_contextAppInfosForSiriViewController;
    NSArray *_currentCarPlaySupportedOEMAppIdList;
    NSArray *_starkAppBundleIdentifierContext;
    unsigned long long _currentLockState;
    AFWatchdogTimer *_activationTimer;
    AFUISiriLanguage *_language;
    id <SiriPresentationIntentUsageDelegate> _intentUsageDelegate;
    NSTimer *_clearSiriViewControllerTimer;
    AFUISiriViewController *_siriViewController;
    AFUISiriSetupViewController *_siriSetupViewController;
    NSString *__currentTestName;
    NSString *__currentTestID;
    AFQueue *_testInputQueue;
    struct CGRect _hostedPresentationFrame;
}

@property (retain, nonatomic) id <SiriPresentationIntentUsageDelegate> intentUsageDelegate;
@property (nonatomic) struct os_unfair_lock_s lock;
@property (retain, nonatomic) BSServiceConnection *connection;
@property (nonatomic) struct CGRect hostedPresentationFrame;
@property (retain, nonatomic) AFConnection *unownedConnection;
@property (retain, nonatomic, getter=_lastAppUpdateTimestamp, setter=_setLastAppUpdateTimestamp:) NSDate *lastAppUpdateTimestamp;
@property (nonatomic, getter=_isSpringBoardIdleTimerDisabled, setter=_setSpringBoardIdleTimerDisabled:) _Bool springBoardIdleTimerDisabled;
@property (nonatomic, getter=_isWaitingForTelephonyToStart, setter=_setWaitingForTelephonyToStart:) _Bool waitingForTelephonyToStart;
@property (nonatomic, getter=_startGuidedAccessOnDismissal, setter=_setStartGuidedAccessOnDismissal:) _Bool startGuidedAccessOnDismissal;
@property (nonatomic, getter=_pocketStateKeptScreenOffDuringActivation, setter=_setPocketStateKeptScreenOffDuringActivation:) _Bool pocketStateKeptScreenOffDuringActivation;
@property (nonatomic, getter=_buttonDownEventDidOccur, setter=_setButtonDownEventDidOccur:) _Bool buttonDownEventDidOccur;
@property (nonatomic, getter=_buttonDownTimestamp, setter=_setButtonDownTimestamp:) double buttonDownTimestamp;
@property (retain, nonatomic, getter=_carSiriButtonHoldToTalkTimer, setter=_setCarSiriButtonHoldToTalkTimer:) NSTimer *carSiriButtonHoldToTalkTimer;
@property (nonatomic, getter=_carSiriButtonTimeInterval, setter=_setCarSiriButtonTimeInterval:) double carSiriButtonTimeInterval;
@property (retain, nonatomic) NSArray *contextAppInfosForSiriViewController;
@property (retain, nonatomic) NSArray *currentCarPlaySupportedOEMAppIdList;
@property (retain, nonatomic) NSArray *starkAppBundleIdentifierContext;
@property (nonatomic) _Bool predictedRecordRouteIsZLL;
@property (nonatomic) unsigned long long currentLockState;
@property (retain, nonatomic) AFWatchdogTimer *activationTimer;
@property (nonatomic, readonly, getter=_language) AFUISiriLanguage *language;
@property (retain, nonatomic) id <SiriPresentationIntentUsageDelegate> intentUsageDelegate;
@property (retain, nonatomic) NSTimer *clearSiriViewControllerTimer;
@property (retain, nonatomic) AFUISiriViewController *siriViewController;
@property (retain, nonatomic) AFUISiriSetupViewController *siriSetupViewController;
@property (copy, nonatomic, setter=_setCurrentTestName:) NSString *_currentTestName;
@property (copy, nonatomic, setter=_setCurrentTestID:) NSString *_currentTestID;
@property (copy, nonatomic, getter=_testInputQueue) AFQueue *testInputQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;
@property (nonatomic, readonly) long long identifier;
@property (retain, nonatomic) id <SiriPresentationControllerDelegate> siriPresentationControllerDelegate;

+ (id)extractTestingInputsFromContext:(id)arg1;
+ (_Bool)testIsSyntheticActivation:(id)arg1;

- (void)dealloc;
- (void)invalidate;
- (id)initWithIdentifier:(long long)arg1;
- (_Bool)isEnabled;
- (void)dismiss;
- (void)viewWillLayoutSubviews;
- (_Bool)_canShowWhileLocked;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (oneway void)preheat;
- (void)_requestDismissal;
- (void)siriLanguageSpokenLanguageCodeDidChange:(id)arg1;
- (long long)preferredFlamesViewFidelity;
- (void)prewarmFlamesViewShadersInBackgroundForScreen:(id)arg1 activeFrame:(struct CGRect)arg2;
- (id)initWithIdentifier:(long long)arg1 hostedPresentationFrame:(struct CGRect)arg2;
- (id)_fallbackScreenForIdentifier:(long long)arg1;
- (struct CGRect)_fallbackFrameForScreen:(id)arg1 withIdentifier:(long long)arg2;
- (void)_updateLanguageCode;
- (void)_invalidateCarSiriButtonHoldToTalkTimer;
- (void)dismissWithOptions:(id)arg1;
- (oneway void)presentationDismissalRequestedWithOptions:(id)arg1;
- (_Bool)siriViewControllerConfigured;
- (void)animatedAppearanceWithFactory:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)animatedDisappearanceWithFactory:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_presentationRequestedWithPresentationOptions:(id)arg1 requestOptions:(id)arg2;
- (void)_processIncomingRequestOptionsForTestingPayload:(id)arg1;
- (_Bool)_shouldShowSetupViewController;
- (void)_showSetupViewControllerIfNecessary;
- (void)_removeSetupViewControllerIfNecessary;
- (void)_presentSiriViewControllerWithPresentationOptions:(id)arg1 requestOptions:(id)arg2;
- (void)_prepareSiriViewControllerWithRequestOptions:(id)arg1;
- (void)_activateWithRequestOptions:(id)arg1;
- (void)_presentationRequestedHandlerWithRequestOptions:(id)arg1;
- (void)startActivationWatchdogTimer;
- (void)stopActivationWatchdogTimerIfNeededThen:(CDUnknownBlockType)arg1 onQueue:(id)arg2;
- (void)activateWithRequestOptions:(id)arg1;
- (void)_updateHostedPresentationFrame;
- (id)_createSiriViewControllerWithRequestOptions:(id)arg1;
- (void)_dismissDueToUnexpectedError:(id)arg1;
- (void)_handleContextClearForRequestOptions:(id)arg1;
- (void)_updateActivePresentationPropertiesForPresentationIdentifier:(id)arg1;
- (void)activateWithSource:(long long)arg1 requestOptions:(id)arg2 timestamp:(id)arg3;
- (id)_uiPresentationIdentifier;
- (_Bool)_releaseExistingTrigger;
- (void)_wasDismissed;
- (void)_enableSpringBoardIdleTimer;
- (oneway void)cancelTTS;
- (void)_scheduleConnectionHouseKeepingAfterDelay:(double)arg1;
- (void)_setUpUnownedConnectionIfNecessary;
- (void)_cleanupUnownedConnection;
- (_Bool)_cancelPendingPhoneCall;
- (void)activateWithSource:(long long)arg1 timestamp:(id)arg2;
- (void)_carSiriButtonHoldToTalkIntervalFiredWithButtonIdentifier:(long long)arg1;
- (_Bool)_buttonIdentifierIsHoldToTalkTrigger:(long long)arg1;
- (_Bool)_handleTapButtonBehavior:(long long)arg1;
- (_Bool)_handleTapDismissal:(long long)arg1;
- (void)_dismissSiriSetup;
- (void)_cancelPendingActivationWithReason:(unsigned long long)arg1;
- (void)_telephonyHasStarted;
- (long long)viewModeForRequestOptions:(id)arg1;
- (void)_processConnectionHouseKeeping;
- (void)_finishClearingSiriViewController:(id)arg1;
- (_Bool)_isDelayingSessionEnd;
- (void)_checkForGuideUpdatesIfNecessary;
- (void)_clearSiriViewController;
- (_Bool)presentationHostedInSpringBoard;
- (void)_beginDelayingSessionEndForTTS;
- (_Bool)_hasTestingInput;
- (id)_dequeueTestingInput;
- (void)_openURL:(id)arg1 bundleId:(id)arg2 delaySessionEndForTTS:(_Bool)arg3 punchoutStyle:(long long)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_endDelayingSessionEndForTTS;
- (void)_callIsActiveDidChangeNotification:(id)arg1;
- (void)_sendTelephonyHasStartedAfterDelay:(double)arg1;
- (void)_ttsQueueDidEmpty:(id)arg1;
- (void)siriViewController:(id)arg1 requestsDismissal:(CDUnknownBlockType)arg2;
- (void)_setupSiriViewControllerPresentedSuccessHandler;
- (void)siriViewController:(id)arg1 requestsPresentation:(CDUnknownBlockType)arg2;
- (void)siriViewController:(id)arg1 launchApplicationWithBundleIdentifier:(id)arg2 withURL:(id)arg3 launchOptions:(long long)arg4 replyHandler:(CDUnknownBlockType)arg5;
- (oneway void)presentationRequestedWithPresentationOptions:(id)arg1 requestOptions:(id)arg2;
- (void)_watchdogQueue_startActivationWatchdogTimer;
- (void)_watchdogQueue_stopActivationWatchdogTimerIfNeededThen:(CDUnknownBlockType)arg1 onQueue:(id)arg2;
- (void)callStateChangedToIsActive:(_Bool)arg1 isOutgoing:(_Bool)arg2;
- (void)siriViewController:(id)arg1 didEncounterUnexpectedError:(id)arg2;
- (void)dismissSiriViewController:(id)arg1 delayForTTS:(_Bool)arg2;
- (void)startGuidedAccessForSiriViewController:(id)arg1;
- (id)siriViewController:(id)arg1 willStartRequestWithOptions:(id)arg2;
- (void)userRelevantEventDidOccurInSiriViewController:(id)arg1;
- (_Bool)siriViewControllerShouldEndSession:(id)arg1;
- (void)siriViewControllerDidChangeVisibility:(id)arg1;
- (void)siriViewControllerSessionDidResetContext:(id)arg1;
- (void)siriViewController:(id)arg1 siriIdleAndQuietStatusDidChange:(_Bool)arg2;
- (void)siriViewController:(id)arg1 didReadBulletinWithIdentifier:(id)arg2;
- (void)siriViewController:(id)arg1 openURL:(id)arg2 delaySessionEndForTTS:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)siriViewController:(id)arg1 openURL:(id)arg2 appBundleID:(id)arg3 allowSiriDismissal:(_Bool)arg4;
- (_Bool)siriViewController:(id)arg1 attemptUnlockWithPassword:(id)arg2;
- (void)siriViewController:(id)arg1 didHideStatusView:(_Bool)arg2;
- (void)siriViewController:(id)arg1 didChangePresentationPeekMode:(unsigned long long)arg2;
- (_Bool)siriViewControllerShouldSupportTextInput:(id)arg1;
- (void)siriViewController:(id)arg1 didUpdateAudioCategoriesDisablingVolumeHUD:(id)arg2;
- (void)siriViewControllerDidFinishDismissing:(id)arg1;
- (void)siriViewController:(id)arg1 presentedIntentWithBundleId:(id)arg2;
- (void)siriViewController:(id)arg1 didCompleteRequestWithError:(id)arg2;
- (void)siriSessionShouldExtendAudioSessionForImminentPhoneCall;
- (void)siriSessionShouldEndExtendAudioSessionForImminentPhoneCall;
- (void)siriViewController:(id)arg1 willStartTest:(id)arg2;
- (void)siriViewController:(id)arg1 didFinishTest:(id)arg2;
- (void)siriViewController:(id)arg1 failTest:(id)arg2 withReason:(id)arg3;
- (void)extendCurrentTTSRequested;
- (void)siriViewControllerSpeechRequestStartedFromSiriOrb;
- (void)siriViewControllerSpeechRequestCancelledFromSiriOrb;
- (id)bulletinsForSiriViewController:(id)arg1;
- (id)siriViewController:(id)arg1 bulletinWithIdentifier:(id)arg2;
- (unsigned long long)lockStateForSiriViewController:(id)arg1;
- (id)contextAppInfosForSiriViewController:(id)arg1;
- (id)starkAppBundleIdentifierContextForSiriViewController:(id)arg1;
- (id)currentCarPlaySupportedOEMAppsForSiriViewController:(id)arg1;
- (void)dismissSiriSetupViewController:(id)arg1;
- (_Bool)siriSetupViewController:(id)arg1 openURL:(id)arg2;
- (void)disableSiriActivationRequestedBySiriSetupViewController:(id)arg1;
- (void)openSiriRequestedBySiriSetupViewController:(id)arg1;
- (void)siriSetupViewControllerDidChangeVisibility:(id)arg1;
- (_Bool)presentationisIdleAndQuiet;
- (oneway void)turnOnScreenAfterPocketStateFetch;
- (oneway void)handleRequestWithOptions:(id)arg1;
- (oneway void)cancelPreheat;
- (oneway void)handleButtonDownFromButtonIdentifier:(id)arg1 timestamp:(id)arg2;
- (oneway void)handleButtonUpFromButtonIdentifier:(id)arg1 timestamp:(id)arg2;
- (oneway void)handleButtonTapFromButtonIdentifier:(id)arg1;
- (oneway void)handleButtonLongPressFromButtonIdentifier:(id)arg1 timestamp:(id)arg2;
- (oneway void)updateActiveInterfaceOrientation:(id)arg1 willAnimationWithDuration:(id)arg2;
- (oneway void)updateCurrentLockState:(id)arg1;
- (oneway void)cancelPendingActivationEventWithReason:(id)arg1;
- (void)bulletinManagerDidChangeBulletins;
- (void)_siriDidOpenURL:(id)arg1;
- (_Bool)_isDeviceButton:(long long)arg1;
- (void)_applicationsDidChange;
- (void)_removePreviousInjectAudioSettings;
- (void)_removePreviousConversationIfNeededWithTestName:(id)arg1 testOptions:(id)arg2;
- (void)_runSiriBringupListeningStateTestWithTestName:(id)arg1 testOptions:(id)arg2;
- (void)_runSiriBringupSnippetTestWithTestName:(id)arg1 testOptions:(id)arg2 dismissUIAfterTimeout:(_Bool)arg3 finishTestAfterTimeout:(_Bool)arg4;
- (void)_runSiriBringupToConversationTestWithTestName:(id)arg1 testOptions:(id)arg2;
- (void)_runSiriBringupToConversationMainTestWithTestName:(id)arg1 testOptions:(id)arg2;
- (id)_updateTestStartedTimeInTestOptions:(id)arg1 toTime:(id)arg2;
- (void)_runSiriBringupInjectAudioTestWithTestName:(id)arg1 testOptions:(id)arg2 dismissUIAfterTimeout:(_Bool)arg3 finishTestAfterTimeout:(_Bool)arg4;
- (void)_runSiriBringupNetworkEnabledTestWithTestName:(id)arg1 testOptions:(id)arg2 dismissUIAfterTimeout:(_Bool)arg3 finishTestAfterTimeout:(_Bool)arg4;
- (void)_runSiriBringupCarPlayButtonToSpeechRecordingWithoutPrewarmTestWithTestName:(id)arg1 testOptions:(id)arg2;
- (void)_runSyntheticButtonActivationTest;
- (void)_enableAudioInjection:(_Bool)arg1 audioFiles:(id)arg2;
- (void)_clearAllTestingInputs;
- (void)_enqueueTestInput:(id)arg1;
- (_Bool)_handlePPTActivation:(id)arg1;
- (void)runTest:(id)arg1 testOptions:(id)arg2;
- (void)_dismissTest:(id)arg1 afterTimeoutWithTestOptions:(id)arg2 finishTest:(_Bool)arg3;
- (void)_startUIRequestWithText:(id)arg1 testName:(id)arg2;
- (_Bool)_broadcastPlistDictionaryWithTestName:(id)arg1 testOptions:(id)arg2;

@end
