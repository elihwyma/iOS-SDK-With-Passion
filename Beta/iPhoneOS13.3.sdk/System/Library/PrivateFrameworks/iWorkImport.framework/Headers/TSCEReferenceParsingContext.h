/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSCEReferenceParsingContext : NSObject <NSCopying> {
    TSCEAbortObject * _abortObject;
    NSString * _aggregateFunction;
    NSArray * _components;
    NSString * _contextSheetName;
    struct TSCETableResolver { int (**x1)(); } * _contextTableResolver;
    bool  _filterColons;
    bool  _namesUsed;
    bool  _parseAsBaseTableReference;
    struct TSUPreserveFlags { 
        unsigned char _flags; 
    }  _preserveFlags;
    TSCEQuotedRefPathSplitter * _refPathSplitter;
    bool  _referenceIsComplete;
    NSMutableArray * _referencesMatchingInputAsPrefix;
    NSString * _rest;
    NSString * _sheetName;
    NSString * _sheetNameUnquoted;
    NSString * _tableName;
    NSString * _tableNameUnquoted;
    bool  _trimNames;
}

@property (nonatomic, retain) TSCEAbortObject *abortObject;
@property (nonatomic, retain) NSString *aggregateFunction;
@property (nonatomic, retain) NSArray *components;
@property (nonatomic, readonly) <TSCEReferenceResolving> *contextResolver;
@property (nonatomic, retain) NSString *contextSheetName;
@property (nonatomic) struct TSCETableResolver { int (**x1)(); }*contextTableResolver;
@property (nonatomic) bool filterColons;
@property (nonatomic) bool namesUsed;
@property (nonatomic) bool parseAsBaseTableReference;
@property (nonatomic) struct TSUPreserveFlags { unsigned char x1; } preserveFlags;
@property (nonatomic, retain) TSCEQuotedRefPathSplitter *refPathSplitter;
@property (nonatomic) bool referenceIsComplete;
@property (nonatomic, retain) NSMutableArray *referencesMatchingInputAsPrefix;
@property (nonatomic, retain) NSString *rest;
@property (nonatomic, retain) NSString *sheetName;
@property (nonatomic, retain) NSString *sheetNameUnquoted;
@property (nonatomic, retain) NSString *tableName;
@property (nonatomic, retain) NSString *tableNameUnquoted;
@property (nonatomic) bool trimNames;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)abortObject;
- (id)aggregateFunction;
- (id)components;
- (id)contextResolver;
- (id)contextSheetName;
- (struct TSCETableResolver { int (**x1)(); }*)contextTableResolver;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)filterColons;
- (id)initWithContextResolver:(id)arg1;
- (id)initWithContextResolver:(id)arg1 components:(id)arg2;
- (id)initWithContextTableResolver:(struct TSCETableResolver { int (**x1)(); }*)arg1;
- (id)initWithContextTableResolver:(struct TSCETableResolver { int (**x1)(); }*)arg1 components:(id)arg2;
- (bool)namesUsed;
- (bool)parseAsBaseTableReference;
- (struct TSUPreserveFlags { unsigned char x1; })preserveFlags;
- (id)refPathSplitter;
- (bool)referenceIsComplete;
- (id)referencesMatchingInputAsPrefix;
- (void)reset;
- (id)rest;
- (void)setAbortObject:(id)arg1;
- (void)setAggregateFunction:(id)arg1;
- (void)setComponents:(id)arg1;
- (void)setContextSheetName:(id)arg1;
- (void)setContextTableResolver:(struct TSCETableResolver { int (**x1)(); }*)arg1;
- (void)setFilterColons:(bool)arg1;
- (void)setNamesUsed:(bool)arg1;
- (void)setParseAsBaseTableReference:(bool)arg1;
- (void)setPreserveFlags:(struct TSUPreserveFlags { unsigned char x1; })arg1;
- (void)setRefPathSplitter:(id)arg1;
- (void)setReferenceIsComplete:(bool)arg1;
- (void)setReferencesMatchingInputAsPrefix:(id)arg1;
- (void)setRest:(id)arg1;
- (void)setSheetName:(id)arg1;
- (void)setSheetNameUnquoted:(id)arg1;
- (void)setTableName:(id)arg1;
- (void)setTableNameUnquoted:(id)arg1;
- (void)setTrimNames:(bool)arg1;
- (id)sheetName;
- (id)sheetNameUnquoted;
- (id)tableName;
- (id)tableNameUnquoted;
- (bool)trimNames;

@end
