/*
 Image: /System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon
 */

#import <Foundation/NSObject.h>

@class BRCALRowID, BRCAccountSession, BRCFSEventsMonitor, BRCPQLConnection, BRCPrivateClientZone, BRCRelativePath, BRCSyncContext, BRCZoneRowID, BRContainer, BRMangledID, NSMutableDictionary, NSMutableSet, NSNumber, NSString, NSURL, brc_task_tracker;

@protocol BRCAppLibraryDelegate;

__attribute__((visibility("hidden")))
@interface BRCAppLibrary : NSObject

{
    _Atomic unsigned long long _activeQueries;
    _Atomic unsigned long long _activeRecursiveQueries;
    _Atomic unsigned long long _activeAliasQueries;
    long long _maxLostStamp;
    NSNumber *_deepScanStamp;
    NSString *_deepScanReason;
    NSMutableDictionary *_pendingFileCoordinators;
    NSMutableSet *_XPCClientsUsingUbiquity;
    BRMangledID *_mangledID;
    BRCAccountSession *_session;
    BRCPrivateClientZone *_defaultClientZone;
    _Bool _activated;
    NSMutableSet *_targetAppLibraries;
    NSMutableSet *_targetSharedServerZones;
    NSMutableSet *_foregroundClients;
    _Bool _needsSave;
    _Bool _containerMetadataNeedsSyncUp;
    unsigned int _state;
    brc_task_tracker *_tracker;
    id <BRCAppLibraryDelegate> _delegate;
    BRCPQLConnection *_db;
    BRCALRowID *_dbRowID;
    BRCZoneRowID *_zoneRowID;
    NSString *_appLibraryID;
    NSNumber *_fileID;
    NSNumber *_generationID;
    BRContainer *_containerMetadata;
    NSString *_containerMetadataEtag;
    NSNumber *_rootQuotaUsage;
}

@property (retain, nonatomic) NSNumber *fileID;
@property (retain, nonatomic) NSNumber *generationID;
@property (retain, nonatomic) NSNumber *deepScanStamp;
@property (weak, nonatomic) BRCPrivateClientZone *defaultClientZone;
@property (retain, nonatomic) id <BRCAppLibraryDelegate> delegate;
@property (retain, nonatomic) BRCAccountSession *session;
@property (nonatomic, readonly) brc_task_tracker *tracker;
@property (nonatomic, readonly) NSString *logName;
@property (nonatomic, readonly) NSString *appLibraryID;
@property (nonatomic, readonly) BRMangledID *mangledID;
@property (nonatomic, readonly) NSString *absolutePath;
@property (nonatomic, readonly) NSString *pathRelativeToRoot;
@property (nonatomic, readonly) BRCRelativePath *root;
@property (nonatomic, readonly) BRCRelativePath *documentsPath;
@property (nonatomic, readonly) BRCFSEventsMonitor *fsEventsMonitor;
@property (nonatomic, readonly) NSURL *url;
@property (retain, nonatomic) BRCALRowID *dbRowID;
@property (retain, nonatomic) BRCZoneRowID *zoneRowID;
@property (nonatomic, readonly) _Bool isCloudDocsAppLibrary;
@property (nonatomic, readonly) _Bool isiCloudDesktopAppLibrary;
@property (nonatomic, readonly) BRCPQLConnection *db;
@property (nonatomic) _Bool needsSave;
@property (nonatomic, readonly) unsigned long long syncedFolderType;
@property (nonatomic, readonly) BRCSyncContext *syncContextIfExists;
@property (nonatomic, readonly) BRCSyncContext *syncContext;
@property (nonatomic, readonly) NSMutableDictionary *plist;
@property (nonatomic, readonly) unsigned int state;
@property (nonatomic, readonly) _Bool isForeground;
@property (nonatomic, readonly) _Bool shouldEvictUploadedItems;
@property (readonly) _Bool hasActiveQueries;
@property (readonly) _Bool hasActiveRecursiveQueries;
@property (readonly) _Bool hasActiveAliasQueries;
@property (nonatomic) long long maxLostStamp;
@property (nonatomic, readonly) _Bool isGreedy;
@property (nonatomic, readonly) BRContainer *containerMetadata;
@property (retain, nonatomic) NSString *containerMetadataEtag;
@property (nonatomic) _Bool containerMetadataNeedsSyncUp;
@property (retain, nonatomic) NSNumber *rootQuotaUsage;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;
@property (nonatomic, readonly) NSString *identifier;

- (id)init;
- (_Bool)isEqual:(id)arg1;
- (void)close;
- (void)activate;
- (_Bool)hasLocalChanges;
- (id)descriptionWithContext:(id)arg1;
- (struct BRCDirectoryItem *)fetchRootItemInDB:(id)arg1;
- (id)itemByRowID:(unsigned long long)arg1;
- (id)initWithMangledID:(id)arg1 dbRowID:(id)arg2 zoneRowID:(id)arg3 db:(id)arg4 plist:(id)arg5 session:(id)arg6 initialCreation:(_Bool)arg7 createdRootOnDisk:(_Bool)arg8 createdCZMMoved:(_Bool)arg9 rootFileID:(id)arg10;
- (void)associateWithClientZone:(id)arg1;
- (void)_addTargetAppLibraryForAliasItem:(id)arg1;
- (_Bool)isEqualToAppLibrary:(id)arg1;
- (void)updateFromFSAtPath:(id)arg1;
- (_Bool)wasMovedToCloudDocs;
- (void)_removedAliasItemForTargetAppLibrary:(id)arg1;
- (void)registerQueryWithAliases:(_Bool)arg1 isRecursive:(_Bool)arg2;
- (void)unregisterQueryWithAliases:(_Bool)arg1 isRecursive:(_Bool)arg2;
- (struct PQLResultSet *)itemsEnumeratorChildOf:(id)arg1 withDeadItems:(_Bool)arg2 rankMin:(unsigned long long)arg3 rankMax:(unsigned long long)arg4 count:(unsigned long long)arg5 db:(id)arg6;
- (struct PQLResultSet *)itemsEnumeratorWithRankMin:(unsigned long long)arg1 rankMax:(unsigned long long)arg2 namePrefix:(id)arg3 withDeadItems:(_Bool)arg4 shouldIncludeFolders:(_Bool)arg5 shouldIncludeOnlyFolders:(_Bool)arg6 shouldIncludeDocumentsScope:(_Bool)arg7 shouldIncludeDataScope:(_Bool)arg8 shouldIncludeExternalScope:(_Bool)arg9 shouldIncludeTrashScope:(_Bool)arg10 count:(unsigned long long)arg11 db:(id)arg12;
- (_Bool)includesDataScope;
- (id)aliasByUnsaltedBookmarkData:(id)arg1;
- (id)rootItemID;
- (_Bool)isCoordinationPendingForItem:(id)arg1;
- (long long)throttleHashWithItemID:(id)arg1;
- (_Bool)isDesktopAppLibrary;
- (_Bool)isDocumentsAppLibrary;
- (void)updateWithPlist:(id)arg1;
- (void)_updateIsInCloudDocsZone;
- (void)scheduleDeepScanWithReason:(id)arg1;
- (void)removeForegroundClient:(id)arg1;
- (void)addForegroundClient:(id)arg1;
- (void)cancelFileCoordinators;
- (struct BRCDirectoryItem *)fetchRootItem;
- (unsigned int)_activateState:(unsigned int)arg1 origState:(unsigned int)arg2;
- (void)zoneDidChangeMovedToCloudDocsState;
- (_Bool)hasUbiquityClientsConnected;
- (id)_unwrappedDescriptionWithContext:(id)arg1;
- (void)freeFileCoordinationSlotsAfterDelayForRead:(_Bool)arg1;
- (_Bool)setStateBits:(unsigned int)arg1;
- (_Bool)markChildrenLostForItemID:(id)arg1 inZone:(id)arg2 fileID:(id)arg3 startingFromRow:(unsigned long long)arg4 hasMoreWork:(_Bool *)arg5;
- (void)continueMarkingChildrenLostInZone:(id)arg1;
- (void)clearStateBits:(unsigned int)arg1;
- (void)setRootFileID:(unsigned long long)arg1;
- (_Bool)hasInitialFaultsLive;
- (_Bool)hasInitialFaultsEverLive;
- (void)computeDocumentEvictableSizeUsageWithLowTimeDelta:(double)arg1 medTimeDelta:(double)arg2 highTimeDelta:(double)arg3 db:(id)arg4 reply:(CDUnknownBlockType)arg5;
- (void)_resolveTargetAppLibrariesAndSharedClientZones;
- (void)_removeAllTargetAppLibrariesAndSharedServerZones;
- (void)didReceiveHandoffRequest;
- (id)_aliasAppLibraryTargetSQLPrefix;
- (struct PQLResultSet *)_targetAppLibrariesEnumerator;
- (struct PQLResultSet *)_targetSharedServerZonesEnumerator;
- (void)_addTargetAppLibrary:(id)arg1;
- (void)_addTargetSharedServerZone:(id)arg1;
- (_Bool)isStillTargetingAppLibrary:(id)arg1;
- (_Bool)isStillTargetingSharedServerZone:(id)arg1;
- (id)itemIDByRowID:(unsigned long long)arg1 db:(id)arg2;
- (id)itemByRowID:(unsigned long long)arg1 db:(id)arg2;
- (void)notifyClient:(id)arg1 whenFaultingIsDone:(CDUnknownBlockType)arg2;
- (id)documentsFolderItemID;
- (_Bool)supportsSpotlightIndexing;
- (void)addClientUsingUbiquity:(id)arg1;
- (void)removeClientUsingUbiquity:(id)arg1;
- (void)didUpdateDocumentScopePublic;
- (struct PQLResultSet *)enumerateUserVisibleChildrenOfItemGlobalID:(id)arg1 sortOrder:(unsigned char)arg2 offset:(unsigned long long)arg3 limit:(unsigned long long)arg4 db:(id)arg5;
- (struct PQLResultSet *)enumerateUserVisibleChildrenDirectoriesOfItemGlobalID:(id)arg1 db:(id)arg2;
- (void)cancelWriteCoordinatorForItem:(id)arg1;
- (id)coordinatorForItem:(id)arg1 forRead:(_Bool)arg2;
- (unsigned long long)allocateLostStampAddingBackoff:(_Bool)arg1;
- (_Bool)markChildrenLostForItemID:(id)arg1 inZone:(id)arg2 fileID:(id)arg3;
- (void)fsrootDidMoveToPath:(id)arg1;
- (void)didFindLostItem:(id)arg1 oldAppLibrary:(id)arg2;
- (void)didRemoveDocumentsFolder;
- (void)didCreateDocumentScopedItem;
- (void)didCreateDataScopedItem;
- (_Bool)hasDocumentsOrDirectory;
- (_Bool)hasUbiquitousDocuments;
- (unsigned long long)documentSizeUsageWithDB:(id)arg1;
- (void)computeDocumentEvictableSizeUsageWithDB:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (unsigned long long)documentCountWithDB:(id)arg1;
- (void)recomputeShouldEvictState;
- (void)_addTargetSharedServerZoneForSharedItem:(id)arg1;
- (void)_removeTargetSharedServerZoneForSharedServerZone:(id)arg1;
- (id)itemIDByRowID:(unsigned long long)arg1;
- (struct PQLResultSet *)liveAliasesEnumeratorTargetingThisAppLibrary;
- (id)containerMetadataFilledWithTCCInfo;
- (_Bool)shouldSaveContainerMetadataServerside;
- (id)rootItemGlobalID;
- (void)recreateDocumentsFolderIfNeeded;
- (void)scheduleContainerMetadataSyncUp;
- (id)createAliasWithTarget:(id)arg1 parentPath:(id)arg2 forceReparent:(_Bool)arg3 error:(id *)arg4;
- (void)setIsOverQuota:(_Bool)arg1;
- (void)_updateContainerMetadataFromRecord:(id)arg1 stripIcons:(_Bool)arg2;

@end
