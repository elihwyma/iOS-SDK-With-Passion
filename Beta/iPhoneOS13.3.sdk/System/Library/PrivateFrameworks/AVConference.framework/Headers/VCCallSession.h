/*
 Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference
 */

#import <Foundation/NSObject.h>

@class AVCRateController, AVTelephonyInterface, GKRingBuffer, NSArray, NSData, NSDictionary, NSMutableArray, NSMutableDictionary, NSNumber, NSString, TimingCollection, VCAudioPayload, VCAudioTransmitter, VCBitrateArbiter, VCCallInfo, VCCallLinkCongestionDetector, VCCapabilities, VCCaptionsReceiver, VCConnectionManager, VCControlChannel, VCControlChannelMultiWay, VCDisplayLink, VCImageAttributeRules, VCMediaNegotiator, VCRateControlMediaController, VCRedundancyControllerVideo, VCSecureDataChannel, VCSessionMessaging, VCSwitchManager, VCTransportSession, VCWCMClient, VideoAttributes, WRMClient;

@protocol OS_dispatch_queue, OS_dispatch_source, VCCallSessionDelegate, VCConnectionProtocol, VideoConferenceChannelQualityDelegate;

__attribute__((visibility("hidden")))
@interface VCCallSession : NSObject

{
    NSObject<VCCallSessionDelegate> *delegate;
    VCCallInfo *localCallInfo;
    VCCallInfo *remoteCallInfo;
    long long packetMultiplexMode;
    struct tagHANDLE *rtpHandle;
    struct tagHANDLE *rtpVideo;
    void *videoMediaControlInfoGenerator;
    void *audioMediaControlInfoGenerator;
    VCConnectionManager *connectionManager;
    long long connectionChangeState;
    id <VCConnectionProtocol> toBeChangedPrimaryConnection;
    VCMediaNegotiator *_mediaNegotiator;
    VCSwitchManager *_switchManager;
    NSObject<OS_dispatch_queue> *connectionChangeQueue;
    long long state;
    long long _sipState;
    NSMutableArray *negotiatedAudioPayloads;
    VCAudioPayload *currentAudioPayload;
    VCAudioPayload *currentDTXPayload;
    int _currentRedPayloadType;
    _Bool _isRedEnabled;
    long long videoPayload;
    long long screenPayload;
    long long sampleRate;
    long long samplesPerFrame;
    struct tagHANDLE *hSIP;
    _Bool isAudioRunning;
    _Bool isWaitingForICEResult;
    _Bool didSend200OK;
    struct _opaque_pthread_mutex_t mutex;
    _Bool receivedSIPInvite;
    VCImageAttributeRules *imageAttributeRules;
    int iRemoteRTPPort;
    int iRemoteRTCPPort;
    VCCapabilities *caps;
    int _deviceRole;
    struct tagHANDLE *hMediaQueue;
    struct tagHANDLE *hAFRC;
    AVCRateController *_rateController;
    VCRateControlMediaController *_mediaController;
    GKRingBuffer *ringBuf;
    unsigned int lastReceived;
    int preferredAudioCodec;
    _Bool useSBR;
    _Bool useControlByte;
    _Bool useUEP;
    NSDictionary *_allPayloadsLocalFeaturesString;
    NSMutableDictionary *featuresListStringDict;
    _Bool audioIsPaused;
    struct _opaque_pthread_mutex_t pauseLock;
    NSObject<OS_dispatch_queue> *videoQueue;
    NSObject<OS_dispatch_queue> *videoAsyncQueue;
    NSObject<OS_dispatch_queue> *audioQueue;
    NSObject<OS_dispatch_queue> *delegateNotificationQueue;
    NSArray *mutedPeers;
    int bandwidthUpstream;
    int bandwidthDownstream;
    _Bool allowAudioRecording;
    int aacBlockSize;
    _Bool _isUseCaseWatchContinuity;
    int carrierBitrateCap;
    struct AudioStreamBasicDescription vpioFormat;
    _Bool allowAudioSwitching;
    _Bool shouldUpdateLastReceivedPacketTimestamp;
    double lastReceivedPacketTimestamp;
    _Bool isRemoteMediaStalled;
    unsigned int _mediaStallCount;
    double _mediaStallTotalTime;
    double _maxMediaStallTime;
    double _lastMediaStallStartTime;
    _Bool _isRemoteMediaStalledShort;
    int packetsSinceStall;
    int packetsSinceShortMediaStall;
    int natType;
    NSObject<OS_dispatch_source> *pausedAudioHeartBeat;
    TimingCollection *perfTimers;
    double packetLossRate;
    double timeLastCheckedNetworkConditions;
    double timeLastKnowGoodNetworkPLR;
    double timeLastKnowGoodNetworkRTT;
    double networkConditionsTimeoutInSeconds;
    NSString *peerCN;
    NSString *sessionID;
    unsigned int roundTripTime;
    float packetLateAndMissingRatio;
    int sampleLogCount;
    double timeSinceLastReportedNoPackets;
    double noRemotePacketsTimeout;
    double _remoteMediaStallTimeout;
    _Bool previousNoRemoteInProgress;
    _Bool didAttemptSIPInvite;
    NSObject<VideoConferenceChannelQualityDelegate> *qualityDelegate;
    struct _opaque_pthread_mutex_t qualityDelegateLock;
    NSObject<OS_dispatch_queue> *qualityQueue;
    _Bool shouldTimeoutPackets;
    struct _opaque_pthread_mutex_t srtpLock;
    _Bool didPrepareSRTP;
    _Bool useRateControl;
    _Bool useAFRC;
    _Bool useVCRC;
    _Bool isRTCPFBEnabled;
    VCCallLinkCongestionDetector *congestionDetector;
    _Bool shouldSendAudio;
    _Bool isGKVoiceChat;
    int _signalStrengthBars;
    int _signalStrengthDisplayBars;
    int _signalStrengthMaxDisplayBars;
    _Bool bBWEstOperatingModeInitialized;
    _Bool bBWEstNewBWEstModeEnabled;
    _Bool bBWEstFakeLargeFrameModeEnabled;
    _Bool bBWEstActiveProbingSenderLog;
    struct CGSize remoteScreenPortraitAspectRatio;
    struct CGSize remoteScreenLandscapeAspectRatio;
    struct CGSize remoteExpectedPortraitAspectRatio;
    struct CGSize remoteExpectedLandscapeAspectRatio;
    _Bool isStarted;
    NSData *srtpKeyBytes;
    _Bool isInitiator;
    _Bool sentClientSuccessfulDidStart;
    double videoThrottlingTimeout;
    unsigned int awdCallNonce;
    VCSessionMessaging *messaging;
    VCControlChannel *controlChannel;
    VCControlChannelMultiWay *secureControlChannel;
    _Bool isCurrentNetworkBad;
    unsigned int callSessionBitrate;
    NSObject<OS_dispatch_queue> *cellTechQueue;
    NSObject<OS_dispatch_source> *cellTechChangeSource;
    TimingCollection *cameraTimers;
    VCBitrateArbiter *callSessionBitrateArbiter;
    NSObject<OS_dispatch_source> *connectionTimeoutSource;
    NSObject<OS_dispatch_source> *firstRemoteFrameTimemoutSource;
    unsigned short maxPacketLength;
    long long initialSentBytes;
    long long initialReceivedBytes;
    struct tagVCAudioReceiver *audioReceiver;
    VCAudioTransmitter *audioTransmitter;
    VCCaptionsReceiver *_captionsReceiver;
    struct tagHANDLE *hVideoReceiver;
    struct tagHANDLE *hVideoTransmitter;
    VCDisplayLink *_displayLink;
    VCRedundancyControllerVideo *_videoRedundancyController;
    _Bool remoteSupportsVisibleRect;
    _Bool remoteSupportsExpectedAspectRatio;
    _Bool canLocalResizePIP;
    _Bool canRemoteResizePIP;
    _Bool receivedFirstRemoteFrame;
    int fecMode;
    NSObject<OS_dispatch_source> *sessionHealthMonitor;
    VideoAttributes *remoteVideoAttributes;
    double lastVideoQualityNotificationUpdate;
    double lastVideoCallAlarmTime;
    unsigned int remoteFrameWidth;
    unsigned int remoteFrameHeight;
    VCWCMClient *vcWCMClient;
    WRMClient *vcWRMClient;
    _Bool iRATSuggestionEnabled;
    struct OpaqueVTPixelTransferSession *hdTransferSession;
    struct __CVPixelBufferPool *hdBufferPool;
    struct CGSize expectedDecodeSize;
    struct opaqueRTCReporting *reportingAgent;
    _Bool didReportNoRemotePackets;
    _Bool didReportLongConnectionTime;
    _Bool didReportAudioStall;
    _Bool enableRateControlDump;
    unsigned int _targetBitrate;
    unsigned int _rateChangeCounter;
    unsigned int awdTime;
    int operatingMode;
    struct SKEStateOpaque *skeState;
    struct __CFData *secretKey;
    VCSecureDataChannel *secureDataChannel;
    NSString *basebandCodecType;
    NSNumber *basebandCodecSampleRate;
    AVTelephonyInterface *telephonyInterface;
    unsigned int dwRTT_ice;
    NSObject<OS_dispatch_queue> *timestampQueue;
    _Bool shouldSendBlackFrame;
    unsigned int _peerProtocolVersion;
    struct tagWRMMetricsInfo *wrmInfo;
    _Bool _shouldReportWRMMetrics;
    _Bool _inviteDataRequested;
    unsigned int _transportType;
    VCTransportSession *_transportSession;
    _Bool _cleanupDone;
    _Bool _isLocalCellular_LowestConnectionQuality;
    _Bool _isRemoteCellular_LowestConnectionQuality;
    _Bool _isConnectedOnIPv6_LowestConnectionQuality;
    void *_callLogFile;
    NSString *peerReportingID;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;
@property long long connectionChangeState;
@property (retain) VCConnectionManager *connectionManager;
@property (readonly) VCCallInfo *localCallInfo;
@property (copy, nonatomic) NSString *peerCN;
@property (readonly) struct tagVCAudioReceiver *audioReceiver;
@property (readonly) _Bool isCurrentPayloadTypeValid;
@property (nonatomic, readonly) _Bool isCaller;
@property (copy, nonatomic) NSString *sessionID;
@property (nonatomic) _Bool isStarted;
@property (retain, nonatomic) VCImageAttributeRules *imageAttributeRules;
@property (nonatomic) _Bool shouldSendAudio;
@property (nonatomic) unsigned int roundTripTime;
@property (nonatomic) _Bool useRateControl;
@property (nonatomic) _Bool isRTCPFBEnabled;
@property (nonatomic) double packetLossRate;
@property (nonatomic) float packetLateAndMissingRatio;
@property (readonly) double networkQuality;
@property (nonatomic) double networkConditionsTimeoutInSeconds;
@property (nonatomic) int signalStrengthBars;
@property (nonatomic) int signalStrengthDisplayBars;
@property (nonatomic) int signalStrengthMaxDisplayBars;
@property (readonly) unsigned int lastSentAudioSampleTime;
@property (nonatomic) int natType;
@property (nonatomic) _Bool requiresWifi;
@property (nonatomic) _Bool useCompressedConnectionData;
@property (retain) NSObject<VCCallSessionDelegate> *delegate;
@property struct tagHANDLE *rtpHandle;
@property (readonly) int numBufferBytesAvailable;
@property unsigned short maxPacketLength;
@property long long state;
@property long long sipState;
@property _Bool didSend200OK;
@property long long videoPayload;
@property long long sampleRate;
@property (readonly) _Bool isAudioRunning;
@property (readonly) _Bool isVideoRunning;
@property (readonly) _Bool videoIsPaused;
@property (readonly) _Bool audioIsPaused;
@property _Bool isGKVoiceChat;
@property _Bool isWaitingForICEResult;
@property _Bool receivedSIPInvite;
@property struct tagHANDLE *hMediaQueue;
@property struct tagHANDLE *hAFRC;
@property (retain, nonatomic) GKRingBuffer *ringBuf;
@property unsigned int lastReceived;
@property (readonly) int bundledPackets;
@property int packetsPerBundle;
@property int preferredAudioCodec;
@property _Bool useControlByte;
@property _Bool useUEP;
@property unsigned char inputMeter;
@property int bandwidthUpstream;
@property int bandwidthDownstream;
@property (retain, nonatomic) NSArray *mutedPeers;
@property NSObject<VideoConferenceChannelQualityDelegate> *qualityDelegate;
@property _Bool shouldTimeoutPackets;
@property (retain) NSData *srtpKeyBytes;
@property (retain, nonatomic) VideoAttributes *remoteVideoAttributes;
@property unsigned int remoteFrameWidth;
@property unsigned int remoteFrameHeight;
@property (nonatomic) int operatingMode;
@property (readonly) _Bool isSKEOptimizationEnabled;
@property (readonly) _Bool isRemoteMediaStalled;
@property (retain) VCCapabilities *capabilities;
@property int deviceRole;
@property (copy, nonatomic) NSString *peerReportingID;
@property (retain, nonatomic) NSNumber *basebandCodecSampleRate;
@property (copy, nonatomic) NSString *basebandCodecType;
@property (nonatomic, readonly) int audioTierNetworkBitrate;
@property (nonatomic, readonly) int audioTierAudioCodecBitrate;
@property (nonatomic, readonly) int audioTierPacketsPerBundle;
@property (nonatomic, readonly) int audioTierRedNumPayloads;
@property (nonatomic, readonly) int audioTierPayload;
@property (nonatomic, readonly) NSDictionary *dtxMetrics;
@property (nonatomic, readonly) struct opaqueRTCReporting *reportingAgent;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;

+ (id)keyPathsForValuesAffectingNetworkQuality;
+ (int)setRxPayloadList:(struct tagHANDLE *)arg1 withPayloadTypes:(id)arg2 isRedEnabled:(_Bool)arg3;
+ (int)setRxPayloadList:(struct tagHANDLE *)arg1 withPayloadTypes:(id)arg2;
+ (id)getDecodePayloadTypes:(int)arg1 secondaryPayloadTypes:(id)arg2;
+ (void)stopSecureControlChannel:(id)arg1;

- (id)init;
- (void)dealloc;
- (void)lock;
- (void)unlock;
- (unsigned int)callID;
- (_Bool)cancel:(id)arg1;
- (id)callMetadata;
- (void)resetState;
- (void)displayLinkTick:(id)arg1;
- (int)learntBitrateForSegment:(id)arg1 defaultValue:(int)arg2;
- (void)rateController:(void *)arg1 targetBitrateDidChange:(unsigned int)arg2 rateChangeCounter:(unsigned int)arg3;
- (void)sendARPLData:(id)arg1 toCallID:(unsigned int)arg2;
- (void)processRemoteIPChange:(id)arg1 callID:(unsigned int)arg2;
- (void)triggerInterfaceChange;
- (void)pushAudioSamples:(struct opaqueVCAudioBufferList *)arg1;
- (void)redundancyController:(id)arg1 redundancyPercentageDidChange:(unsigned int)arg2;
- (id)addAudioPayload:(int)arg1;
- (id)configForPayloadType:(int)arg1;
- (void)startAudioWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)stopAudioWithCompletionHandler:(CDUnknownBlockType)arg1;
- (unsigned int)audioRTPID;
- (unsigned int)videoRTPID;
- (void)mediaController:(void *)arg1 mediaSuggestionDidChange:(struct VCRateControlMediaSuggestion)arg2;
- (void)redundancyController:(id)arg1 redundancyIntervalDidChange:(double)arg2;
- (void)handleCellularMTUChanged:(unsigned short)arg1;
- (void)setPreWarmState:(_Bool)arg1;
- (void)setupWCMClient;
- (void)setupWRMClient;
- (void)cleanupWRMClient;
- (void)cleanupWCMClient;
- (void)wcmSetCallConfig:(unsigned int)arg1 interferenceLevel:(unsigned int)arg2;
- (void)wcmGetCallConfig:(unsigned int *)arg1 targetBitrate:(unsigned int *)arg2;
- (void)setWRMMetricConfig:(CDStruct_69d7cc99 *)arg1;
- (void)setWRMNotification:(CDStruct_0693755d *)arg1;
- (void)requestWRMNotification;
- (void)startAudioIOWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithDeviceRole:(int)arg1 transportType:(unsigned int)arg2 isGKVoiceChat:(_Bool)arg3 reportingHierarchyToken:(id)arg4;
- (int)mapPacketMultiplexModeToSIPMode:(long long)arg1;
- (double)sessionReceivingBitrate;
- (double)sessionTransmittingBitrate;
- (_Bool)evaluateEnableRRx:(int *)arg1;
- (void)configureRateController;
- (void)resetVideoRulesForInterface:(int)arg1 videoReportingDictionary:(id)arg2;
- (_Bool)stopVideoSend:(_Bool)arg1 error:(id *)arg2;
- (_Bool)startVideoSend:(_Bool)arg1 error:(id *)arg2;
- (void)reportImmediateWRMMetric:(int)arg1 value:(unsigned long long)arg2;
- (_Bool)isCallOngoing;
- (unsigned int)currentAudioCap;
- (void)updateMaxPktLength;
- (_Bool)findFeatureString:(const char *)arg1 value:(char *)arg2 valueLength:(unsigned long long)arg3 withPrefix:(const char *)arg4;
- (id)newRemoteScreenAttributesForOrientation:(int)arg1;
- (int)Conference_SetBWEstMode:(_Bool)arg1 bFakeLargeFrameMode:(_Bool)arg2;
- (_Bool)chooseVideoPayload:(id)arg1 operatingMode:(int)arg2 isLocalOnCellular:(_Bool)arg3 isRemoteOnCellular:(_Bool)arg4;
- (_Bool)disconnect:(id)arg1 didRemoteCancel:(_Bool)arg2;
- (_Bool)getVideoSettings:(int)arg1 forInterface:(int)arg2 payload:(int)arg3 width:(int *)arg4 height:(int *)arg5 framerate:(int *)arg6 bitRate:(int *)arg7;
- (_Bool)chooseVideoPayloadForInterface:(int)arg1;
- (id)getVideoRuleForVideoMode:(unsigned long long)arg1 interface:(int)arg2 sessionBitrate:(int *)arg3;
- (id)getFeaturesListStringForPayload:(int)arg1;
- (int)applyFeaturesListStringForPayload:(int)arg1;
- (void)primaryConnectionDidChangeTo:(id)arg1 oldConnection:(id)arg2;
- (void)updateCachedConnectionState;
- (void)notifyDelegateActiveConnectionDidChange;
- (int)getAudioTxBitrate;
- (void)updateRemoteMediaStallStateReporting:(double)arg1;
- (void)disconnectWithNoRemotePackets:(long long)arg1;
- (void)logDetailedNetworkInformation;
- (void)updateNetworkCheckHint:(double)arg1;
- (void)updateRemoteMediaStallState:(double)arg1;
- (void)updateLastReceivedPacketWithTimestamp:(double)arg1 packetType:(int)arg2;
- (void)sendTimings;
- (_Bool)isSIPEnabled;
- (_Bool)isSecureMessagingRequired;
- (void)setupConnectionTimeoutTimerWithErrorCode:(int)arg1 detailedCode:(int)arg2 description:(id)arg3 reason:(id)arg4;
- (void)cancelConnectionTimeoutTimer;
- (void)cancelFirstRemoteFrameTimer;
- (void)setupRemoteCallInfoWithParticipantID:(id)arg1 usingInviteData:(id)arg2;
- (void)setupPeerInfo:(_Bool)arg1 capabilities:(id)arg2;
- (void)applyNegotiatedFaceTimeSettings;
- (void)setupABTesting;
- (_Bool)setupIDSConnectionForCallID:(unsigned int)arg1 destination:(id)arg2 socket:(int)arg3 error:(id *)arg4;
- (void)handleReceivedPiggybackBlobIDS:(id)arg1;
- (_Bool)configureLegacyTransportWithInviteInfo:(id)arg1 error:(id *)arg2;
- (void)handleReceivedPiggybackBlobLegacy:(id)arg1;
- (void)handleNewConnectionSetup:(id)arg1 isInitialConnection:(_Bool)arg2;
- (void)handlePrimaryConnectionChanged:(id)arg1 oldPrimaryConnection:(id)arg2;
- (void)handleDuplicationEnabled:(_Bool)arg1 activeConnection:(id)arg2;
- (void)handleCellTechChange:(int)arg1;
- (int)setSKEBlobOnTransportSession;
- (void)handleKeyExchangeCompleted;
- (_Bool)disconnectInternal:(_Bool)arg1 disconnectError:(id)arg2 didRemoteCancel:(_Bool)arg3;
- (id)newMediaNegotiatorAudioConfigurationWithAllowAudioSwitching:(_Bool)arg1 useSBR:(_Bool)arg2 aacBlockSize:(unsigned int)arg3;
- (void)initWithRelevantStorebagEntries;
- (void)reportOperatingMode;
- (id)newSKEBlobWithRemoteSKEBlob:(id)arg1;
- (_Bool)isLowBitrateCodecPreferred:(id)arg1;
- (id)newMediaBlobWithRemoteMediaBlob:(id)arg1 localCallID:(unsigned int)arg2 isLowBitrateCodecPreferred:(_Bool)arg3;
- (void)addLocalCallInfoToInviteDictionary:(id)arg1;
- (void)stopPausedHeartbeat;
- (void)startPausedHeartbeat;
- (_Bool)setPauseAudio:(_Bool)arg1 force:(_Bool)arg2 error:(id *)arg3;
- (_Bool)startVideo:(_Bool)arg1 error:(id *)arg2;
- (_Bool)stopVideo:(_Bool)arg1 error:(id *)arg2;
- (_Bool)setPauseVideo:(_Bool)arg1 force:(_Bool)arg2 error:(id *)arg3;
- (void)logPerfTimings;
- (void)sendData:(id)arg1 messageType:(unsigned int)arg2 encrypted:(_Bool)arg3;
- (void)getFrontCaptureTime:(float *)arg1 backCaptureTime:(float *)arg2;
- (unsigned int)primaryConnectionType;
- (void)sendCallingModeMessage;
- (void)enableAudio:(_Bool)arg1;
- (void)updateDeviceRole:(int)arg1;
- (void)reportingMomentsWithRequest:(id)arg1;
- (id)remoteParticipantID;
- (void)schedulePrimaryConnectionChange:(id)arg1 oldConnection:(id)arg2;
- (void)handleFirstConnectionSetup:(id)arg1;
- (_Bool)startMediaWithPreNegotiatedSettings:(id *)arg1;
- (void)sipConnectThreadProc:(id)arg1;
- (void)setupCalleeSIPStartTimeout:(float)arg1;
- (void)logConnectionSuccess;
- (void)setupSecureDataChannel;
- (void)startAWDStats;
- (void)updateVideoQualityStatus:(double)arg1 bitrate:(double)arg2 time:(double)arg3 isRemote:(_Bool)arg4;
- (_Bool)isBetterForSIPInviteWithSourceDestinationInfo:(struct tagVCSourceDestinationInfo *)arg1 thanSession:(id)arg2;
- (void)thermalLevelDidChange:(int)arg1;
- (void)remoteCellTechStateUpdate:(int)arg1 maxRemoteBitrate:(unsigned int)arg2;
- (void)handlePendingPrimaryConnectionChange;
- (void)updateLastReceivedAudioTime;
- (void)updateLastReceivedPacket:(_Bool)arg1 packetType:(int)arg2;
- (id)activeControlChannel;
- (void)timeoutUnfinishedConnection;
- (void)setUpFirstRemoteFrameTimer;
- (_Bool)isLocalOrRemoteOnCellular;
- (_Bool)startConnectionWithParticipantID:(id)arg1 callID:(unsigned int)arg2 usingInviteData:(id)arg3 isCaller:(_Bool)arg4 capabilities:(id)arg5 idsSocket:(int)arg6 destination:(id)arg7 error:(id *)arg8;
- (int)rtcpDescriptor;
- (void)reportWRMMetrics:(const CDStruct_dea828ac *)arg1;
- (void)sendWRMStatusUpdate:(const CDStruct_8aeecdac *)arg1;
- (id)inviteDataForParticipantID:(id)arg1 callID:(unsigned int *)arg2 remoteInviteData:(id)arg3 nonCellularCandidateTimeout:(double)arg4 error:(id *)arg5;
- (void)setRemoteCallInfoFromInviteDictionary:(id)arg1;
- (void)setSuspendAudio;
- (void)setResumeAudio;
- (_Bool)setPauseAudio:(_Bool)arg1 error:(id *)arg2;
- (void)setSuspendVideo;
- (void)setResumeVideo;
- (_Bool)setPauseVideo:(_Bool)arg1 error:(id *)arg2;
- (_Bool)stillWantsToRelay;
- (void)processRelayRequestResponseDict:(id)arg1 didOriginateRequest:(_Bool)arg2;
- (void)processRelayUpdateDict:(id)arg1 didOriginateRequest:(_Bool)arg2;
- (void)processCancelRelayRequest:(id)arg1 didOriginateRequest:(_Bool)arg2;
- (void)rcvdFirstRemoteFrame;
- (id)localParticipantID;
- (void)localCameraSwitchedFrom:(int)arg1 to:(int)arg2;
- (int)negotiatedReceivingFramerate;
- (_Bool)pullAudioSamples:(struct opaqueVCAudioBufferList *)arg1 rtpTimestamp:(unsigned int *)arg2 lastReceivedAudioTime:(double *)arg3 padding:(char *)arg4 paddingLength:(char *)arg5 silence:(int *)arg6;
- (void)setSessionConferenceState:(unsigned int)arg1 callID:(unsigned int)arg2;
- (void)setSessionConferenceVisualRectangle:(struct CGRect)arg1 callID:(unsigned int)arg2;
- (void)setPeerProtocolVersion:(unsigned int)arg1;
- (void)messageVCMomentsRequest:(id)arg1;
- (void)reportSymptom:(unsigned int)arg1;
- (void)vcSecureDataChannel:(id)arg1 messageType:(unsigned int)arg2 receivedData:(id)arg3;
- (void)sendBasebandCodecMessage;
- (void)avTelephonyInterface:(id)arg1 vocoderInfoChangedToType:(id)arg2 sampleRate:(id)arg3;
- (void)didReceiveCaptions:(id)arg1;
- (int)handleIncomingWithCallID:(unsigned int)arg1 msgIn:(const char *)arg2 msgOut:(char *)arg3 optional:(void *)arg4 confIndex:(int *)arg5 error:(id *)arg6;
- (int)setupEncryptionWithKey:(const struct __CFData **)arg1 confIndex:(int *)arg2;
- (_Bool)startMediaQueue:(id *)arg1;
- (void)processSIPMessage:(char *)arg1 msgOut:(char *)arg2 optional:(void *)arg3 confIndex:(int *)arg4;
- (_Bool)shouldNotifyDelegateDidStartBeforeAudioSetup;
- (void)notifyDelegateSessionStarted;
- (void)enableSessionHealthMonitor;
- (void)shutdownVoiceChatFromRemoteSIPSignal:(int)arg1 withReason:(const char *)arg2;
- (void)handleMediaReceivedOverPeerToPeerLinkWithConnectionId:(int)arg1;
- (void)handleMediaReceivedOverRelayLinkWithConnectionId:(int)arg1;
- (int)flushBasebandQueueWithPayloads:(id)arg1 flushCount:(unsigned int *)arg2;
- (int)sipCallback:(int)arg1 callID:(unsigned int)arg2 msgIn:(const char *)arg3 msgOut:(char *)arg4 optional:(void *)arg5 confIndex:(int *)arg6;
- (struct __SecIdentity *)retrieveIdentity;
- (void)setupDTLSDefaults;
- (void)setLocalIdentityForKeyExchange;
- (void)setupMessaging;
- (void)logIdentity:(struct __SecIdentity *)arg1;
- (long long)calculateSIPEndAction:(_Bool)arg1 currentState:(long long)arg2 error:(id)arg3;
- (void)doSipEndAction:(int)arg1 callID:(unsigned int)arg2 error:(id)arg3;
- (void)disableSessionHealthMonitor;
- (void)disconnectWithNoRemotePackets:(long long)arg1 timeoutUsed:(double)arg2;
- (_Bool)treatAsCellular;
- (void)negotiateMediaMaxBandwidth;
- (_Bool)setupAudioCodecWithPayload:(int)arg1;
- (id)negotiatedAudioPayloadTypes;
- (_Bool)setRTPPayloads:(id)arg1 withError:(id *)arg2;
- (_Bool)createRTPHandles:(id *)arg1;
- (_Bool)prepareSRTPWithError:(id *)arg1;
- (_Bool)createMediaQueueHandle:(id *)arg1;
- (void)applyNegotiatedSettings;
- (_Bool)applyNegotiatedAudioSettings:(id *)arg1;
- (_Bool)applyNegotiatedVideoSettings:(id *)arg1;
- (void)applyNegotiatedCaptionsSettings;
- (void)applyNegotiatedMomentsSettings;
- (_Bool)setMediaQueueStreamSettings;
- (_Bool)startRateControl:(id *)arg1;
- (_Bool)createAudioTransmitter:(id *)arg1;
- (_Bool)negotiatePayloads:(id *)arg1 withError:(id *)arg2;
- (_Bool)negotiateMaxBandwidth:(int *)arg1;
- (int)getAllCompatibleVideoPayloads:(int **)arg1 forMediaType:(int)arg2;
- (id)getCompatibleLocalFeaturesListForPayloads:(int *)arg1 count:(int)arg2;
- (_Bool)createSDP:(int *)arg1 audioPayloadCount:(int)arg2 secondaryPayloadTypes:(int *)arg3 secondaryPayloadCount:(int)arg4 videoPayloadTypes:(int *)arg5 videoPayloadCount:(int)arg6 localFeaturesList:(id)arg7 answerBandwidth:(int)arg8 maxBandwidth:(int)arg9 imageSizesSend:(struct imageTag **)arg10 imageSendCount:(int *)arg11 imageSizesRecv:(struct imageTag **)arg12 imageRecvCount:(int *)arg13 sdp:(char *)arg14 numSDPBytes:(int *)arg15 error:(id *)arg16;
- (_Bool)stopMediaQueue:(id *)arg1;
- (void)releaseRTPHandles;
- (void)getAllPayloadsForAudio:(int **)arg1 count:(int *)arg2 secondaryPayloads:(int **)arg3 secondaryCount:(int *)arg4;
- (void)getAllPayloadsForVideo:(int **)arg1 count:(int *)arg2;
- (id)allPayloadsLocalFeaturesString;
- (_Bool)canSendSIPInviteWithError:(id *)arg1;
- (id)createInviteSDPWithError:(id *)arg1;
- (_Bool)establishSIPDialogWithSDP:(id)arg1 error:(id *)arg2;
- (int)fillMediaControlInfo:(void *)arg1;
- (int)processMediaControlInfo:(void *)arg1 isAudio:(_Bool)arg2;
- (int)mapPacketMultiplexModeToRTPMode:(long long)arg1;
- (id)pickFeaturesStringForPayload:(int)arg1 featuresListDict:(id)arg2 remote:(_Bool)arg3;
- (_Bool)setMatchedFeaturesString:(char *)arg1 localFeaturesString:(id)arg2 remoteFeaturesString:(id)arg3;
- (_Bool)choosePayload:(id)arg1;
- (_Bool)chooseSecondaryPayloads:(id)arg1;
- (_Bool)chooseDTXPayloads:(id)arg1;
- (void)negotiateFeaturesString:(id)arg1 forPayload:(int)arg2;
- (_Bool)doesVideoPayloadMatchRemoteImageAttributeRules:(id)arg1;
- (_Bool)canNegotiateVideoPayload:(int)arg1 supportedPayloads:(id)arg2 isLocalOnCellular:(_Bool)arg3 isRemoteOnCellular:(_Bool)arg4;
- (_Bool)isValidVideoPayloadOverride:(id)arg1;
- (_Bool)sendSIPInviteWithError:(id *)arg1;
- (_Bool)setupCallerRTPChannelWithError:(id *)arg1;
- (_Bool)setupAudioCookies;
- (void)stopAudioIO:(CDUnknownBlockType)arg1;
- (int)interfaceForCurrentCall;
- (void)adjustBitrateForConnectionType;
- (_Bool)initializeVideoTransmitter:(id *)arg1 encodeRule:(id)arg2 captureRuleWifi:(id)arg3 captureRuleCellular:(id)arg4 unpausing:(_Bool)arg5 reportingAgent:(struct opaqueRTCReporting *)arg6 fecHeaderV1Enabled:(_Bool)arg7;
- (_Bool)initializeVideoReceiver:(id *)arg1 reportingAgent:(struct opaqueRTCReporting *)arg2 fecHeaderV1Enabled:(_Bool)arg3;
- (_Bool)startVideoReceive:(id *)arg1;
- (_Bool)stopVideoReceive:(id *)arg1 isPausing:(_Bool)arg2;
- (_Bool)startAFRC:(id *)arg1;
- (_Bool)startVCRC:(id *)arg1;
- (void)setupAACELDPayload:(int)arg1;
- (unsigned int)codecBitmapForPayloads:(id)arg1;
- (_Bool)sipConnectWithError:(id *)arg1;
- (unsigned int)maxBitrateForConnectionType;
- (double)audioReceivingBitrateKbps;
- (double)audioTransmittingBitrateKbps;
- (double)sessionReceivingFramerate;
- (double)sessionTransmittingFramerate;
- (void)reportDashboardEndResult:(_Bool)arg1;
- (_Bool)stopRateControl:(id *)arg1;
- (void)cleanupMedia;
- (void)notifyDelegateAndEndCall:(long long)arg1 didRemoteCancel:(_Bool)arg2 error:(id)arg3;
- (void)remotePauseDidChangeToState:(_Bool)arg1 forVideo:(_Bool)arg2;
- (void)addScreenConfigToSDP:(id)arg1;
- (void)getAllPayloadsForScreen:(int **)arg1 count:(int *)arg2;
- (void)doSipEndProc:(id)arg1;
- (const char *)matchedFeaturesStringForPayload:(int)arg1;
- (void)setupBitrateNegotiation;
- (void)shouldSendBlackFrame:(_Bool)arg1;
- (void)sendSymptomToRemote:(id)arg1 groupID:(id)arg2;
- (void)setDuplicationFlag:(_Bool)arg1 withPreferredLocalLinkTypeForDuplication:(int)arg2 notifyPeer:(_Bool)arg3;
- (void)setupVideoPauseMessages;
- (void)setupAudioPauseMessages;
- (void)setupCellTechChangeMessages;
- (void)setupMomentsMessages;
- (void)setupAudioPausedHBMessages;
- (void)setupCallingModeMessages;
- (void)setupHandoverCandidateChangeMessage;
- (void)setupPiPStateChangeMessage;
- (void)setupPreferredInterfaceMessage;
- (void)setupSymptomEnabledMessage;
- (void)setupBasebandCodecInfoMessages;
- (void)setupDisconnectMessage;
- (void)setupAudioOnOffStateMessages;
- (void)controlChannel:(id)arg1 receivedData:(id)arg2 transactionID:(unsigned int)arg3 fromParticipant:(id)arg4;
- (void)transportSession:(id)arg1 connectionSetupDataDidChange:(id)arg2;
- (void)transportSession:(id)arg1 cancelRelayRequest:(id)arg2;
- (void)transportSession:(id)arg1 initiateRelayRequest:(id)arg2;
- (void)transportSession:(id)arg1 sendRelayResponse:(id)arg2;
- (void)packMeters:(char *)arg1 withLength:(char *)arg2;
- (void)callAlarmsWithRTPTimeStamp:(CDStruct_1b6d18a9 *)arg1;
- (void)processResolutionChangeToVideoRule:(id)arg1 captureRule:(id)arg2 featuresListString:(id)arg3;
- (_Bool)onCaptureFrame:(struct opaqueCMSampleBuffer *)arg1 audioTS:(unsigned int)arg2 audioHT:(double)arg3 videoHT:(CDStruct_1b6d18a9)arg4 droppedFrames:(int)arg5 cameraBits:(unsigned char)arg6;
- (unsigned int)parameterSetForPayload:(int)arg1;
- (void)updateStatistics:(CDStruct_b21f1e06)arg1;
- (void)processBlackFrame:(struct opaqueCMSampleBuffer *)arg1;
- (void)updateVideoQualityNotification:(double)arg1;
- (void)onPlayVideo:(struct __CVBuffer *)arg1 frameTime:(CDStruct_1b6d18a9)arg2 cameraStatusBits:(unsigned char)arg3;
- (struct CGSize)computeVisibleAspectRatioWithRemoteScreenAspectRatio:(struct CGSize)arg1 remoteExpectedAspectRatio:(struct CGSize)arg2 encodeWidth:(int)arg3 encodeHeight:(int)arg4;

@end
