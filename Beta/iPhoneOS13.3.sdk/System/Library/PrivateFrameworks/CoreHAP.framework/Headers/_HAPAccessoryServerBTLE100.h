/*
 Image: /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP
 */

#import <CoreHAP/HAPAccessoryServerBTLE.h>

@class CBCharacteristic, CBService, HAPSecuritySession, NSMapTable, NSMutableArray, NSObject, NSString;

@protocol OS_dispatch_source;

@interface _HAPAccessoryServerBTLE100 : HAPAccessoryServerBTLE

{
    struct PairingSessionPrivate *_pairingSession;
    _Bool _startPairingRequested;
    _Bool _pairingFeaturesRead;
    _Bool _securitySessionOpening;
    _Bool _disconnecting;
    _Bool _unpairedIdentifyRequested;
    _Bool _removeOnDisconnect;
    unsigned long long _state;
    unsigned long long _connectionRetryCount;
    NSMapTable *_btleServiceToHAPServiceMap;
    unsigned long long _characteristicDiscoveryRequestCount;
    unsigned long long _characteristicValueReadCount;
    unsigned long long _metadataDiscoveryRequestCount;
    unsigned long long _metadataValueReadCount;
    unsigned long long _availableInstanceID;
    NSMapTable *_btleCharacteristicToHAPCharacteristicMap;
    NSMapTable *_hapCharacteristicReadCompletionQueues;
    NSMapTable *_hapCharacteristicWriteCompletionQueues;
    NSMapTable *_hapCharacteristicEnableEventCompletionQueues;
    NSMutableArray *_addRemovePairingOperationsQueue;
    CBService *_pairingService;
    CBCharacteristic *_pairSetupCharacteristic;
    CBCharacteristic *_pairVerifyCharacteristic;
    CBCharacteristic *_pairingFeaturesCharacteristic;
    CBCharacteristic *_pairingsCharacteristic;
    CBService *_accessoryInfoService;
    CBCharacteristic *_identifyCharacteristic;
    CBCharacteristic *_modelCharacteristic;
    CBCharacteristic *_serialNumberCharacteristic;
    CBCharacteristic *_manufacturerCharacteristic;
    NSString *_controllerUsername;
    CDUnknownBlockType _pairVerifyCompletionBlock;
    unsigned long long _pairingFeatureFlags;
    HAPSecuritySession *_securitySession;
    NSObject<OS_dispatch_source> *_connectionLifetimeTimer;
    double _idleConnectionTimeoutInSec;
    CDUnknownBlockType _unpairedIdentifyCompletionBlock;
}

@property (nonatomic) unsigned long long state;
@property (nonatomic) unsigned long long connectionRetryCount;
@property (retain, nonatomic) NSMapTable *btleServiceToHAPServiceMap;
@property (nonatomic) unsigned long long characteristicDiscoveryRequestCount;
@property (nonatomic) unsigned long long characteristicValueReadCount;
@property (nonatomic) unsigned long long metadataDiscoveryRequestCount;
@property (nonatomic) unsigned long long metadataValueReadCount;
@property (nonatomic) unsigned long long availableInstanceID;
@property (retain, nonatomic) NSMapTable *btleCharacteristicToHAPCharacteristicMap;
@property (retain, nonatomic) NSMapTable *hapCharacteristicReadCompletionQueues;
@property (retain, nonatomic) NSMapTable *hapCharacteristicWriteCompletionQueues;
@property (retain, nonatomic) NSMapTable *hapCharacteristicEnableEventCompletionQueues;
@property (retain, nonatomic) NSMutableArray *addRemovePairingOperationsQueue;
@property (retain, nonatomic) CBService *pairingService;
@property (retain, nonatomic) CBCharacteristic *pairSetupCharacteristic;
@property (retain, nonatomic) CBCharacteristic *pairVerifyCharacteristic;
@property (retain, nonatomic) CBCharacteristic *pairingFeaturesCharacteristic;
@property (retain, nonatomic) CBCharacteristic *pairingsCharacteristic;
@property (retain, nonatomic) CBService *accessoryInfoService;
@property (retain, nonatomic) CBCharacteristic *identifyCharacteristic;
@property (retain, nonatomic) CBCharacteristic *modelCharacteristic;
@property (retain, nonatomic) CBCharacteristic *serialNumberCharacteristic;
@property (retain, nonatomic) CBCharacteristic *manufacturerCharacteristic;
@property (retain, nonatomic) NSString *controllerUsername;
@property (copy, nonatomic) CDUnknownBlockType pairVerifyCompletionBlock;
@property (nonatomic) _Bool startPairingRequested;
@property (nonatomic) _Bool pairingFeaturesRead;
@property (nonatomic) unsigned long long pairingFeatureFlags;
@property (retain, nonatomic) HAPSecuritySession *securitySession;
@property (nonatomic, getter=isSecuritySessionOpening) _Bool securitySessionOpening;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *connectionLifetimeTimer;
@property (nonatomic) double idleConnectionTimeoutInSec;
@property (nonatomic, getter=isDisconnecting) _Bool disconnecting;
@property (nonatomic) _Bool unpairedIdentifyRequested;
@property (copy, nonatomic) CDUnknownBlockType unpairedIdentifyCompletionBlock;
@property (nonatomic) _Bool removeOnDisconnect;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;

+ (id)serializeCharacteristicWriteValue:(id)arg1 characteristicFormat:(unsigned long long)arg2 supportsAdditonalAuthentication:(_Bool)arg3 authenticationData:(id)arg4 error:(id *)arg5;
+ (id)deserializeCharacteristicReadData:(id)arg1 characteristicFormat:(unsigned long long)arg2 supportsAdditonalAuthentication:(_Bool)arg3 error:(id *)arg4;
+ (id)_convertFromBTLEToHAPUUID:(id)arg1;

- (void)dealloc;
- (void)peripheral:(id)arg1 didModifyServices:(id)arg2;
- (void)peripheral:(id)arg1 didDiscoverServices:(id)arg2;
- (void)peripheral:(id)arg1 didDiscoverCharacteristicsForService:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didUpdateValueForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didWriteValueForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didUpdateNotificationStateForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didDiscoverDescriptorsForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didUpdateValueForDescriptor:(id)arg2 error:(id)arg3;
- (void)_resetState;
- (_Bool)_delegateRespondsToSelector:(SEL)arg1;
- (void)_getAttributeDatabase;
- (void)_establishSecureSession;
- (void)continuePairingAfterAuthPrompt;
- (int)_pairSetupTryPassword:(id)arg1;
- (_Bool)removePairingForCurrentControllerOnQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)startPairingWithConsentRequired:(_Bool)arg1 config:(id)arg2 ownershipToken:(id)arg3;
- (void)_enableEvents:(_Bool)arg1 forCharacteristics:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3 queue:(id)arg4;
- (void)enableEvents:(_Bool)arg1 forCharacteristics:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3 queue:(id)arg4;
- (int)_ensurePairingSessionIsInitializedWithType:(unsigned int)arg1;
- (void)_removePairingWithIdentifier:(id)arg1 publicKey:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)discoverAccessories;
- (_Bool)tryPairingPassword:(id)arg1 error:(id *)arg2;
- (_Bool)stopPairingWithError:(id *)arg1;
- (void)readCharacteristicValues:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)writeCharacteristicValues:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)addPairing:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)removePairing:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)listPairingsWithCompletionQueue:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)identifyWithCompletion:(CDUnknownBlockType)arg1;
- (id)_encryptDataAndGenerateAuthTag:(id)arg1 error:(id *)arg2;
- (id)_decryptData:(id)arg1 error:(id *)arg2;
- (id)getLocalPairingIdentityAndAllowCreation:(_Bool)arg1 error:(id *)arg2;
- (id)securitySession:(id)arg1 didReceiveLocalPairingIdentityRequestWithError:(id *)arg2;
- (id)securitySession:(id)arg1 didReceiveRequestForPeerPairingIdentityWithIdentifier:(id)arg2 error:(id *)arg3;
- (void)securitySession:(id)arg1 didReceiveSetupExchangeData:(id)arg2;
- (void)securitySessionIsOpening:(id)arg1;
- (void)securitySessionDidOpen:(id)arg1;
- (void)securitySession:(id)arg1 didCloseWithError:(id)arg2;
- (void)handleDisconnectionWithError:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)updateConnectionIdleTime:(unsigned char)arg1;
- (void)handleConnectionWithPeripheral:(id)arg1 withError:(id)arg2;
- (id)initWithPeripheral:(id)arg1 name:(id)arg2 pairingUsername:(id)arg3 statusFlags:(id)arg4 stateNumber:(id)arg5 stateChanged:(_Bool)arg6 connectReason:(unsigned char)arg7 configNumber:(id)arg8 category:(id)arg9 setupHash:(id)arg10 connectionIdleTime:(unsigned char)arg11 browser:(id)arg12 keyStore:(id)arg13;
- (void)_createPrimaryAccessoryFromAdvertisementData;
- (void)_enableEvent:(_Bool)arg1 forCharacteristic:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3 queue:(id)arg4;
- (void)_handleConnectionWithError:(id)arg1;
- (void)_handleHAPNotificationStateUpdateForCharacteristic:(id)arg1 error:(id)arg2;
- (unsigned long long)hapBLEProtocolVersion;
- (void)generateBroadcastKey:(unsigned char)arg1 queue:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)configureCharacteristics:(id)arg1 queue:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (_Bool)isBLELinkConnected;
- (void)_notifyDelegateOfReceivedEncryptedAuthenticatedData:(id)arg1 forCharacteristic:(id)arg2;
- (void)_notifyDelegateOfReceivedPlaintextData:(id)arg1 forCharacteristic:(id)arg2;
- (void)_notifyDelegateOfSentEncryptedAuthenticatedData:(id)arg1 forCharacteristic:(id)arg2;
- (void)_notifyDelegateOfSentPlaintextData:(id)arg1 forCharacteristic:(id)arg2;
- (void)_handlePairingStateMachine;
- (void)_updateConnectionLifetimeTimer;
- (void)_setupBTLEConnectionToPeripheral;
- (void)_cancelConnectionLifetimeTimer;
- (void)_checkForAuthPrompt;
- (int)_pairSetupStart;
- (void)_reallyEstablishSecureSession;
- (void)_handleHAPServiceDiscovery;
- (void)_handleDescriptorDiscovery;
- (void)_handleReadDescriptorValues;
- (void)_readCharacteristicValues:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)_btleCharacteristicForHAPCharacteristic:(id)arg1;
- (void)_enqueueEnableEventCompletionHandler:(CDUnknownBlockType)arg1 queue:(id)arg2 forCharacteristic:(id)arg3;
- (id)_hapCharacteristicForBTLECharacteristic:(id)arg1;
- (id)_dequeueEnableEventCompletionTupleForCharacteristic:(id)arg1;
- (void)_handleSuccessfulBTLEConnection;
- (void)_handleDisconnectionWithQueue:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (id)_dequeueReadCompletionTupleForCharacteristic:(id)arg1;
- (CDUnknownBlockType)_dequeueWriteCompletionHandlerForCharacteristic:(id)arg1;
- (void)_writeCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_writeValue:(id)arg1 forCharacteristic:(id)arg2 authorizationData:(id)arg3 withCompletionHandler:(CDUnknownBlockType)arg4 queue:(id)arg5;
- (_Bool)_shouldEnableSessionSecurity;
- (void)_enqueueWriteCompletionHandler:(CDUnknownBlockType)arg1 forCharacteristic:(id)arg2;
- (void)_readValueForCharacteristic:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_enqueueReadCompletionHandler:(CDUnknownBlockType)arg1 queue:(id)arg2 forCharacteristic:(id)arg3;
- (void)readValueForCharacteristic:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)_pairVerifyHAPCharacteristic;
- (id)_parseBTLEService:(id)arg1 withInstanceId:(id)arg2;
- (id)_nextInstanceID;
- (void)_handleConnectionLifetimeTimeout;
- (void)_handleHAPCharacteristicDiscoveryForService:(id)arg1 error:(id)arg2;
- (_Bool)_parseBTLECharacteristicDescriptor:(id)arg1 existingDescriptors:(id)arg2 characteristics:(id)arg3;
- (id)_pairSetupHAPCharacteristic;
- (int)_handlePairSetupExchangeWithData:(id)arg1;
- (void)_handleReceivedSecuritySessionSetupExchangeData:(id)arg1;
- (void)_handleHAPServiceDiscoveryCompletionForService:(id)arg1 withInstanceId:(id)arg2;
- (void)_handleUpdatedValueForBTLECharacteristic:(id)arg1 error:(id)arg2;
- (void)_handleHAPWriteConfirmationForCharacteristic:(id)arg1 error:(id)arg2;
- (void)_addPairingWithIdentifier:(id)arg1 publicKey:(id)arg2 admin:(_Bool)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_enqueueOperation:(long long)arg1 identifier:(id)arg2 publicKey:(id)arg3 admin:(_Bool)arg4 queue:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)_dequeueAndContinueOperation;
- (void)_handlePairingsWriteForCharacteristic:(id)arg1 writeError:(id)arg2 removing:(_Bool)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_handlePairingsReadForCharacteristic:(id)arg1 readError:(id)arg2 removing:(_Bool)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;

@end
