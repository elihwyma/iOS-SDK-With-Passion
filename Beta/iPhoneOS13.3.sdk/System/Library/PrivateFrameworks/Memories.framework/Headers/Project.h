/*
 Image: /System/Library/PrivateFrameworks/Memories.framework/Memories
 */

#import <Foundation/NSObject.h>

@class FIFOCache, NSArray, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, NSUndoManager, PVEffect, ProjectAssetManager, TitleDefinition;

@protocol ProjectDelegate;

__attribute__((visibility("hidden")))
@interface Project : NSObject

{
    NSString *m_path;
    NSMutableDictionary *m_project;
    _Bool m_dirty;
    _Bool m_modifiedSincePublish;
    _Bool m_readOnly;
    int m_isEditingCount;
    int m_duration;
    int m_durationForAllAssets;
    int m_editListDuration;
    NSString *m_identifier;
    NSDate *m_modDate;
    NSMutableDictionary *m_contentModesForOrientation;
    NSUndoManager *m_undoManager;
    NSMutableArray *m_projectChangeLogs;
    FIFOCache *m_kenBurnsImageCache;
    int m_suspendMusicValidate;
    int m_suspendUpdateAnchors;
    _Bool m_needsToUpdateAnchors;
    int m_projectID;
    int m_kenBurnsAcceptability;
    NSDictionary *m_editedRanges;
    _Bool m_validate;
    _Bool m_hasBeenModified;
    int m_currentTime;
    NSMutableArray *m_unusedBkgdAudioClips;
    NSMutableArray *m_deletedMediaFiles;
    struct CGSize m_currentSize;
    int m_exportHeight;
    _Bool m_missingKBSourceImage;
    NSString *m_displayName;
    int m_frameRate;
    FIFOCache *m_trailerShotCache;
    int m_suspendSave;
    _Bool _isMiro;
    _Bool _allowsSplits;
    _Bool _fadeSongForce;
    _Bool _isExportingPlist;
    id <ProjectDelegate> _delegate;
    NSArray *_lastArchiveNameAndDate;
    TitleDefinition *_defaultTitle;
    NSMutableArray *_deletedMediaFiles;
    ProjectAssetManager *_assetManager;
    NSArray *_savedEditList;
    double _fadeToBlackStartTime;
    double _fadeToBlackDuration;
    double _aspectRatio;
}

@property (nonatomic) id <ProjectDelegate> delegate;
@property (retain, nonatomic) NSMutableDictionary *projectDictionary;
@property (copy, nonatomic) NSString *path;
@property (nonatomic, readonly) NSString *persistedStorageName;
@property (retain, nonatomic) NSString *displayName;
@property (retain, nonatomic) NSArray *lastArchiveNameAndDate;
@property (nonatomic, readonly) NSString *assetsDirectory;
@property (nonatomic, readonly) NSString *exportDirectory;
@property (nonatomic) _Bool modifiedSincePublish;
@property (nonatomic) _Bool readOnly;
@property (nonatomic, readonly) NSString *identifier;
@property (nonatomic, readonly) NSString *temporaryUniqueIdentifier;
@property (nonatomic, readonly) int aspect;
@property (nonatomic, readonly) int projectID;
@property (nonatomic, readonly) NSString *projectVersion;
@property (copy, nonatomic) NSDate *modificationDate;
@property (nonatomic, readonly) NSUndoManager *undoManager;
@property (retain, nonatomic) TitleDefinition *defaultTitle;
@property (retain, nonatomic) NSString *themeID;
@property (nonatomic, readonly, getter=isTrailer) _Bool trailer;
@property (nonatomic) _Bool isMiro;
@property (nonatomic, readonly) _Bool isSimpleProject;
@property (nonatomic) _Bool useThemeAudio;
@property (nonatomic) _Bool allowOriginalMusicForNoneTheme;
@property (nonatomic) _Bool fadeInFromBlack;
@property (nonatomic) _Bool fadeOutToBlack;
@property (retain, nonatomic) NSString *audioTimePitchAlgorithm;
@property (copy, nonatomic) NSString *defaultTransitionType;
@property (nonatomic) _Bool allowsSplits;
@property (nonatomic) unsigned long long frameRateMode;
@property (retain, nonatomic) PVEffect *filterEffect;
@property (retain, nonatomic) NSString *filterEffectID;
@property (nonatomic, readonly) unsigned int filterSeed;
@property (nonatomic) _Bool hasBeenModified;
@property (nonatomic) int currentTime;
@property (retain, nonatomic) NSMutableArray *deletedMediaFiles;
@property (retain, nonatomic) ProjectAssetManager *assetManager;
@property (retain, nonatomic) NSArray *savedEditList;
@property (nonatomic) double fadeToBlackStartTime;
@property (nonatomic) double fadeToBlackDuration;
@property (nonatomic) _Bool fadeSongForce;
@property (nonatomic) _Bool isExportingPlist;
@property (retain, nonatomic) NSMutableArray *editList;
@property (retain, nonatomic) NSMutableArray *backgroundAudioClips;
@property (retain, nonatomic) NSMutableArray *foregroundAudioClips;
@property (retain, nonatomic) NSMutableArray *cutaways;
@property (retain, nonatomic) NSMutableDictionary *trailerDict;
@property (nonatomic) double aspectRatio;
@property (nonatomic, readonly) _Bool playbackAt60fps;
@property (nonatomic, readonly) _Bool exportAt60fps;
@property (nonatomic) int durationForAllAssets;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;

+ (struct CGSize)playBackImageSize:(struct CGSize)arg1;
+ (struct CGSize)exportImageSize:(struct CGSize)arg1;
+ (struct CGSize)sizeForMaxPixels:(double)arg1 sourceSize:(struct CGSize)arg2;
+ (struct CGSize)thumbImageSize:(struct CGSize)arg1;
+ (double)defaultAspectRatio;
+ (void)setProjectClass:(Class)arg1;
+ (id)defaultProjectImage;
+ (struct CGSize)sizeForRenderIntent:(int)arg1 sourceSize:(struct CGSize)arg2;
+ (void)findSharedMediaItems:(id)arg1 inProjectPlist:(id)arg2 addingToResultsMap:(id *)arg3;
+ (void)replaceProjectsURL:(id)arg1 withURL:(id)arg2 inProjectPlist:(id)arg3;
+ (id)firstClipDictInEditListOfProjectPlist:(id)arg1;
+ (id)projectWithSingleMovieClip:(id)arg1;
+ (_Bool)trailerIsSuitableForThisDevice:(id)arg1;
+ (id)projectFilePathFromProjectPath:(id)arg1 forWriting:(_Bool)arg2;
+ (id)projectHolderPathFromProjectPath:(id)arg1 forWriting:(_Bool)arg2;
+ (id)assetsDirectory:(id)arg1;

- (id)init;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEmpty;
- (id)endEditing;
- (id)initWithContentsOfFile:(id)arg1;
- (int)duration;
- (_Bool)save;
- (_Bool)isDirty;
- (_Bool)isEditing;
- (void)validate;
- (_Bool)saveToPath:(id)arg1;
- (struct CGSize)naturalSize;
- (id)thumbnailImage;
- (double)durationInSeconds;
- (void)startEditing;
- (id)clips;
- (void)markDirty;
- (_Bool)use2160Pcontent:(_Bool)arg1;
- (struct CGImage *)imageForURL:(id)arg1 renderingIntent:(int)arg2;
- (_Bool)isImageValid:(id)arg1 renderingIntent:(int)arg2 size:(struct CGSize *)arg3;
- (id)hasExportedFile:(id)arg1;
- (id)_keyForRenderingIntent:(int)arg1;
- (id)_detectedFacesInImage:(id)arg1 clip:(id)arg2;
- (int)naturalFrameRate;
- (id)imageAtTime:(int)arg1 withSize:(struct CGSize)arg2;
- (void)didInitWithContentsOfFile;
- (id)videoPreviewImageOfSize:(struct CGSize)arg1;
- (_Bool)hasMissingAssets;
- (void)saveClipAssetToProject:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)beginUndoGroup:(id)arg1;
- (void)endUndoGroup;
- (void)captureContentsOfClip:(id)arg1 needsDisplay:(_Bool)arg2;
- (id)backgroundAudioClipsInUseAtTime:(int)arg1;
- (_Bool)shouldUseDerivativesDirectly;
- (void)saveClipAssetToProject:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2 excludedRenderingIntents:(id)arg3;
- (struct CGRect)adjustKBRect:(struct CGRect)arg1 toContainRect:(struct CGRect)arg2 withinImageSize:(struct CGSize)arg3;
- (void)_enumerateMediaClipsUsingBlock:(CDUnknownBlockType)arg1;
- (id)copyMediaClipsOmittingFirstClip:(_Bool)arg1;
- (id)mediaClipsInfoOmittingFirstClip:(_Bool)arg1;
- (unsigned long long)bytesNeededForExport:(id)arg1;
- (void)replaceClip:(id)arg1 withClip:(id)arg2;
- (void)removeClip:(id)arg1 releaseAnchor:(_Bool)arg2;
- (id)previousClipOfType:(int)arg1 beforeClip:(id)arg2;
- (id)clipBeforeClip:(id)arg1;
- (id)clipAfterClip:(id)arg1;
- (void)appendVideoClip:(id)arg1;
- (id)editListClipInUseAtTime:(int)arg1;
- (id)clipBeforeClip:(id)arg1 inClips:(id)arg2;
- (id)clipAfterClip:(id)arg1 inClips:(id)arg2;
- (int)editListDuration;
- (id)imageForIdentifierURL:(id)arg1 renderingIntent:(int)arg2;
- (void)setupUndo;
- (id)initWithValidState:(_Bool)arg1;
- (void)cleanupMalformedAudioPaths:(id)arg1;
- (void)convertPlistToCustomObjects:(id)arg1;
- (void)cleanupProjectDictionary:(id)arg1;
- (void)setProjectDictionary:(id)arg1 validate:(_Bool)arg2;
- (void)createSubDirectories;
- (void)checkForReadOnlyCookie;
- (void)updateModificationDate;
- (_Bool)usesOriginalNoneThemeMusic;
- (_Bool)isURL:(id)arg1 usedInList:(id)arg2;
- (void)cleanupUnusedMediaFiles;
- (id)firstMovieClip;
- (id)usedTrackNames;
- (int)minimumClipDurationForValidation;
- (void)validateEditListTrack;
- (void)updateAnchors;
- (void)validateCutaways;
- (void)validateMusic;
- (void)validateForegroundAudioTracks;
- (void)validateBackgroundAudioTracks;
- (id)convertToPlist;
- (_Bool)use1080Pcontent:(_Bool)arg1;
- (_Bool)useHEVCcontent:(_Bool)arg1;
- (float)maxSourceFrameRate;
- (id)plistAsDataWithError:(id *)arg1;
- (void)trailerIsSavingToPath:(id)arg1;
- (_Bool)rename:(id)arg1 to:(id)arg2 withPath:(id)arg3;
- (void)updateTrailerMovieNameFieldsFromUnformattedString:(id)arg1;
- (id)saveAnchoredClipsInList:(id)arg1;
- (id)restoredAnchoredClips:(id)arg1;
- (id)clipsForClipType:(int)arg1;
- (int)movieOrKBDurationGoodFor60fps:(id)arg1;
- (int)clipDurationGoodFor60fps:(id)arg1;
- (_Bool)miroContainsSufficient60fpsContent;
- (_Bool)containsSufficient60fpsContent;
- (_Bool)has1080Content:(id)arg1 clipType:(int)arg2 onlyMovies:(_Bool)arg3;
- (_Bool)has2160PContent:(id)arg1 clipType:(int)arg2 onlyMovies:(_Bool)arg3;
- (_Bool)hasHEVCContent:(id)arg1 clipType:(int)arg2 onlyMovies:(_Bool)arg3;
- (void)sizeChanged;
- (int)minClipDurationForLeftEatDuration:(int)arg1 rightEatDuration:(int)arg2 totalDuration:(_Bool)arg3;
- (void)detachTransitions;
- (int)allowedTransitionDuration:(int)arg1;
- (void)reattachTransitions;
- (void)rebuildFingerprints:(_Bool)arg1;
- (void)deleteAllExportedFiles;
- (void)undoProjectChanges:(id)arg1;
- (void)noteClipsChangedInLog:(id)arg1;
- (int)startOffsetForEditListClip:(id)arg1;
- (long long)indexOfEditListClipAtTime:(int)arg1;
- (int)startOffsetForEditListIndex:(long long)arg1;
- (void)updateAnchorsForClip:(id)arg1;
- (id)anchoredSegmentsIgnoringClip:(id)arg1 clipType:(int)arg2;
- (void)endEditingOfTrailer;
- (id)addAutomaticTransitions;
- (unsigned int)numberOfForegroundAudioTracks;
- (int)snapToGuideTimeWithinInEditListWithStartOrEndPointsWithin:(float)arg1 ofProjectTime:(int)arg2 ignoringClip:(id)arg3;
- (id)availableAnchoredRangesIgnoringClip:(id)arg1 clipType:(int)arg2;
- (struct _NSRange)availableAnchoredRangeAtTime:(int)arg1 ignoringClip:(id)arg2 clipType:(int)arg3;
- (int)anchoredSlotAtTime:(int)arg1 duration:(int)arg2 inRange:(struct _NSRange)arg3;
- (_Bool)isMovie:(id)arg1 usedInList:(id)arg2;
- (id)nonEditListClipsIn:(id)arg1 inUseAtTime:(int)arg2;
- (id)editListClipInUseAtTime:(int)arg1 timeFromPreviousEdit:(int *)arg2;
- (int)startOffsetForClip:(id)arg1;
- (id)keyframeTimesForEditListClips:(id)arg1;
- (id)keyframeTimesForClips:(id)arg1;
- (void)moveClipsInArray:(id)arg1 afterTime:(int)arg2 duration:(int)arg3 except:(id)arg4;
- (void)moveClipsInArray:(id)arg1 afterTime:(int)arg2 duration:(int)arg3;
- (id)audioClipsAnchoredToClip:(id)arg1;
- (id)cutawaysAnchoredToClip:(id)arg1;
- (void)removeAnchorForClip:(id)arg1;
- (_Bool)insertClip:(id)arg1 atTime:(int)arg2;
- (int)availableSpaceStartingAtTime:(int)arg1 ignoringClip:(id)arg2 clipType:(int)arg3;
- (_Bool)insertMovieClip:(id)arg1 afterClip:(id)arg2;
- (_Bool)moveClipsAfterTime:(int)arg1 duration:(int)arg2;
- (unsigned long long)clipIndexInArray:(id)arg1 atTime:(int)arg2;
- (_Bool)insertClip:(id)arg1 atTime:(int)arg2 adjustOtherClips:(_Bool)arg3;
- (_Bool)canMoveAudioToForegroundFromClip:(id)arg1;
- (void)deleteMediaFileAtURL:(id)arg1;
- (void)audioOffsetBoundsForClip:(id)arg1 minStart:(int *)arg2 maxStart:(int *)arg3 minEnd:(int *)arg4 maxEnd:(int *)arg5;
- (id)localExportDirectory;
- (id)fileNameFromPreset:(id)arg1;
- (_Bool)hasKBOnly;
- (void)deleteExportedFile:(id)arg1;
- (id)trailerShotCacheDirectory;
- (id)thumbnailTrailerKeyForURL:(id)arg1 index:(int)arg2 time:(int)arg3 size:(struct CGSize)arg4;
- (void)assetTrailerShotCache;
- (void)updateClipsForCapriWithKonaProject:(id)arg1;
- (long long)compareModificationDates:(id)arg1;
- (_Bool)clipsOnlyHaveAudioCharacteristics;
- (void)suspendMusicValidate;
- (void)resumeMusicValidate;
- (void)willBeginTrimmingClip:(id)arg1;
- (void)didFinishTrimmingClip;
- (int)numberOfNewsIntroTitlesUsed:(id)arg1 matchesClip:(_Bool *)arg2;
- (id)simpleEditInfo;
- (void)suspendSave;
- (_Bool)resumeSave;
- (void)flushMajorChanges;
- (id)lastContentModeForOrientation:(long long)arg1;
- (void)setLastContentMode:(long long)arg1 forOrientation:(long long)arg2;
- (id)firstClip;
- (id)lastClip;
- (id)nextClipOfType:(int)arg1 afterClip:(id)arg2;
- (_Bool)useClipWithRotation;
- (_Bool)isBiggerThan720;
- (double)secondsFromProjectTime:(int)arg1;
- (double)durationSecondsFromFrameTime:(int)arg1;
- (int)minTotalDurationOfClip:(id)arg1;
- (int)maxAllowedDurationOfTransition:(id)arg1 simple:(int *)arg2;
- (void)suspendUpdateAnchors;
- (void)resumeUpdateAnchors;
- (void)updateAnchorsIfNeeded;
- (int)snapToGuideTimeWithin:(float)arg1 ofProjectTime:(int)arg2 ignoringClip:(id)arg3 forceSnap:(_Bool *)arg4;
- (int)timeForNearestEdgeOfClip:(id)arg1 projectTime:(int)arg2;
- (int)availableSpaceEndingAtTime:(int)arg1 ignoringClip:(id)arg2 clipType:(int)arg3;
- (int)nearestAnchoredSlotAtTime:(int)arg1 duration:(int)arg2 ignoringClip:(id)arg3 clipType:(int)arg4;
- (id)editedRangeList;
- (_Bool)isMovieUsed:(id)arg1;
- (id)clipsInUseAtTime:(int)arg1;
- (id)clipsOfType:(int)arg1 inUseAtTime:(int)arg2;
- (id)clipsOfType:(int)arg1 inUseFromTime:(int)arg2 toTime:(int)arg3;
- (int)convertClipStartTimeToProjectTime:(id)arg1;
- (id)editListClipInUseNearTime:(int)arg1;
- (id)foregroundAudioClipsInUseAtTime:(int)arg1;
- (id)clipBeforeTransitionClip:(id)arg1;
- (id)clipAfterTransitionClip:(id)arg1;
- (id)nonTransitionClipBeforeClip:(id)arg1;
- (_Bool)clip:(id)arg1 isInUseAtTime:(int)arg2;
- (id)keyframeTimes;
- (_Bool)canSplitClip:(id)arg1 atTime:(int)arg2;
- (id)splitClip:(id)arg1 atTime:(int)arg2;
- (id)moveTitleToBlack:(id)arg1;
- (_Bool)canDuplicateClip:(id)arg1;
- (id)duplicateClip:(id)arg1;
- (_Bool)canDetachAudioFromClip:(id)arg1;
- (id)detachMovieAudioFromClip:(id)arg1;
- (void)addForegroundAudioClips:(id)arg1 withAnchor:(id)arg2;
- (double)durationOfEditListClipInSeconds:(id)arg1;
- (void)audioRangeForClip:(id)arg1 start:(int *)arg2 end:(int *)arg3;
- (int)displayedDurationOfClip:(id)arg1;
- (_Bool)hasAnyExportedFile;
- (id)exportPresetForATV;
- (id)exportPresetForPlugin;
- (id)thumbnailTrailerShotForURL:(id)arg1 index:(int)arg2 time:(int)arg3 size:(struct CGSize)arg4;
- (void)saveThumbnailTrailerShot:(id)arg1 forURL:(id)arg2 index:(int)arg3 time:(int)arg4 size:(struct CGSize)arg5;
- (void)flushThumbnailTrailerShot;
- (void)fixupShotThumbnailFileNameAfterImport;
- (id)editInfo;
- (id)replaceURL:(id)arg1 withURL:(id)arg2;
- (void)markDirty:(_Bool)arg1;
- (id)replaceURL:(id)arg1 inMovie:(id)arg2 andEditItem:(id)arg3 withURL:(id)arg4;
- (unsigned long long)estimatedBundleSizeIncludingExternalAssets:(_Bool)arg1 bundleSize:(unsigned long long *)arg2 externalMap:(id *)arg3;
- (void)replacePhotosToKenBurnsURLs;
- (_Bool)okToDeleteFile:(id)arg1;
- (void)audioOffsetsForClip:(id)arg1 startOffset:(int *)arg2 endOffset:(int *)arg3;
- (id)cacheKeyForAssetsLibraryURL:(id)arg1 renderingIntent:(int)arg2;
- (id)cacheKeyForPhotosIdentifierURL:(id)arg1 renderingIntent:(int)arg2;
- (id)cacheKeyForKenBurnsIdentifierURL:(id)arg1 renderingIntent:(int)arg2;
- (id)filePathForCacheKey:(id)arg1;
- (_Bool)shouldCopyImages;
- (id)scaleDownOrRotateIfNeeded:(id)arg1;
- (_Bool)regenerateImagesIfNecessaryForIdentifierURL:(id)arg1 kbInfo:(id)arg2 exportOnly:(_Bool)arg3;
- (struct CGRect)horizontallyClampedKenBurnsRect:(struct CGRect)arg1 imageSize:(struct CGSize)arg2;
- (struct CGRect)verticallyClampedKenBurnsRect:(struct CGRect)arg1 imageSize:(struct CGSize)arg2;
- (id)detectedFacesInKenBurnsClip:(id)arg1;
- (id)detectedFaceRectsInKenBurnsClip:(id)arg1;
- (void)_addPanAndZoomForKenBurnsClip:(id)arg1 image:(id)arg2;
- (void)nextKenBurnsStart:(CDStruct_869f9c67 *)arg1 end:(CDStruct_869f9c67 *)arg2;
- (struct CGRect)rectFromKenBurnsPosition:(CDStruct_869f9c67)arg1 outputAspectRatio:(float)arg2 image:(id)arg3;
- (void)setKenBurnsImage:(id)arg1 forCacheKey:(id)arg2 renderingIntent:(int)arg3;
- (id)markFacesInImage:(id)arg1 highAccuracy:(_Bool)arg2;
- (id)saveImageOfAssetRepresentation:(id)arg1 renderingIntent:(int)arg2;
- (id)saveImageOfAssetRepresentation:(id)arg1;
- (id)saveThumbnailOfAssetRepresentation:(id)arg1;
- (id)savePlaybackImageOfAssetRepresentation:(id)arg1;
- (void)adjustDurationForKBClip:(id)arg1 imageSize:(struct CGSize)arg2;
- (id)scaleAndSaveImageToProject:(id)arg1 cacheKey:(id)arg2 renderingIntent:(int)arg3;
- (id)cacheKeyForFileURL:(id)arg1 renderingIntent:(int)arg2;
- (id)imageMatchingCurrentDeviceSizeForIdentifierURL:(id)arg1 sourceSize:(struct CGSize)arg2 renderingIntent:(int)arg3;
- (void)regenerateKBimageFilesIfNecessary:(_Bool)arg1;
- (unsigned long long)numberOfDetectedFacesInKenBurnsClip:(id)arg1;
- (struct CGRect)rectEnclosingAllFacesInKenBurnsClip:(id)arg1;
- (void)addPanAndZoomForKenBurnsClip:(id)arg1;
- (void)removePanAndZoomForKenBurnsClip:(id)arg1;
- (void)zeroOutPanAndZoomForMultiUpClip:(id)arg1;
- (id)md5StringFromData:(id)arg1;
- (void)saveClipImageToProject:(id)arg1 clip:(id)arg2;
- (unsigned long long)estimatedSizeOfPassThroughExport;
- (void)willStartExport:(id)arg1;
- (_Bool)renameTo:(id)arg1;
- (id)filePathForIdentifierURL:(id)arg1 renderingIntent:(int)arg2;
- (id)initWithContentsOfFile:(id)arg1 validate:(_Bool)arg2;
- (id)hasExportedFileForFullScreen:(_Bool)arg1;
- (id)loadFromProjectData:(id)arg1;
- (void)prepareForCloudPersistence;
- (unsigned long long)bytesNeededForMultipleExports:(id)arg1;
- (id)expandedEditList;
- (id)cutawaysInUseAtTime:(int)arg1;
- (id)cacheKeyForIdentifierURL:(id)arg1 renderingIntent:(int)arg2;
- (struct CGSize)applyAspectRatioTo16by9Size:(struct CGSize)arg1;
- (id)exportedFilePath:(id)arg1;
- (void)didExport;
- (id)clipsAnchoredToClip:(id)arg1;
- (id)saveBackgroundAudioClips;
- (id)saveForegroundAudioClips;
- (id)saveCutaways;
- (void)restoreBackgroundAudioClips:(id)arg1;
- (void)restoreForegroundAudioClips:(id)arg1;
- (void)restoreCutaways:(id)arg1;

@end
