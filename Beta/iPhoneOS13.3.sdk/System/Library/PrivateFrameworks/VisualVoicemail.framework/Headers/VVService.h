/*
 Image: /System/Library/PrivateFrameworks/VisualVoicemail.framework/VisualVoicemail
 */

#import <Foundation/NSObject.h>

@class NSArray, NSDictionary, NSError, NSMutableDictionary, NSRecursiveLock, NSString, VMCarrierStateRequestController, VMTranscriptionService, VVVerifier;

@protocol OS_dispatch_queue, VMTelephonySubscription;

@interface VVService : NSObject

{
    NSRecursiveLock *_lock;
    int _mailboxUsage;
    double _trashCompactionAge;
    NSError *_passwordError;
    NSError *_activationError;
    NSString *_password;
    NSString *_passwordMailboxName;
    NSArray *_retryIntervals;
    int _retryIntervalIndex;
    id _carrierParameters;
    Class _notificationInterpreter;
    struct {
        unsigned int offline:1;
        unsigned int subscribed:1;
        unsigned int initialSetupRequired:1;
        unsigned int fakeInitialSetup:1;
        unsigned int launchedWithFakeInitialSetup:1;
        unsigned int mwiState:1;
        unsigned int notificationFallbackEnabled:1;
        unsigned int capabilitiesLoaded:1;
    } _serviceFlags;
    _Bool _cellularNetworkAvailable;
    _Bool _SMSReady;
    _Bool _WiFiNetworkReachable;
    _Bool _WiFiNetworkSupported;
    _Bool _mailboxUsageUpdated;
    struct os_unfair_lock_s _accessorLock;
    NSString *_isoCountryCode;
    NSMutableDictionary *_stateRequestAttemptCount;
    unsigned long long _trashedCount;
    unsigned long long _unreadCount;
    NSString *_serviceIdentifier;
    NSString *_serviceDestinationID;
    VMTranscriptionService *_transcriptionService;
    VVVerifier *_verifier;
    id <VMTelephonySubscription> _subscription;
    unsigned long long _numFailedAttemptsToSyncOverWifi;
    struct __CFString *_lastConnectionTypeUsed;
    NSDictionary *_accountDictionary;
    NSObject<OS_dispatch_queue> *_serialDispatchQueue;
    VMCarrierStateRequestController *_stateRequestController;
}

@property (nonatomic, readonly) struct os_unfair_lock_s accessorLock;
@property (nonatomic) unsigned long long numFailedAttemptsToSyncOverWifi;
@property (nonatomic) struct __CFString *lastConnectionTypeUsed;
@property (nonatomic, getter=isWiFiNetworkReachable) _Bool WiFiNetworkReachable;
@property (retain, nonatomic) NSDictionary *accountDictionary;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *serialDispatchQueue;
@property (copy, nonatomic, readonly) NSString *isoCountryCode;
@property (nonatomic) unsigned long long trashedCount;
@property (nonatomic) unsigned long long unreadCount;
@property (nonatomic, readonly) NSMutableDictionary *stateRequestAttemptCount;
@property (nonatomic, readonly) VMCarrierStateRequestController *stateRequestController;
@property (nonatomic, getter=isCellularNetworkAvailable) _Bool cellularNetworkAvailable;
@property (nonatomic, readonly, getter=isWiFiNetworkAvailable) _Bool WiFiNetworkAvailable;
@property (nonatomic, getter=isWiFiNetworkSupported) _Bool WiFiNetworkSupported;
@property (nonatomic, getter=isMailboxUsageUpdated) _Bool mailboxUsageUpdated;
@property (copy, nonatomic) NSString *serviceIdentifier;
@property (copy, nonatomic) NSString *serviceDestinationID;
@property (retain, nonatomic) VMTranscriptionService *transcriptionService;
@property (retain, nonatomic) VVVerifier *verifier;
@property (nonatomic, getter=isSMSReady) _Bool SMSReady;
@property (nonatomic, readonly) id <VMTelephonySubscription> subscription;

+ (void)initialize;
+ (_Bool)_lockedSharedServiceIsSubscribed;
+ (void)_setInsomniaStateSupressed:(_Bool)arg1;
+ (unsigned int)_voicemailPowerAssertion;
+ (void)_acquireAssertionsForInsomniaState:(_Bool)arg1;
+ (id)accountDictionaryForURL:(id)arg1;
+ (void)_subscriptionStateChanged;
+ (id)serviceWithIdentifier:(id)arg1 destinationID:(id)arg2 name:(id)arg3 isoCountryCode:(id)arg4 subscription:(id)arg5 stateRequestController:(id)arg6;
+ (_Bool)sharedServiceIsSubscribed;
+ (struct __CTServerConnection *)CTServerConnection;
+ (void)obtainInsomniaAssertion;
+ (void)releaseInsomniaAssertion;

- (void)dealloc;
- (id)password;
- (void)setPassword:(id)arg1;
- (void)synchronize:(_Bool)arg1;
- (void)setSubscribed:(_Bool)arg1;
- (_Bool)isSubscribed;
- (struct __CFString *)connectionServiceType;
- (id)mailboxName;
- (void)reportError:(id)arg1;
- (id)retryIntervals;
- (void)performSynchronousBlock:(CDUnknownBlockType)arg1;
- (_Bool)isOnline;
- (void)_carrierBundleChanged;
- (void)_callStatusChanged;
- (void)_updateOnlineStatus;
- (id)initWithServiceIdentifier:(id)arg1 destinationID:(id)arg2 isoCountryCode:(id)arg3 subscription:(id)arg4 stateRequestController:(id)arg5;
- (void)setMessageWaiting:(_Bool)arg1;
- (void)clearRemoteUIDsForDetachedMessages;
- (void)cancelDelayedSynchronize;
- (void)cancelPasswordRequest;
- (void)cancelNotificationFallback;
- (void)cancelAutomatedTrashCompaction;
- (void)resetCounts;
- (void)handleVVServiceDataAvailableNotification:(id)arg1;
- (void)_setActivationError:(id)arg1;
- (_Bool)sharedSubscriptionRequiresSetup;
- (_Bool)mailboxRequiresSetup;
- (void)setProvisionalPassword:(id)arg1;
- (void)_scheduleFallbackActivityIfNecessary;
- (int)mailboxUsage;
- (_Bool)shouldScheduleAutoTrashOnMailboxUsageChange;
- (void)scheduleAutomatedTrashCompaction;
- (void)performAtomicAccessorBlock:(CDUnknownBlockType)arg1;
- (void)handleCPNetworkObserverNetworkReachableNotification:(id)arg1;
- (void)_setOnline:(_Bool)arg1 fallbackMode:(_Bool)arg2;
- (_Bool)_isOfflineDueToRoamingWithDataStatusDict:(struct __CFDictionary *)arg1;
- (void)setOnline:(_Bool)arg1;
- (_Bool)isMessageWaiting;
- (void)_deliverFallbackNotification;
- (void)_enterFallbackMode;
- (void)_reactToIndicator;
- (id)passwordIgnoringSubscription:(_Bool)arg1;
- (void)displayPasswordRequestIfNecessary;
- (void)removeServiceInformation;
- (void)_cancelIndicatorAction;
- (void)_attemptDelayedSynchronize;
- (void)_scheduleAutomatedTrashCompaction;
- (_Bool)doesClientManageTrashCompaction;
- (double)trashCompactionAge;
- (void)_attemptScheduledTrashCompaction:(id)arg1;
- (void)_cancelAutomatedTrashCompaction;
- (_Bool)doTrashCompaction;
- (_Bool)lastUsedConnectionTypeWasCellular;
- (_Bool)shouldImmediatelyRetrySyncOverCellular;
- (_Bool)isInSync;
- (void)handleNotification:(id)arg1 isMWI:(_Bool)arg2;
- (void)_dataRoamingStatusChanged;
- (void)handleDataContextDeactivated;
- (id)parametersFilePathForUUIDString:(id)arg1;
- (id)accountParamsAtFilePath:(id)arg1;
- (void)kill;
- (void)setMailboxRequiresSetup:(_Bool)arg1;
- (void)setMailboxUsage:(int)arg1;
- (void)updateCountsForChangedFlags:(unsigned int)arg1 currentRecordFlags:(unsigned int)arg2;
- (_Bool)isOfflineDueToRoaming;
- (id)activationError;
- (void)clearActivationError;
- (void)_handleSMSCAvailable;
- (Class)notificationInterpreterClass;
- (_Bool)respectsMWINotifications;
- (_Bool)isPasswordReady;
- (id)provisionalPassword;
- (void)handlePasswordRequestCancellation;
- (int)maximumRecordedNameDuration;
- (int)minimumPasswordLength;
- (int)maximumPasswordLength;
- (_Bool)passwordChangeRequiresEnteringOldPassword;
- (long long)mailboxGreetingType;
- (id)carrierParameterValueForKey:(id)arg1;
- (_Bool)taskOfTypeExists:(long long)arg1;
- (void)progressiveDataLengthsForRecord:(void *)arg1 expected:(unsigned int *)arg2 current:(unsigned int *)arg3;
- (_Bool)dataForRecordPending:(void *)arg1 progressiveLoadInProgress:(_Bool *)arg2;
- (_Bool)headerChangesPending;
- (_Bool)synchronizationPending;
- (_Bool)greetingFetchExistsProgressiveLoadInProgress:(_Bool *)arg1;
- (_Bool)isSyncInProgress;
- (void)retrieveDataForRecord:(void *)arg1;
- (void)setPasscode:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)retrieveGreetingForAccountUUID:(id)arg1;
- (_Bool)greetingAvailable;
- (void)setGreetingType:(long long)arg1 data:(id)arg2 duration:(unsigned long long)arg3 forAccountUUID:(id)arg4;
- (void)movePendingMessagesToTrashTask:(id)arg1;
- (void)movePendingMessagesToInboxTask:(id)arg1;
- (void)moveRecordsWithIdentifiersToTrash:(id)arg1;
- (void)moveRecordsWithIdentifiersToInbox:(id)arg1;
- (void)resetDelayedSynchronizationAttemptCount;
- (void)scheduleDelayedSynchronize;
- (void)reportFailedToSyncOverWifi;
- (void)reportSucessfulSync;
- (void)setLastUsedConnectionType:(struct __CFString *)arg1;
- (void)scheduleImmediateSynchronizeRetryOverCellular;
- (struct __CFString *)dataConnectionServiceTypeOverride;
- (void)handleVoicemailInfoUpdate:(id)arg1;
- (long long)attemptCountForStateRequest:(id)arg1;
- (void)incrementAttemptCountForStateRequest:(id)arg1;
- (void)removeAttemptCountForStateRequest:(id)arg1;
- (_Bool)shouldTrashCompactRecord:(void *)arg1;

@end
