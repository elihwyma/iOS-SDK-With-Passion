/*
 Image: /System/Library/PrivateFrameworks/HID.framework/HID
 */

#import <IOKit/HIDEvent.h>

@class NSArray;

@interface HIDEvent (HIDEventDesc)

@property unsigned long long timestamp;
@property (readonly) unsigned long long senderID;
@property (readonly) unsigned int type;
@property unsigned int options;
@property (readonly) HIDEvent *parent;
@property (readonly) NSArray *children;

+ (id)vendorDefinedEvent:(unsigned long long)arg1 usagePage:(unsigned short)arg2 usage:(unsigned short)arg3 version:(unsigned int)arg4 data:(char *)arg5 length:(unsigned int)arg6 options:(unsigned int)arg7;
+ (id)temperatureEvent:(unsigned long long)arg1 level:(double)arg2 options:(unsigned int)arg3;
+ (id)accelerometerEvent:(unsigned long long)arg1 x:(double)arg2 y:(double)arg3 z:(double)arg4 options:(unsigned int)arg5;
+ (id)genericGestureEvent:(unsigned long long)arg1 gestureType:(unsigned int)arg2 options:(unsigned int)arg3;
+ (id)ambientLightSensorEvent:(unsigned long long)arg1 level:(unsigned int)arg2 options:(unsigned int)arg3;
+ (id)forceEvent:(unsigned long long)arg1 behavior:(unsigned int)arg2 progress:(double)arg3 stage:(unsigned int)arg4 stageProgress:(double)arg5 options:(unsigned int)arg6;
+ (id)motionGestureEvent:(unsigned long long)arg1 gestureType:(unsigned int)arg2 progress:(double)arg3 options:(unsigned int)arg4;
+ (id)gameControllerEvent:(unsigned long long)arg1 controllerType:(unsigned int)arg2 options:(unsigned int)arg3;
+ (id)digitizerEvent:(unsigned long long)arg1 transducerType:(unsigned int)arg2 x:(double)arg3 y:(double)arg4 z:(double)arg5 options:(unsigned int)arg6;
+ (id)tiltDigitizerEvent:(unsigned long long)arg1 x:(double)arg2 y:(double)arg3 options:(unsigned int)arg4;
+ (id)polarDigitizerEvent:(unsigned long long)arg1 altitude:(double)arg2 azimuth:(double)arg3 quality:(double)arg4 density:(double)arg5 majorRadius:(double)arg6 minorRadius:(double)arg7 options:(unsigned int)arg8;
+ (id)qualityDigitizerEvent:(unsigned long long)arg1 quality:(double)arg2 density:(double)arg3 irregularity:(double)arg4 majorRadius:(double)arg5 minorRadius:(double)arg6 accuracy:(double)arg7 options:(unsigned int)arg8;
+ (id)compassEvent:(unsigned long long)arg1 x:(double)arg2 y:(double)arg3 z:(double)arg4 options:(unsigned int)arg5;
+ (id)motionActivityEvent:(unsigned long long)arg1 activityType:(unsigned int)arg2 confidence:(double)arg3 options:(unsigned int)arg4;
+ (id)brightnessEvent:(unsigned long long)arg1 currentBrightness:(double)arg2 targetBrightness:(double)arg3 transitionTime:(unsigned long long)arg4 options:(unsigned int)arg5;
+ (id)gyroEvent:(unsigned long long)arg1 x:(double)arg2 y:(double)arg3 z:(double)arg4 options:(unsigned int)arg5;
+ (id)buttonEvent:(unsigned long long)arg1 buttonMask:(unsigned int)arg2 options:(unsigned int)arg3;
+ (id)atmosphericPressureEvent:(unsigned long long)arg1 level:(double)arg2 sequence:(unsigned int)arg3 options:(unsigned int)arg4;
+ (id)scrollEvent:(unsigned long long)arg1 x:(double)arg2 y:(double)arg3 z:(double)arg4 options:(unsigned int)arg5;
+ (id)biometricEvent:(unsigned long long)arg1 eventType:(unsigned int)arg2 level:(double)arg3 options:(unsigned int)arg4;
+ (id)lEDEvent:(unsigned long long)arg1 ledMask:(unsigned int)arg2 number:(unsigned char)arg3 state:(int)arg4 options:(unsigned int)arg5;
+ (id)polarOrientationEvent:(unsigned long long)arg1 radius:(double)arg2 azimuth:(double)arg3 altitude:(double)arg4 options:(unsigned int)arg5;
+ (id)quaternionOrientationEvent:(unsigned long long)arg1 w:(double)arg2 x:(double)arg3 y:(double)arg4 z:(double)arg5 options:(unsigned int)arg6;
+ (id)tiltOrientationEvent:(unsigned long long)arg1 x:(double)arg2 y:(double)arg3 z:(double)arg4 options:(unsigned int)arg5;
+ (id)proximityEvent:(unsigned long long)arg1 detectionMask:(unsigned int)arg2 options:(unsigned int)arg3;
+ (id)keyboardEvent:(unsigned long long)arg1 usagePage:(unsigned short)arg2 usage:(unsigned short)arg3 down:(int)arg4 options:(unsigned int)arg5;
+ (id)pointerEvent:(unsigned long long)arg1 x:(double)arg2 y:(double)arg3 z:(double)arg4 buttonMask:(unsigned int)arg5 options:(unsigned int)arg6;

- (id)initWithBytes:(const void *)arg1 length:(long long)arg2;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithData:(id)arg1;
- (unsigned int)biometricEventType;
- (void)setPointerX:(double)arg1;
- (void)setPointerY:(double)arg1;
- (void)setPointerZ:(double)arg1;
- (void)setPointerButtonMask:(unsigned int)arg1;
- (double)pointerX;
- (double)pointerY;
- (double)pointerZ;
- (unsigned int)pointerButtonMask;
- (unsigned char)buttonNumber;
- (void)setButtonNumber:(unsigned char)arg1;
- (void)removeAllEvents;
- (int)buttonState;
- (void)setButtonState:(int)arg1;
- (void)appendEvent:(id)arg1;
- (double)currentBrightness;
- (void)setMotionActivityConfidence:(double)arg1;
- (double)motionActivityConfidence;
- (void)removeEvent:(id)arg1;
- (void)setIntegerValue:(long long)arg1 forField:(unsigned int)arg2;
- (CDStruct_d29ee3f1 *)getEventFields;
- (long long)integerValueForField:(unsigned int)arg1;
- (void)enumerateFieldsWithBlock:(CDUnknownBlockType)arg1;
- (_Bool)isEqualToHIDEvent:(id)arg1;
- (id)initWithType:(unsigned int)arg1 timestamp:(unsigned long long)arg2 senderID:(unsigned long long)arg3;
- (id)serialize:(long long)arg1 error:(out id *)arg2;
- (double)doubleValueForField:(unsigned int)arg1;
- (void)setDoubleValue:(double)arg1 forField:(unsigned int)arg2;
- (void *)dataValueForField:(unsigned int)arg1;
- (_Bool)conformsToEventType:(unsigned int)arg1;
- (char *)vendorDefinedData;
- (unsigned int)vendorDefinedDataLength;
- (unsigned short)vendorDefinedUsage;
- (void)setVendorDefinedUsage:(unsigned short)arg1;
- (unsigned short)vendorDefinedUsagePage;
- (void)setVendorDefinedUsagePage:(unsigned short)arg1;
- (unsigned int)vendorDefinedVersion;
- (void)setVendorDefinedVersion:(unsigned int)arg1;
- (double)temperatureLevel;
- (void)setTemperatureLevel:(double)arg1;
- (unsigned int)accelerometerSequence;
- (void)setAccelerometerSequence:(unsigned int)arg1;
- (unsigned int)accelerometerSubType;
- (void)setAccelerometerSubType:(unsigned int)arg1;
- (unsigned int)accelerometerType;
- (void)setAccelerometerType:(unsigned int)arg1;
- (double)accelerometerX;
- (void)setAccelerometerX:(double)arg1;
- (double)accelerometerY;
- (void)setAccelerometerY:(double)arg1;
- (double)accelerometerZ;
- (void)setAccelerometerZ:(double)arg1;
- (unsigned int)genericGestureType;
- (double)genericGestureTypeSwipeProgress;
- (void)setGenericGestureTypeSwipeProgress:(double)arg1;
- (unsigned int)genericGestureTypeTapCount;
- (void)setGenericGestureTypeTapCount:(unsigned int)arg1;
- (double)ambientLightColorComponent0;
- (void)setAmbientLightColorComponent0:(double)arg1;
- (double)ambientLightColorComponent1;
- (void)setAmbientLightColorComponent1:(double)arg1;
- (double)ambientLightColorComponent2;
- (void)setAmbientLightColorComponent2:(double)arg1;
- (unsigned char)ambientLightColorSpace;
- (void)setAmbientLightColorSpace:(unsigned char)arg1;
- (unsigned char)ambientLightDisplayBrightnessChanged;
- (void)setAmbientLightDisplayBrightnessChanged:(unsigned char)arg1;
- (double)ambientLightSensorColorTemperature;
- (void)setAmbientLightSensorColorTemperature:(double)arg1;
- (double)ambientLightSensorIlluminance;
- (void)setAmbientLightSensorIlluminance:(double)arg1;
- (unsigned int)ambientLightSensorLevel;
- (void)setAmbientLightSensorLevel:(unsigned int)arg1;
- (unsigned int)ambientLightSensorRawChannel0;
- (void)setAmbientLightSensorRawChannel0:(unsigned int)arg1;
- (unsigned int)ambientLightSensorRawChannel1;
- (void)setAmbientLightSensorRawChannel1:(unsigned int)arg1;
- (unsigned int)ambientLightSensorRawChannel2;
- (void)setAmbientLightSensorRawChannel2:(unsigned int)arg1;
- (unsigned int)ambientLightSensorRawChannel3;
- (void)setAmbientLightSensorRawChannel3:(unsigned int)arg1;
- (double)powerMeasurement;
- (void)setPowerMeasurement:(double)arg1;
- (unsigned int)powerSubType;
- (void)setPowerSubType:(unsigned int)arg1;
- (unsigned int)powerType;
- (void)setPowerType:(unsigned int)arg1;
- (unsigned int)forceBehavior;
- (void)setForceBehavior:(unsigned int)arg1;
- (double)forceProgress;
- (void)setForceProgress:(double)arg1;
- (unsigned int)forceStage;
- (void)setForceStage:(unsigned int)arg1;
- (double)forceStagePressure;
- (void)setForceStagePressure:(double)arg1;
- (unsigned int)motionGestureGestureType;
- (void)setMotionGestureGestureType:(unsigned int)arg1;
- (double)motionGestureProgress;
- (void)setMotionGestureProgress:(double)arg1;
- (double)gameControllerDirectionPadDown;
- (void)setGameControllerDirectionPadDown:(double)arg1;
- (double)gameControllerDirectionPadLeft;
- (void)setGameControllerDirectionPadLeft:(double)arg1;
- (double)gameControllerDirectionPadRight;
- (void)setGameControllerDirectionPadRight:(double)arg1;
- (double)gameControllerDirectionPadUp;
- (void)setGameControllerDirectionPadUp:(double)arg1;
- (double)gameControllerFaceButtonA;
- (void)setGameControllerFaceButtonA:(double)arg1;
- (double)gameControllerFaceButtonB;
- (void)setGameControllerFaceButtonB:(double)arg1;
- (double)gameControllerFaceButtonX;
- (void)setGameControllerFaceButtonX:(double)arg1;
- (double)gameControllerFaceButtonY;
- (void)setGameControllerFaceButtonY:(double)arg1;
- (double)gameControllerJoyStickAxisRz;
- (void)setGameControllerJoyStickAxisRz:(double)arg1;
- (double)gameControllerJoyStickAxisX;
- (void)setGameControllerJoyStickAxisX:(double)arg1;
- (double)gameControllerJoyStickAxisY;
- (void)setGameControllerJoyStickAxisY:(double)arg1;
- (double)gameControllerJoyStickAxisZ;
- (void)setGameControllerJoyStickAxisZ:(double)arg1;
- (double)gameControllerShoulderButtonL1;
- (void)setGameControllerShoulderButtonL1:(double)arg1;
- (double)gameControllerShoulderButtonL2;
- (void)setGameControllerShoulderButtonL2:(double)arg1;
- (double)gameControllerShoulderButtonR1;
- (void)setGameControllerShoulderButtonR1:(double)arg1;
- (double)gameControllerShoulderButtonR2;
- (void)setGameControllerShoulderButtonR2:(double)arg1;
- (unsigned int)gameControllerThumbstickButtonLeft;
- (void)setGameControllerThumbstickButtonLeft:(unsigned int)arg1;
- (unsigned int)gameControllerThumbstickButtonRight;
- (void)setGameControllerThumbstickButtonRight:(unsigned int)arg1;
- (unsigned int)gameControllerType;
- (void)setGameControllerType:(unsigned int)arg1;
- (double)digitizerAltitude;
- (void)setDigitizerAltitude:(double)arg1;
- (double)digitizerAuxiliaryPressure;
- (void)setDigitizerAuxiliaryPressure:(double)arg1;
- (double)digitizerAzimuth;
- (void)setDigitizerAzimuth:(double)arg1;
- (unsigned int)digitizerButtonMask;
- (void)setDigitizerButtonMask:(unsigned int)arg1;
- (unsigned int)digitizerChildEventMask;
- (void)setDigitizerChildEventMask:(unsigned int)arg1;
- (unsigned int)digitizerCollection;
- (void)setDigitizerCollection:(unsigned int)arg1;
- (double)digitizerDensity;
- (void)setDigitizerDensity:(double)arg1;
- (unsigned int)digitizerDidUpdateMask;
- (void)setDigitizerDidUpdateMask:(unsigned int)arg1;
- (unsigned int)digitizerEventMask;
- (void)setDigitizerEventMask:(unsigned int)arg1;
- (unsigned int)digitizerGenerationCount;
- (void)setDigitizerGenerationCount:(unsigned int)arg1;
- (unsigned int)digitizerIdentity;
- (void)setDigitizerIdentity:(unsigned int)arg1;
- (unsigned int)digitizerIndex;
- (void)setDigitizerIndex:(unsigned int)arg1;
- (double)digitizerIrregularity;
- (void)setDigitizerIrregularity:(double)arg1;
- (unsigned int)digitizerIsDisplayIntegrated;
- (void)setDigitizerIsDisplayIntegrated:(unsigned int)arg1;
- (double)digitizerMajorRadius;
- (void)setDigitizerMajorRadius:(double)arg1;
- (double)digitizerMinorRadius;
- (void)setDigitizerMinorRadius:(double)arg1;
- (unsigned int)digitizerOrientationType;
- (double)digitizerPressure;
- (void)setDigitizerPressure:(double)arg1;
- (double)digitizerQuality;
- (void)setDigitizerQuality:(double)arg1;
- (double)digitizerQualityRadiiAccuracy;
- (void)setDigitizerQualityRadiiAccuracy:(double)arg1;
- (unsigned int)digitizerRange;
- (void)setDigitizerRange:(unsigned int)arg1;
- (double)digitizerTiltX;
- (void)setDigitizerTiltX:(double)arg1;
- (double)digitizerTiltY;
- (void)setDigitizerTiltY:(double)arg1;
- (unsigned int)digitizerTouch;
- (void)setDigitizerTouch:(unsigned int)arg1;
- (double)digitizerTwist;
- (void)setDigitizerTwist:(double)arg1;
- (unsigned int)digitizerType;
- (void)setDigitizerType:(unsigned int)arg1;
- (unsigned int)digitizerWillUpdateMask;
- (void)setDigitizerWillUpdateMask:(unsigned int)arg1;
- (double)digitizerX;
- (void)setDigitizerX:(double)arg1;
- (double)digitizerY;
- (void)setDigitizerY:(double)arg1;
- (double)digitizerZ;
- (void)setDigitizerZ:(double)arg1;
- (unsigned int)compassSequence;
- (void)setCompassSequence:(unsigned int)arg1;
- (unsigned int)compassSubType;
- (void)setCompassSubType:(unsigned int)arg1;
- (unsigned int)compassType;
- (void)setCompassType:(unsigned int)arg1;
- (double)compassX;
- (void)setCompassX:(double)arg1;
- (double)compassY;
- (void)setCompassY:(double)arg1;
- (double)compassZ;
- (void)setCompassZ:(double)arg1;
- (unsigned int)motionActivityActivityType;
- (void)setMotionActivityActivityType:(unsigned int)arg1;
- (void)setCurrentBrightness:(double)arg1;
- (double)targetBrightness;
- (void)setTargetBrightness:(double)arg1;
- (unsigned long long)transitionTime;
- (void)setTransitionTime:(unsigned long long)arg1;
- (unsigned int)gyroSequence;
- (void)setGyroSequence:(unsigned int)arg1;
- (unsigned int)gyroSubType;
- (void)setGyroSubType:(unsigned int)arg1;
- (unsigned int)gyroType;
- (void)setGyroType:(unsigned int)arg1;
- (double)gyroX;
- (void)setGyroX:(double)arg1;
- (double)gyroY;
- (void)setGyroY:(double)arg1;
- (double)gyroZ;
- (void)setGyroZ:(double)arg1;
- (unsigned char)buttonClickCount;
- (void)setButtonClickCount:(unsigned char)arg1;
- (unsigned int)buttonMask;
- (void)setButtonMask:(unsigned int)arg1;
- (double)buttonPressure;
- (void)setButtonPressure:(double)arg1;
- (double)atmosphericPressureLevel;
- (void)setAtmosphericPressureLevel:(double)arg1;
- (unsigned int)atmosphericSequence;
- (void)setAtmosphericSequence:(unsigned int)arg1;
- (double)humidityRH;
- (void)setHumidityRH:(double)arg1;
- (unsigned int)humiditySequence;
- (void)setHumiditySequence:(unsigned int)arg1;
- (unsigned int)scrollIsPixels;
- (void)setScrollIsPixels:(unsigned int)arg1;
- (double)scrollX;
- (void)setScrollX:(double)arg1;
- (double)scrollY;
- (void)setScrollY:(double)arg1;
- (double)scrollZ;
- (void)setScrollZ:(double)arg1;
- (void)setBiometricEventType:(unsigned int)arg1;
- (double)biometricLevel;
- (void)setBiometricLevel:(double)arg1;
- (unsigned char)biometricTapCount;
- (void)setBiometricTapCount:(unsigned char)arg1;
- (unsigned short)biometricUsage;
- (void)setBiometricUsage:(unsigned short)arg1;
- (unsigned short)biometricUsagePage;
- (void)setBiometricUsagePage:(unsigned short)arg1;
- (unsigned int)ledMask;
- (void)setLedMask:(unsigned int)arg1;
- (unsigned char)ledNumber;
- (void)setLedNumber:(unsigned char)arg1;
- (int)ledState;
- (void)setLedState:(int)arg1;
- (double)orientationAltitude;
- (void)setOrientationAltitude:(double)arg1;
- (double)orientationAzimuth;
- (void)setOrientationAzimuth:(double)arg1;
- (unsigned int)orientationDeviceOrientationUsage;
- (void)setOrientationDeviceOrientationUsage:(unsigned int)arg1;
- (unsigned int)orientationOrientationType;
- (double)orientationQuatW;
- (void)setOrientationQuatW:(double)arg1;
- (double)orientationQuatX;
- (void)setOrientationQuatX:(double)arg1;
- (double)orientationQuatY;
- (void)setOrientationQuatY:(double)arg1;
- (double)orientationQuatZ;
- (void)setOrientationQuatZ:(double)arg1;
- (double)orientationRadius;
- (void)setOrientationRadius:(double)arg1;
- (double)orientationTiltX;
- (void)setOrientationTiltX:(double)arg1;
- (double)orientationTiltY;
- (void)setOrientationTiltY:(double)arg1;
- (double)orientationTiltZ;
- (void)setOrientationTiltZ:(double)arg1;
- (unsigned int)proximityDetectionMask;
- (void)setProximityDetectionMask:(unsigned int)arg1;
- (unsigned int)proximityLevel;
- (void)setProximityLevel:(unsigned int)arg1;
- (unsigned int)keyboardClickSpeed;
- (void)setKeyboardClickSpeed:(unsigned int)arg1;
- (int)keyboardDown;
- (void)setKeyboardDown:(int)arg1;
- (unsigned int)keyboardLongPress;
- (void)setKeyboardLongPress:(unsigned int)arg1;
- (unsigned int)keyboardMouseKeyToggle;
- (void)setKeyboardMouseKeyToggle:(unsigned int)arg1;
- (unsigned char)keyboardPressCount;
- (void)setKeyboardPressCount:(unsigned char)arg1;
- (unsigned int)keyboardRepeat;
- (void)setKeyboardRepeat:(unsigned int)arg1;
- (unsigned int)keyboardSlowKeyPhase;
- (void)setKeyboardSlowKeyPhase:(unsigned int)arg1;
- (unsigned int)keyboardStickyKeyPhase;
- (void)setKeyboardStickyKeyPhase:(unsigned int)arg1;
- (unsigned int)keyboardStickyKeyToggle;
- (void)setKeyboardStickyKeyToggle:(unsigned int)arg1;
- (unsigned short)keyboardUsage;
- (void)setKeyboardUsage:(unsigned short)arg1;
- (unsigned short)keyboardUsagePage;
- (void)setKeyboardUsagePage:(unsigned short)arg1;

@end
