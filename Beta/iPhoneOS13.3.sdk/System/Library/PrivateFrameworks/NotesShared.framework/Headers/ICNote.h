/*
 Image: /System/Library/PrivateFrameworks/NotesShared.framework/NotesShared
 */

#import <NotesShared/ICCloudSyncingObject.h>

@class ICAccount, ICAttachment, ICFolder, ICMergableDictionary, ICNoteData, NSArray, NSData, NSDate, NSMutableArray, NSNumber, NSSet, NSString, NSUUID, TTMergeableStringVersionedDocument, TTVectorMultiTimestamp;

@protocol ICNoteMergeabilityDelegate;

@interface ICNote : ICCloudSyncingObject

{
    NSUUID *_uuid;
    id _noteDidSaveObserver;
    NSMutableArray *_noteDidSaveBlocks;
    _Bool needsRefresh;
    _Bool needsToSaveLastViewedTimestamp;
    _Bool preventReleasingTextStorage;
    _Bool shouldAddMediaAsynchronously;
    _Bool isRecoveringCryptoWrappedKey;
    TTVectorMultiTimestamp *archivedTimestamp;
    NSData *decryptedData;
    TTMergeableStringVersionedDocument *_document;
    TTVectorMultiTimestamp *_lastNotifiedTimestamp;
    TTVectorMultiTimestamp *_lastViewedTimestamp;
    id <ICNoteMergeabilityDelegate> mergeabilityDelegate;
    NSUUID *_replicaIDOverride;
    ICMergableDictionary *_replicaIDToUserIDDict;
    id _reservedForCollaborationColorManager;
    id _reservedForTextStorage;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;
@property (nonatomic, readonly) _Bool isModernNote;
@property (nonatomic, readonly) NSArray *noteCellKeyPaths;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;
@property (retain, nonatomic) TTMergeableStringVersionedDocument *document;
@property (retain, nonatomic) ICFolder *primitiveFolder;
@property (retain) NSData *decryptedData;
@property _Bool isRecoveringCryptoWrappedKey;
@property (nonatomic, readonly) TTMergeableStringVersionedDocument *documentWithoutCreating;
@property (retain, nonatomic) NSString *legacyManagedObjectIDURIRepresentation;
@property (copy, nonatomic) TTVectorMultiTimestamp *archivedTimestamp;
@property (retain, nonatomic) NSData *lastViewedTimestampData;
@property (retain, nonatomic) NSData *lastNotifiedTimestampData;
@property (retain, nonatomic) NSString *selectedInkIdentifier;
@property (retain, nonatomic) NSString *selectedInkColorString;
@property (nonatomic) _Bool needsToSaveLastViewedTimestamp;
@property (retain, nonatomic) NSUUID *replicaIDOverride;
@property (retain, nonatomic, readonly) ICMergableDictionary *replicaIDToUserIDDict;
@property (retain, nonatomic) NSData *replicaIDToUserIDDictData;
@property (nonatomic) _Bool shouldAddMediaAsynchronously;
@property (nonatomic) _Bool preventReleasingTextStorage;
@property (retain, nonatomic) id reservedForTextStorage;
@property (retain, nonatomic) id reservedForCollaborationColorManager;
@property (retain, nonatomic) ICAccount *account;
@property (retain, nonatomic) NSDate *creationDate;
@property (retain, nonatomic) NSDate *modificationDate;
@property (retain, nonatomic) NSNumber *noteHasChanges;
@property (retain, nonatomic) NSString *snippet;
@property (retain, nonatomic) NSString *title;
@property (retain, nonatomic) ICAttachment *titleSourceAttachment;
@property (retain, nonatomic) NSSet *attachments;
@property (retain, nonatomic) ICFolder *folder;
@property (retain, nonatomic) NSDate *folderModificationDate;
@property (retain, nonatomic) ICNoteData *noteData;
@property (retain, nonatomic) NSDate *legacyModificationDateAtImport;
@property (retain, nonatomic) NSString *legacyContentHashAtImport;
@property (retain, nonatomic) NSString *legacyImportDeviceIdentifier;
@property (retain, nonatomic) NSNumber *legacyNoteWasPlainText;
@property (retain, nonatomic) NSString *thumbnailAttachmentIdentifier;
@property (nonatomic) short attachmentViewType;
@property (nonatomic) short paperStyleType;
@property (retain, nonatomic) NSDate *lastViewedModificationDate;
@property (nonatomic, readonly) _Bool hasUnreadChanges;
@property (nonatomic) _Bool shouldShowHighlights;
@property (nonatomic, readonly) TTVectorMultiTimestamp *timestamp;
@property (copy, nonatomic) TTVectorMultiTimestamp *lastViewedTimestamp;
@property (copy, nonatomic) TTVectorMultiTimestamp *lastNotifiedTimestamp;
@property (retain, nonatomic) NSDate *lastNotifiedDate;
@property (weak, nonatomic) id <ICNoteMergeabilityDelegate> mergeabilityDelegate;
@property (nonatomic) _Bool needsRefresh;
@property (nonatomic) _Bool isPinned;
@property (nonatomic) short preferredBackgroundType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;

+ (id)newFetchRequestForNotes;
+ (void)deleteNote:(id)arg1;
+ (id)predicateForSearchableNotes;
+ (id)defaultTitleForEmptyNote;
+ (id)newObjectWithIdentifier:(id)arg1 context:(id)arg2;
+ (id)notesMatchingPredicate:(id)arg1 context:(id)arg2;
+ (id)predicateForVisibleNotes;
+ (id)visibleNotesInContext:(id)arg1;
+ (unsigned long long)countOfVisibleNotesInContext:(id)arg1;
+ (id)predicateForPinnedNotes;
+ (unsigned long long)maxNoteAttachments;
+ (id)snippetForPasswordProtectedNote:(id)arg1;
+ (unsigned long long)maxNoteTextLength;
+ (id)keyPathsForValuesAffectingIsEditable;
+ (_Bool)containsUndeletableNotes:(id)arg1;
+ (_Bool)containsUnmovableNotes:(id)arg1;
+ (id)keyPathsForValuesAffectingHasUnreadChanges;
+ (id)newObjectWithIdentifier:(id)arg1 folder:(id)arg2;
+ (id)newEmptyNoteWithUUID:(id)arg1 folder:(id)arg2;
+ (id)newEmptyNoteWithIdentifier:(id)arg1 folder:(id)arg2;
+ (id)allNotesInContext:(id)arg1;
+ (void)purgeNote:(id)arg1;
+ (id)noteWithIdentifier:(id)arg1 context:(id)arg2;
+ (id)noteWithIdentifier:(id)arg1 includeDeleted:(_Bool)arg2 context:(id)arg3;
+ (id)noteWithIdentifier:(id)arg1 includeDeleted:(_Bool)arg2 accountID:(id)arg3 context:(id)arg4;
+ (unsigned long long)countOfNotesMatchingPredicate:(id)arg1 context:(id)arg2;
+ (id)predicateForVisibleNotesIncludingTrash:(_Bool)arg1;
+ (id)createNoteFromNote:(id)arg1 inFolder:(id)arg2 isPasswordProtected:(_Bool)arg3 removingOriginalNote:(_Bool)arg4;
+ (id)newEmptyNoteInFolder:(id)arg1;
+ (void)redactNote:(id)arg1;
+ (id)noteIdentifiersMatchingPredicate:(id)arg1 context:(id)arg2;
+ (id)keyPathsForValuesAffectingCanBeSharedViaICloud;
+ (id)newEmptyNoteInContext:(id)arg1;
+ (id)newNoteWithoutIdentifierInAccount:(id)arg1;
+ (id)newNoteWithoutIdentifierInFolder:(id)arg1;
+ (void)deleteEmptyNote:(id)arg1;
+ (void)purgeAllNotesInContext:(id)arg1;
+ (id)refreshAllOfNoteWithIdentifier:(id)arg1 context:(id)arg2;
+ (id)noteWithUUID:(id)arg1 context:(id)arg2;
+ (id)noteWithIdentifier:(id)arg1 accountID:(id)arg2 context:(id)arg3;
+ (id)visibleNoteWithIdentifier:(id)arg1 context:(id)arg2;
+ (id)noteWithLegacyManagedObjectID:(id)arg1 context:(id)arg2;
+ (unsigned long long)countOfAllNotesInContext:(id)arg1;
+ (_Bool)notes:(id)arg1 containSharedNotesNotSharedViaFolder:(id)arg2;
+ (id)modernNotesInObjects:(id)arg1;
+ (id)predicateForNote:(id)arg1;
+ (id)createNoteFromNote:(id)arg1 isPasswordProtected:(_Bool)arg2 removingOriginalNote:(_Bool)arg3;
+ (id)allPasswordProtectedNoteIdentifiersInContext:(id)arg1;
+ (id)passwordProtectedNoteIdentifiersForAccount:(id)arg1;
+ (_Bool)supportsUserSpecificRecords;
+ (id)keyPathsForValuesAffectingCloudAccount;
+ (id)existingCloudObjectForRecordID:(id)arg1 accountID:(id)arg2 context:(id)arg3;
+ (id)newCloudObjectForRecord:(id)arg1 accountID:(id)arg2 context:(id)arg3;
+ (id)newPlaceholderObjectForRecordName:(id)arg1 accountID:(id)arg2 context:(id)arg3;
+ (id)keyPathsForValuesAffectingPrefersLightBackground;
+ (id)newPlaceholderObjectForRecordName:(id)arg1 account:(id)arg2;

- (void)dealloc;
- (_Bool)isEmpty;
- (void)beginEditing;
- (void)endEditing;
- (id)uuid;
- (void)edited:(unsigned long long)arg1 range:(struct _NSRange)arg2 changeInLength:(long long)arg3;
- (_Bool)isDeletable;
- (id)recordType;
- (id)accountName;
- (_Bool)isVisible;
- (id)attributedString;
- (_Bool)isEditable;
- (void)awakeFromFetch;
- (void)willTurnIntoFault;
- (void)prepareForDeletion;
- (void)didSave;
- (void)willRefresh:(_Bool)arg1;
- (void)didRefresh:(_Bool)arg1;
- (unsigned long long)searchResultType;
- (id)contentIdentifier;
- (id)folderName;
- (_Bool)hasThumbnailImage;
- (id)addURLAttachmentWithURL:(id)arg1;
- (_Bool)wantsUndoCommands;
- (id)mergeableString;
- (id)replicaID;
- (void)addUndoCommand:(id)arg1;
- (id)visibleAttachments;
- (_Bool)isSharable;
- (void)setMarkedForDeletion:(_Bool)arg1;
- (id)shareType;
- (id)recordZoneName;
- (void)markForDeletion;
- (id)noteAsPlainTextWithoutTitle;
- (id)userActivityContentAttributeSet;
- (_Bool)isSharedViaICloudFolder;
- (_Bool)isMovable;
- (id)trimmedTitle;
- (id)folderNameForNoteList;
- (long long)visibilityTestingType;
- (unsigned long long)searchResultsSection;
- (_Bool)searchResultCanBeDeletedFromNoteContext;
- (_Bool)isHiddenFromSearch;
- (id)authorsExcludingCurrentUser;
- (id)contentInfoText;
- (id)dateForCurrentSortType;
- (id)searchIndexingIdentifier;
- (id)searchDomainIdentifier;
- (id)searchableItemAttributeSet;
- (void)updateChangeCount;
- (void)unmarkForDeletion;
- (id)ic_loggingValues;
- (id)cloudAccount;
- (void)deleteFromLocalDatabase;
- (_Bool)canBeSharedViaICloud;
- (void)saveNoteData;
- (unsigned long long)mergeWithNoteData:(id)arg1;
- (void)mergeNotePrimitiveData;
- (_Bool)shouldReleaseDocumentWhenTurningIntoFault;
- (long long)intrinsicNotesVersion;
- (id)textDataDecryptedIfNecessary;
- (void)addReplicaID:(id)arg1 forUserID:(id)arg2;
- (id)searchableString;
- (void)regenerateTitleAndSnippetIfNecessaryForEdit:(unsigned long long)arg1 range:(struct _NSRange)arg2 changeInLength:(long long)arg3;
- (void)didChangeNoteText;
- (_Bool)isDeletedOrInTrash;
- (_Bool)canAddAttachments:(unsigned long long)arg1;
- (id)visibleTopLevelAttachments;
- (void)enumerateAttachmentsInOrderUsingBlock:(CDUnknownBlockType)arg1;
- (unsigned long long)mergeWithNoteDocument:(id)arg1;
- (void)regenerateTitle:(_Bool)arg1 snippet:(_Bool)arg2;
- (void)setCryptoTag:(id)arg1;
- (void)setCryptoInitializationVector:(id)arg1;
- (_Bool)isPinnable;
- (void)decrypt;
- (void)saveAndClearDecryptedData;
- (void)mergeUnappliedEncryptedRecordsIncludingAttachments;
- (struct _NSRange)rangeForTitle:(_Bool *)arg1;
- (struct _NSRange)rangeForSnippet;
- (id)noteAsPlainText;
- (_Bool)populateReplicaIDToUserIDDictIfNecessary;
- (_Bool)prefersLightBackground;
- (_Bool)shouldSyncMinimumSupportedNotesVersion;
- (id)quotedTitle;
- (void)updateTimestampWithUnserializedChanges;
- (_Bool)updateLastViewedTimestampWithCurrentTimestamp;
- (_Bool)isLockable;
- (_Bool)allowsNewTextLength:(unsigned long long)arg1;
- (_Bool)requiresLegacyTombstoneAfterDeletion;
- (_Bool)canAddAttachment;
- (_Bool)attachmentExceedsMaxSizeAllowed:(unsigned long long)arg1;
- (_Bool)containsAttachmentsUnsupportedInPasswordProtection;
- (id)allAttachmentsIncludingSubAttachments;
- (id)allNoteTextAttachmentsIncludingSubAttachments:(_Bool)arg1;
- (id)attachmentsInOrder;
- (struct _NSRange)rangeForAttachment:(id)arg1;
- (void)refreshNoteTextFromDataStore;
- (void)replaceWithDocument:(id)arg1;
- (_Bool)hasLoadedDocument;
- (void)changePinStatusIfPossible;
- (_Bool)supportsEncryptedValuesDictionary;
- (id)parentEncryptableObject;
- (void)mergeUnappliedEncryptedRecordsIncludingAttachmentsInBackground;
- (void)recoverMissingCryptoWrappedKeyIfNecessaryWithMasterKey:(id)arg1;
- (void)setNeedsInitialFetchFromCloud:(_Bool)arg1;
- (void)setLegacyManagedObjectID:(id)arg1;
- (void)mergeReplicaAndUserIDsFromDictionary:(id)arg1;
- (id)trashFolderIfDeleted;
- (_Bool)needsToDeleteShare;
- (void)didAcceptShare:(id)arg1;
- (void)willAddOrRemovePassword;
- (id)parentCloudObject;
- (id)childCloudObjects;
- (id)childCloudObjectsForMinimumSupportedVersionPropagation;
- (_Bool)canBeRootShareObject;
- (id)shareTitle;
- (struct _NSRange)textRangeForSearchRange:(struct _NSRange)arg1 inSearchableString:(id)arg2;
- (id)addAttachmentWithUTI:(id)arg1 data:(id)arg2 filename:(id)arg3;
- (id)addAttachmentWithFileURL:(id)arg1 updateFileBasedAttributes:(_Bool)arg2 analytics:(_Bool)arg3;
- (id)addAttachmentWithUTI:(id)arg1 withURL:(id)arg2 updateFileBasedAttributes:(_Bool)arg3 analytics:(_Bool)arg4;
- (id)addAttachmentWithUTI:(id)arg1;
- (void)addMediaToAttachment:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)addAttachmentWithUTI:(id)arg1 identifier:(id)arg2 analytics:(_Bool)arg3;
- (id)addAttachmentWithIdentifier:(id)arg1;
- (id)addAttachment;
- (id)addTableAttachmentWithTableData:(id)arg1;
- (id)addAttachmentWithUTI:(id)arg1 data:(id)arg2 filename:(id)arg3 updateFileBasedAttributes:(_Bool)arg4 analytics:(_Bool)arg5;
- (id)addAttachmentWithData:(id)arg1 filename:(id)arg2;
- (id)addAttachmentWithFileURL:(id)arg1;
- (id)addAttachmentWithFileWrapper:(id)arg1;
- (id)addAttachmentWithRemoteFileURL:(id)arg1;
- (id)addAttachmentWithUTI:(id)arg1 withURL:(id)arg2;
- (id)addAttachmentWithUTI:(id)arg1 data:(id)arg2 filenameExtension:(id)arg3;
- (id)addGalleryAttachmentWithIdentifier:(id)arg1;
- (id)addTableAttachment;
- (id)addTableAttachmentWithText:(id)arg1;
- (id)addInlineDrawingAttachmentWithAnalytics:(_Bool)arg1;
- (id)attachmentWithIdentifier:(id)arg1;
- (_Bool)supportsDeletionByTTL;
- (id)newlyCreatedRecord;
- (void)mergeEncryptedDataFromRecord:(id)arg1;
- (_Bool)needsToFetchAfterServerRecordChanged:(id)arg1;
- (void)objectWasFetchedFromCloudWithRecord:(id)arg1 accountID:(id)arg2;
- (void)fixBrokenReferences;
- (void)mergeDataFromRecord:(id)arg1 accountID:(id)arg2;
- (void)mergeDataFromUserSpecificRecord:(id)arg1 accountID:(id)arg2;
- (_Bool)isInICloudAccount;
- (id)objectsToBeDeletedBeforeThisObject;
- (_Bool)hasAllMandatoryFields;
- (id)newlyCreatedRecordWithObfuscator:(id)arg1;
- (id)newlyCreatedUserSpecificRecord;
- (void)resetUniqueIdentifier;
- (void)addShareParticipantsToAttributeSet:(id)arg1;
- (long long)mergePolicyForRecord:(id)arg1;
- (void)mergeDataFromRecord:(id)arg1 mergePolicy:(long long)arg2 account:(id)arg3;
- (void)deduplicateSelfAndCreateNewObjectFromRecord:(id)arg1;
- (id)folderReferenceFromRecord:(id)arg1;
- (void)mergeFoldersFromRecord:(id)arg1 account:(id)arg2;
- (void)mergeTextDataFromRecord:(id)arg1 mergePolicy:(long long)arg2;
- (void)mergeTextData:(id)arg1 record:(id)arg2 mergePolicy:(long long)arg3;
- (id)attachmentForWebThumbnail;
- (void)mergeDataFromRecord:(id)arg1 account:(id)arg2;

@end
