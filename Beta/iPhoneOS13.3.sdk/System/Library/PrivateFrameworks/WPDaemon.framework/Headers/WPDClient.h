/*
 Image: /System/Library/PrivateFrameworks/WPDaemon.framework/WPDaemon
 */

#import <Foundation/NSObject.h>

@class NSMutableDictionary, NSMutableSet, NSString, NSUUID, NSXPCConnection, WPDAdvertisingManager, WPDObjectDiscoveryManager, WPDPipeManager, WPDScanManager, WPDZoneManager, WPDaemonServer;

@protocol OS_dispatch_queue, WPDClientDelegate;

@interface WPDClient : NSObject

{
    _Bool _isTestModeClient;
    _Bool _canDisableScans;
    _Bool _registered;
    _Bool _portTickled;
    _Bool _holdVoucher;
    _Bool _entitledForZones;
    _Bool _entitledForObjectDiscovery;
    _Bool _entitledForRanging;
    _Bool _pendingSent;
    _Bool _scanBlacklisted;
    _Bool _scansOff;
    _Bool _isObjectDiscovery;
    _Bool _supportsObjectDiscovery;
    _Bool _supportsRanging;
    int _processID;
    id <WPDClientDelegate> _delegate;
    NSUUID *_clientUUID;
    NSString *_clientTypeString;
    NSString *_processName;
    NSMutableSet *_endpointsSet;
    NSXPCConnection *_conn;
    NSObject<OS_dispatch_queue> *_messageQueue;
    WPDaemonServer *_server;
    NSObject<OS_dispatch_queue> *_serverQueue;
    NSString *_machName;
    WPDScanManager *_scanManager;
    WPDAdvertisingManager *_advertisingManager;
    WPDZoneManager *_zoneManager;
    WPDPipeManager *_pipeManager;
    WPDObjectDiscoveryManager *_objectDiscoveryManager;
    NSMutableDictionary *_connections;
    NSUUID *_identifier;
    NSMutableDictionary *_advertTimers;
    NSMutableDictionary *_advertTimerState;
    NSMutableDictionary *_scanTimers;
    NSMutableDictionary *_connectionTimer;
    NSMutableSet *_lePipePeersSet;
}

@property _Bool portTickled;
@property _Bool holdVoucher;
@property int processID;
@property (retain) NSString *processName;
@property (retain) NSString *clientTypeString;
@property (retain) NSString *machName;
@property (retain) NSUUID *clientUUID;
@property (weak) WPDScanManager *scanManager;
@property (weak) WPDAdvertisingManager *advertisingManager;
@property (weak) WPDZoneManager *zoneManager;
@property (weak) WPDPipeManager *pipeManager;
@property (weak) WPDObjectDiscoveryManager *objectDiscoveryManager;
@property (retain) NSMutableDictionary *connections;
@property (retain) NSUUID *identifier;
@property _Bool entitledForZones;
@property _Bool entitledForObjectDiscovery;
@property _Bool entitledForRanging;
@property _Bool pendingSent;
@property (retain) NSMutableDictionary *advertTimers;
@property (retain) NSMutableDictionary *advertTimerState;
@property (retain) NSMutableDictionary *scanTimers;
@property (retain) NSMutableDictionary *connectionTimer;
@property _Bool scanBlacklisted;
@property _Bool scansOff;
@property (retain) NSMutableSet *lePipePeersSet;
@property (retain) NSMutableSet *endpointsSet;
@property _Bool isObjectDiscovery;
@property (readonly) _Bool supportsObjectDiscovery;
@property (readonly) _Bool supportsRanging;
@property (weak, readonly) id <WPDClientDelegate> delegate;
@property _Bool isTestModeClient;
@property _Bool canDisableScans;
@property (retain) NSXPCConnection *conn;
@property (retain) NSObject<OS_dispatch_queue> *messageQueue;
@property _Bool registered;
@property (weak, readonly) WPDaemonServer *server;
@property (weak, readonly) NSObject<OS_dispatch_queue> *serverQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;

- (void)dealloc;
- (void)destroy;
- (void)startAdvertising:(id)arg1;
- (void)unregisterEndpoint:(id)arg1;
- (void)disconnectFromPeer:(id)arg1;
- (void)sendTestRequest:(id)arg1;
- (void)setupConnection;
- (void)connectToPeer:(id)arg1 withOptions:(id)arg2;
- (void)disableScanning;
- (void)resetConnection;
- (void)enableTestMode;
- (void)startScanning:(id)arg1;
- (void)stopScanning:(id)arg1;
- (void)checkAllowDuplicates:(CDUnknownBlockType)arg1;
- (void)advertisingFailedToStart:(id)arg1 ofType:(unsigned char)arg2;
- (void)stopAdvertising:(id)arg1;
- (void)advertisingStartedOfType:(unsigned char)arg1;
- (void)advertisingStoppedOfType:(unsigned char)arg1 withError:(id)arg2;
- (void)advertisingPendingOfType:(unsigned char)arg1;
- (void)rangingEnabled:(_Bool)arg1 withError:(id)arg2;
- (void)enableRanging:(_Bool)arg1 reply:(CDUnknownBlockType)arg2;
- (void)isRangingEnabledReply:(CDUnknownBlockType)arg1;
- (void)startTrackingPeerWithRequest:(id)arg1;
- (void)stopTrackingPeerWithRequest:(id)arg1;
- (void)peerTrackingFull;
- (void)peerTrackingAvailable;
- (void)stoppedTrackingPeer:(id)arg1 ofType:(unsigned char)arg2;
- (void)foundPeer:(id)arg1 ofType:(unsigned char)arg2;
- (void)lostPeer:(id)arg1 ofType:(unsigned char)arg2;
- (void)sendDataToCharacteristic:(id)arg1 inService:(id)arg2 forPeer:(id)arg3;
- (void)registerEndpoint:(id)arg1 requireAck:(_Bool)arg2 requireEncryption:(_Bool)arg3;
- (void)connectedDevice:(id)arg1 withError:(id)arg2 shouldDiscover:(_Bool)arg3;
- (void)connectedDeviceOverLEPipe:(id)arg1;
- (void)sentData:(id)arg1 toEndpoint:(id)arg2 forPeripheral:(id)arg3 withError:(id)arg4;
- (void)receivedData:(id)arg1 fromEndpoint:(id)arg2 forPeripheral:(id)arg3;
- (void)central:(id)arg1 subscribed:(_Bool)arg2 toCharacteristic:(id)arg3 inService:(id)arg4;
- (void)disconnectedDeviceOverLEPipe:(id)arg1 withError:(id)arg2;
- (void)listenToBandwidthNotifications;
- (void)discoverCharacteristicsAndServices:(id)arg1 forPeripheral:(id)arg2;
- (void)shouldSubscribe:(_Bool)arg1 toPeer:(id)arg2 withCharacteristic:(id)arg3 inService:(id)arg4;
- (void)discoveredCharacteristicsAndServices:(id)arg1 forPeripheral:(id)arg2;
- (void)updatedNotificationState:(_Bool)arg1 forCharacteristic:(id)arg2 inService:(id)arg3 withPeripheral:(id)arg4;
- (void)sentData:(id)arg1 forCharacteristic:(id)arg2 inService:(id)arg3 forPeripheral:(id)arg4 withError:(id)arg5;
- (void)bandwidthStateUpdated:(id)arg1;
- (void)registerForAnyScanResults:(_Bool)arg1;
- (void)anyDiscoveredDevice:(id)arg1;
- (void)receivedTestResponse:(id)arg1;
- (void)registerWithDaemon:(id)arg1 forProcess:(id)arg2 machName:(id)arg3 shouldHoldVoucherForConnections:(_Bool)arg4;
- (void)enteredZone:(id)arg1 manufacturerData:(id)arg2;
- (void)exitedZone:(id)arg1;
- (void)addCharacteristic:(id)arg1 forService:(id)arg2;
- (void)startTrackingZone:(id)arg1;
- (void)stopTrackingZones:(id)arg1;
- (void)stopTrackingAllZones;
- (void)getAllTrackedZones;
- (void)getPowerLogStats:(CDUnknownBlockType)arg1;
- (void)dumpDaemonState;
- (void)sendDatatoLePipe:(id)arg1 forPeer:(id)arg2;
- (id)generateStateDump;
- (id)initWithXPCConnection:(id)arg1 server:(id)arg2;
- (void)notifyClientStateChange:(long long)arg1 Restricted:(_Bool)arg2;
- (void)checkEntitlements;
- (void)resumeCommunicationWithConnection:(id)arg1 andProcessID:(int)arg2;
- (void)sendRegisteredWithDaemonAndContinuingSession:(_Bool)arg1;
- (void)destroy_async;
- (void)endTestMode;
- (void)tickleMachPort;
- (void)startAdvertising_async:(id)arg1;
- (void)stopAdvertising_async:(id)arg1;
- (void)stopScans;
- (void)queueBlock:(CDUnknownBlockType)arg1;
- (void)cancelConnectionTimer:(id)arg1;
- (void)startScanning_async:(id)arg1;
- (void)stopScanning_async:(id)arg1;
- (void)disconnectedPeer:(id)arg1 error:(id)arg2;
- (id)getManager;
- (void)readyForDataTransfer;
- (id)xpcConnectionForClient;
- (void)discoveredDevice:(id)arg1;
- (void)discoveredDevices:(id)arg1;
- (void)createdConnection:(id)arg1;
- (id)connectionForUUID:(id)arg1;
- (void)receivedData:(id)arg1 fromCharacteristic:(id)arg2 inService:(id)arg3 forPeripheral:(id)arg4;

@end
