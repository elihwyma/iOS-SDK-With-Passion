/*
 Image: /System/Library/PrivateFrameworks/NetworkServiceProxy.framework/NetworkServiceProxy
 */

#import <Foundation/NSObject.h>

@class NPKeyBag, NPLocation, NPTuscanyEdge, NPWaldoLocationManager, NSArray, NSData, NSDate, NSDictionary, NSMutableDictionary, NSNumber, NSPNetworkAgent, NSString, NSURL, NSUUID, NWNetworkAgentRegistration;

@protocol NPWaldoDelegate, OS_dispatch_queue, OS_dispatch_source;

@interface NPWaldo : NSObject

{
    NSDictionary *_currentNetworkCharacteristics;
    NSArray *_edges;
    NSArray *_allOnRamps;
    _Bool _shouldSave;
    _Bool _reprocessPending;
    _Bool _daypassRefreshInProgress;
    _Bool _reprocessCancelled;
    unsigned int _generation;
    NSString *_identifier;
    long long _source;
    NSNumber *_timestamp;
    NSNumber *_version;
    NSString *_dayPassHostname;
    NSNumber *_dayPassHostnamePrependLabel;
    NSNumber *_dayPassPort;
    NSNumber *_dayPassRequestTimeout;
    NSString *_dayPassLeafOID;
    NSNumber *_dayPassRevocationFailClosed;
    NSNumber *_dayPassExtendedValidation;
    NSNumber *_dayPassEnableSessionTicket;
    NSArray *_dayPassSoftExpiry;
    NSNumber *_enableLatencyDerivation;
    NSNumber *_latencyFactorA;
    NSNumber *_latencyFactorB;
    NSNumber *_latencyFactorX;
    NSNumber *_edgeFairnessFactor;
    NSNumber *_locationCheckInterval;
    NSNumber *_locationTTL;
    NSNumber *_locationToleranceDistance;
    NSNumber *_viewSize;
    NSNumber *_probePause;
    NSNumber *_probeTFO;
    NSNumber *_probeNoTFOCookie;
    NSNumber *_probeTimeout;
    NSNumber *_probeUseTFOHeuristics;
    NSNumber *_retryPause;
    NSNumber *_signatureLimit;
    NSNumber *_observedRTTSampleSize;
    NSNumber *_reprocessSamplingInterval;
    NSNumber *_reprocessSampleSize;
    NSNumber *_connectionIdleTimeoutMaximum;
    NSString *_tag;
    NSURL *_telemetryURL;
    NSString *_telemetryService;
    NSNumber *_useGeohashFromServer;
    NSNumber *_edgeSelectionEnabled;
    NSNumber *_edgeSelectionAlpha;
    NSNumber *_edgeSelectionWindowSize;
    NSNumber *_enableIPv6;
    NSNumber *_requireTFO;
    NSNumber *_TFOLeeway;
    NSNumber *_edgesGeneration;
    NSNumber *_usedEdgesGeneration;
    long long _currentEdgeIndex;
    NSString *_hostname;
    id <NPWaldoDelegate> _delegate;
    NPLocation *_cachedLocation;
    NSDate *_locationCheckTimestamp;
    NSDate *_locationExpiration;
    NPWaldo *_defaults;
    NSPNetworkAgent *_agent;
    NPKeyBag *_keybag;
    NPWaldoLocationManager *_locationManager;
    NSMutableDictionary *_networkInformation;
    NSArray *_currentEdges;
    NPTuscanyEdge *_nextEdge;
    NSObject<OS_dispatch_source> *_reprocessSamplingTimer;
    NWNetworkAgentRegistration *_agentRegistration;
    NSUUID *_configurationIdentifier;
    NSObject<OS_dispatch_queue> *_reprocessQueue;
    NSData *_updateHash;
}

@property (retain) NSMutableDictionary *networkInformation;
@property (retain) NSArray *allOnRamps;
@property _Bool daypassRefreshInProgress;
@property (readonly) NSArray *currentEdges;
@property long long currentEdgeIndex;
@property (readonly) NPTuscanyEdge *nextEdge;
@property (readonly) NSArray *currentEdgeList;
@property _Bool reprocessCancelled;
@property unsigned int generation;
@property (retain) NSObject<OS_dispatch_source> *reprocessSamplingTimer;
@property (retain) NWNetworkAgentRegistration *agentRegistration;
@property (retain) NSUUID *configurationIdentifier;
@property (readonly) NSObject<OS_dispatch_queue> *reprocessQueue;
@property (readonly) CDUnknownBlockType latencyComparator;
@property (retain) NSData *updateHash;
@property _Bool reResolve;
@property (readonly) NSString *identifier;
@property (readonly) long long source;
@property (copy) NSNumber *timestamp;
@property (copy) NSNumber *version;
@property (copy) NSString *dayPassHostname;
@property (copy) NSNumber *dayPassHostnamePrependLabel;
@property (copy) NSNumber *dayPassPort;
@property (copy) NSNumber *dayPassRequestTimeout;
@property (copy) NSString *dayPassLeafOID;
@property (copy) NSNumber *dayPassRevocationFailClosed;
@property (copy) NSNumber *dayPassExtendedValidation;
@property (copy) NSNumber *dayPassEnableSessionTicket;
@property (copy) NSArray *dayPassSoftExpiry;
@property (copy) NSNumber *enableLatencyDerivation;
@property (copy) NSNumber *latencyFactorA;
@property (copy) NSNumber *latencyFactorB;
@property (copy) NSNumber *latencyFactorX;
@property (copy) NSNumber *edgeFairnessFactor;
@property (copy) NSNumber *locationCheckInterval;
@property (copy) NSNumber *locationTTL;
@property (copy) NSNumber *locationToleranceDistance;
@property (copy) NSNumber *viewSize;
@property (copy) NSNumber *probePause;
@property (copy) NSNumber *probeTFO;
@property (copy) NSNumber *probeNoTFOCookie;
@property (copy) NSNumber *probeTimeout;
@property (copy) NSNumber *probeUseTFOHeuristics;
@property (copy) NSNumber *retryPause;
@property (copy) NSNumber *signatureLimit;
@property (copy) NSNumber *observedRTTSampleSize;
@property (copy) NSNumber *reprocessSamplingInterval;
@property (copy) NSNumber *reprocessSampleSize;
@property (copy) NSNumber *connectionIdleTimeoutMaximum;
@property (copy) NSString *tag;
@property (copy) NSURL *telemetryURL;
@property (copy) NSString *telemetryService;
@property (copy) NSNumber *useGeohashFromServer;
@property (copy) NSNumber *edgeSelectionEnabled;
@property (copy) NSNumber *edgeSelectionAlpha;
@property (copy) NSNumber *edgeSelectionWindowSize;
@property (copy) NSNumber *enableIPv6;
@property (copy) NSArray *edges;
@property (copy) NSNumber *requireTFO;
@property (copy) NSNumber *TFOLeeway;
@property (readonly) _Bool isIPv6Enabled;
@property (copy) NSNumber *edgesGeneration;
@property (copy) NSNumber *usedEdgesGeneration;
@property (readonly) NPTuscanyEdge *currentEdge;
@property (readonly) unsigned long long edgeCount;
@property (readonly) _Bool hasEdges;
@property (readonly) long long dayPassFetchCount;
@property (readonly) NSDate *currentNetworkLastUsed;
@property (retain) NSString *hostname;
@property (weak) id <NPWaldoDelegate> delegate;
@property _Bool shouldSave;
@property (readonly) NSDate *expirationDate;
@property (readonly) unsigned long long probeSize;
@property (retain) NPLocation *cachedLocation;
@property (retain) NSDate *locationCheckTimestamp;
@property (retain) NSDate *locationExpiration;
@property (retain) NPWaldo *defaults;
@property (retain) NSPNetworkAgent *agent;
@property (retain) NPKeyBag *keybag;
@property (retain) NPWaldoLocationManager *locationManager;
@property _Bool reprocessPending;

+ (_Bool)supportsSecureCoding;
+ (id)createEndpointFromHostList:(id)arg1 defaultPortString:(id)arg2 allowIPv6:(_Bool)arg3;

- (id)init;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)link;
- (void)resolveWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)removeFromKeychain;
- (id)currentNetworkInfo;
- (id)initWithIdentifier:(id)arg1 timestamp:(id)arg2 fromDictionary:(id)arg3 source:(long long)arg4;
- (void)saveToKeychain;
- (void)logEdgeList:(id)arg1 debug:(_Bool)arg2 toStdout:(_Bool)arg3;
- (void)reprocessAdHocWithEdgeIndex:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)updateEdgeSelection:(unsigned long long)arg1;
- (id)copyEdgeSelectionTelemetry;
- (void)teardownNetworkAgent;
- (id)onRampForIndex:(id)arg1;
- (void)rebuildLatencyMapAllSignatures:(_Bool)arg1;
- (void)linkAllSignatures:(_Bool)arg1;
- (void)linkLatenciesAllSignatures:(_Bool)arg1;
- (long long)indexOfBestEdge;
- (id)edgeAtIndex:(long long)arg1;
- (void)ageOutLatencyMap;
- (_Bool)isLatenciesCompleteForNetwork:(id)arg1;
- (void)refreshDayPassesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)pushKeybagToKernel;
- (void)reprocessWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)pushKeybagToKernelCanReuse:(_Bool)arg1;
- (void)updateNetworkAgentWithKeybag:(id)arg1 networkInfo:(id)arg2;
- (_Bool)isEndpointProbed:(id)arg1 parameters:(struct networkParameters *)arg2 latencies:(id)arg3 checkSampleSize:(_Bool)arg4 incompleteLatency:(id *)arg5;
- (void)cleanupStaleKeys;
- (_Bool)reprocessWithNewRTT:(unsigned long long)arg1 reProbe:(_Bool *)arg2;
- (_Bool)shouldPerformDayPassRefresh;
- (void)updateMetaDataNeedProbe:(_Bool)arg1 refresh:(_Bool)arg2 push:(_Bool)arg3 minRTT:(unsigned long long)arg4;
- (void)cancelProbes;
- (void)timestampNetworkSignature:(id)arg1;
- (void)mergeEdgeList:(id)arg1 forNetworkSignature:(id)arg2;
- (void)loadObservedRTTSamples:(id)arg1;
- (void)reprocessEdgeAtIndex:(unsigned long long)arg1 networkSignature:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)createEdgeLatenciesToProbeWithEdgeIndex:(unsigned long long)arg1 startSampleCount:(unsigned long long *)arg2;
- (void)reprocessLatencies:(id)arg1 sampleCount:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (long long)getFallbackReasonForLatencies:(id)arg1;
- (void)startProbingEdges:(id)arg1 atIndex:(unsigned long long)arg2 doneCount:(unsigned long long)arg3 sampleCount:(unsigned long long)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (_Bool)validateEdgeList:(id)arg1;
- (void)resortEdgeListForCurrentNetworkSignature;
- (void)getDayPassRTT;
- (id)copyEdgeList:(id)arg1;
- (id)copyEdgeListRTTAverage:(id)arg1 observed:(_Bool)arg2 shortDescription:(_Bool)arg3;
- (void)merge:(id)arg1 missingSettingsOnly:(_Bool)arg2;
- (id)initFromKeychainWithIdentifier:(id)arg1;
- (void)establishTrustWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)pushKeybagToKernelUpdateGeneration:(_Bool)arg1;
- (void)removeDayPassesFromKernel;
- (void)handleUsageReport:(id)arg1;
- (void)setCurrentNetworkCharacteristics:(id)arg1;
- (long long)getCurrentNetworkInterfaceType;
- (void)initializeEdgeSelection;
- (_Bool)shouldFetchWaldo;
- (void)logLatencyInfoToStdout:(_Bool)arg1 logAll:(_Bool)arg2 logEdgeSelection:(_Bool)arg3;
- (id)copyLatencyInfoDictionary:(_Bool)arg1 copyAll:(_Bool)arg2;
- (id)edgeContainingOnRamp:(id)arg1;
- (id)copyStateIncludeDistance:(_Bool)arg1;
- (void)incrementSessionCounters;

@end
