/*
 Image: /System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
 */

#import <MediaRemote/MRExternalDevice.h>

@class CURunLoopThread, MRExternalClientConnection, MRExternalDeviceTransport, NSData, NSDate, NSDictionary, NSObject, NSRunLoop, NSString, _MRContentItemProtobuf, _MRDeviceInfoMessageProtobuf, _MRNowPlayingPlayerPathProtobuf, _MROriginProtobuf;

@protocol OS_dispatch_queue, OS_os_transaction;

@interface MRTransportExternalDevice : MRExternalDevice

{
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSObject<OS_dispatch_queue> *_workerQueue;
    NSObject<OS_dispatch_queue> *_notificationQueue;
    CURunLoopThread *_runLoopThread;
    _Bool _wantsNowPlayingNotifications;
    _Bool _wantsNowPlayingArtworkNotifications;
    _Bool _wantsVolumeNotifications;
    _Bool _wantsOutputDeviceNotifications;
    _Bool _usingSystemPairing;
    NSDate *_connectionStateTimestamp;
    unsigned int _connectionState;
    unsigned int _connectionOptions;
    long long _cachedServerDisconnectError;
    unsigned long long _reconnectionAttemptCount;
    _Bool _forceReconnectOnConnectionFailure;
    _Bool _disconnecting;
    _Bool _isClientSyncActive;
    NSObject<OS_os_transaction> *_transaction;
    _Bool _isCallingClientCallback;
    MRExternalClientConnection *_clientConnection;
    _MROriginProtobuf *_customOrigin;
    _MRDeviceInfoMessageProtobuf *_deviceInfo;
    _MRNowPlayingPlayerPathProtobuf *_playerPath;
    NSDictionary *_nowPlayingInfo;
    NSData *_nowPlayingArtwork;
    _MRContentItemProtobuf *_nowPlayingItem;
    MRExternalDeviceTransport *_transport;
    long long _connectionRecoveryBehavior;
    CDUnknownBlockType _pairingCallback;
    NSObject<OS_dispatch_queue> *_pairingCallbackQueue;
    CDUnknownBlockType _connectionStateCallback;
    NSObject<OS_dispatch_queue> *_connectionStateCallbackQueue;
    CDUnknownBlockType _nameCallback;
    NSObject<OS_dispatch_queue> *_nameCallbackQueue;
    CDUnknownBlockType _pairingAllowedCallback;
    NSObject<OS_dispatch_queue> *_pairingAllowedCallbackQueue;
    CDUnknownBlockType _customDataCallback;
    NSObject<OS_dispatch_queue> *_customDataCallbackQueue;
    CDUnknownBlockType _outputDevicesUpdatedCallback;
    NSObject<OS_dispatch_queue> *_outputDevicesUpdatedCallbackQueue;
    CDUnknownBlockType _outputDevicesRemovedCallback;
    NSObject<OS_dispatch_queue> *_outputDevicesRemovedCallbackQueue;
    CDUnknownBlockType _volumeCallback;
    NSObject<OS_dispatch_queue> *_volumeCallbackQueue;
    CDUnknownBlockType _volumeControlCapabilitiesCallback;
    NSObject<OS_dispatch_queue> *_volumeControlCapabilitiesCallbackQueue;
    NSObject<OS_dispatch_queue> *_outputContextCallbackQueue;
    NSRunLoop *_runLoop;
}

@property (retain, nonatomic) MRExternalClientConnection *clientConnection;
@property (retain, nonatomic) _MROriginProtobuf *customOrigin;
@property (retain, nonatomic) _MRDeviceInfoMessageProtobuf *deviceInfo;
@property (retain, nonatomic) NSData *nowPlayingArtwork;
@property (retain, nonatomic) NSDictionary *nowPlayingInfo;
@property (retain, nonatomic) _MRContentItemProtobuf *nowPlayingItem;
@property (retain, nonatomic) _MRNowPlayingPlayerPathProtobuf *playerPath;
@property (copy, nonatomic) CDUnknownBlockType pairingCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *pairingCallbackQueue;
@property (copy, nonatomic) CDUnknownBlockType connectionStateCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *connectionStateCallbackQueue;
@property (copy, nonatomic) CDUnknownBlockType nameCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *nameCallbackQueue;
@property (copy, nonatomic) CDUnknownBlockType pairingAllowedCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *pairingAllowedCallbackQueue;
@property (copy, nonatomic) CDUnknownBlockType customDataCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *customDataCallbackQueue;
@property (copy, nonatomic) CDUnknownBlockType outputDevicesUpdatedCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *outputDevicesUpdatedCallbackQueue;
@property (copy, nonatomic) CDUnknownBlockType outputDevicesRemovedCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *outputDevicesRemovedCallbackQueue;
@property (copy, nonatomic) CDUnknownBlockType volumeCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *volumeCallbackQueue;
@property (copy, nonatomic) CDUnknownBlockType volumeControlCapabilitiesCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *volumeControlCapabilitiesCallbackQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *outputContextCallbackQueue;
@property (retain, nonatomic) NSRunLoop *runLoop;
@property (nonatomic, readonly) MRExternalDeviceTransport *transport;
@property (nonatomic) long long connectionRecoveryBehavior;
@property (nonatomic) _Bool isCallingClientCallback;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;

- (id)init;
- (void)dealloc;
- (id)name;
- (_Bool)isValid;
- (long long)port;
- (void)setName:(id)arg1;
- (id)hostName;
- (unsigned int)connectionState;
- (id)initWithTransport:(id)arg1;
- (_Bool)isPaired;
- (void)disconnect:(id)arg1;
- (void)outputDeviceVolume:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)supportedMessages;
- (void)setUsingSystemPairing:(_Bool)arg1;
- (void)connectWithOptions:(unsigned int)arg1;
- (void)unpair;
- (void)sendCustomData:(id)arg1 withName:(id)arg2;
- (_Bool)wantsNowPlayingNotifications;
- (void)setWantsNowPlayingNotifications:(_Bool)arg1;
- (_Bool)wantsVolumeNotifications;
- (void)setWantsVolumeNotifications:(_Bool)arg1;
- (_Bool)wantsOutputDeviceNotifications;
- (void)setWantsOutputDeviceNotifications:(_Bool)arg1;
- (_Bool)isUsingSystemPairing;
- (void)setPairingCallback:(CDUnknownBlockType)arg1 withQueue:(id)arg2;
- (void)setConnectionStateCallback:(CDUnknownBlockType)arg1 withQueue:(id)arg2;
- (void)setNameCallback:(CDUnknownBlockType)arg1 withQueue:(id)arg2;
- (void)setPairingAllowedCallback:(CDUnknownBlockType)arg1 withQueue:(id)arg2;
- (void)setCustomDataCallback:(CDUnknownBlockType)arg1 withQueue:(id)arg2;
- (void)setVolumeCallback:(CDUnknownBlockType)arg1 withQueue:(id)arg2;
- (void)setOutputDeviceVolume:(float)arg1 outputDeviceUID:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)outputDeviceVolumeControlCapabilities:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)modifyOutputContextOfType:(unsigned int)arg1 addingDeviceUIDs:(id)arg2 removingDeviceUIDs:(id)arg3 settingDeviceUIDs:(id)arg4 withReplyQueue:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)ping:(double)arg1 callback:(CDUnknownBlockType)arg2 withQueue:(id)arg3;
- (void)sendButtonEvent:(struct _MRHIDButtonEvent)arg1;
- (void)sendClientUpdatesConfigMessage;
- (void)clientConnection:(id)arg1 didReceiveMessage:(id)arg2;
- (_Bool)wantsNowPlayingArtworkNotifications;
- (id)errorForCurrentState;
- (id)currentClientUpdatesConfigMessage;
- (void)setWantsNowPlayingArtworkNotifications:(_Bool)arg1;
- (void)_localDeviceInfoDidChangeNotification:(id)arg1;
- (void)_transportDeviceInfoDidChangeNotification:(id)arg1;
- (void)_contentItemUpdatedNotification:(id)arg1;
- (void)_handleDeviceInfoChange:(id)arg1 oldDevice:(id)arg2;
- (void)_cleanUpWithReason:(long long)arg1;
- (void)_onSerialQueue_registerOriginCallbacks;
- (void)_updateNowPlayingInfo;
- (void)_callClientConnectionStateCallback:(unsigned int)arg1 previousConnectionState:(unsigned int)arg2 error:(id)arg3;
- (void)_cleanUpStreamsWithReason:(long long)arg1;
- (id)_onWorkerQueue_initializeConnectionWithOptions:(unsigned int)arg1;
- (id)_onWorkerQueue_loadDeviceInfo;
- (id)_onWorkerQueue_openSecuritySession;
- (id)_onWorkerQueue_setupCustomOrigin;
- (id)_onWorkerQueue_reRegisterCustomOrigin;
- (id)_onWorkerQueue_syncClientState;
- (void)setConnectionState:(unsigned int)arg1 error:(id)arg2;
- (void)_onWorkerQueue_connectWithOptions:(unsigned int)arg1 isRetry:(_Bool)arg2;
- (void)_onSerialQueue_prepareToConnectWithOptions:(unsigned int)arg1;
- (void)_onWorkerQueue_disconnect:(id)arg1;
- (void)_onSerialQueue_prepareToDisconnect:(id)arg1;
- (void)sendClientUpdatesConfigMessageWithCompletion:(CDUnknownBlockType)arg1;
- (void)_handleCryptoPairingMessage:(id)arg1;
- (void)_handleSetStateMessage:(id)arg1;
- (void)_handleNotificationMessage:(id)arg1;
- (void)_handleSetArtworkMessage:(id)arg1;
- (void)_handleTransactionMessage:(id)arg1;
- (void)_handleDeviceInfoUpdateMessage:(id)arg1;
- (void)_handleSetConnectionStateMessage:(id)arg1;
- (void)_handleGenericMessage:(id)arg1;
- (void)_handleSetNowPlayingClientMessage:(id)arg1;
- (void)_handleSetNowPlayingPlayerMessage:(id)arg1;
- (void)_handleRemoveClientMessage:(id)arg1;
- (void)_handleRemovePlayerMessage:(id)arg1;
- (void)_handleUpdateClientMessage:(id)arg1;
- (void)_handleUpdateContentItemsMessage:(id)arg1;
- (void)_handleUpdateContentItemArtworkMessage:(id)arg1;
- (void)_handleUpdatePlayerMessage:(id)arg1;
- (void)_handlePromptForRouteAuthorizationMessage:(id)arg1;
- (void)_handlePresentRouteAuthorizationStatusMessage:(id)arg1;
- (void)_handleVolumeDidChangeMessage:(id)arg1;
- (void)_handleVolumeControlCapabilitiesDidChangeMessage:(id)arg1;
- (void)_handleLegacyVolumeControlCapabilitiesDidChangeMessage:(id)arg1;
- (void)_handleOutputDevicesUpdatedMessage:(id)arg1;
- (void)_handleOutputDevicesRemovedMessage:(id)arg1;
- (void)_handleSetDefaultSupportedCommandsMessage:(id)arg1;
- (void)_callClientPairingCallback:(CDUnknownBlockType)arg1;
- (void)_handleRemoteCommand:(unsigned int)arg1 withOptions:(id)arg2 playerPath:(void *)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_handlePlaybackQueueRequest:(void *)arg1 forPlayer:(void *)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_handlePlaybackSessionRequest:(void *)arg1 forPlayerPath:(void *)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_handlePlaybackSessionMigrateRequest:(id)arg1 request:(id)arg2 forPlayerPath:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_handlePlaybackSessionMigrateBeginRequest:(id)arg1 forPlayerPath:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_handlePlaybackSessionMigrateEndRequest:(id)arg1 error:(id)arg2 forPlayerPath:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_handleLegacyPlaybackQueueRequestWithCompletion:(CDUnknownBlockType)arg1;
- (void)_handlePlaybackQueueResponse:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)veirfyConnectionStatusAndMaybeDisconnect:(id)arg1;
- (id)_createPlaybackQueue:(_Bool)arg1;
- (void)_handleSetStateMessageModern:(id)arg1;
- (void)_handleSetStateMessageLegacy:(id)arg1;
- (void)_handleNotificationMessageModern:(id)arg1;
- (void)_handleNotificationMessageLegacy:(id)arg1;
- (void)_callOutputDevicesUpdatedCallbackWithOutputDevices:(id)arg1;
- (void)_callOutputDevicesRemovedCallbackWithOutputDeviceUIDs:(id)arg1;
- (void)_callVolumeCallback:(float)arg1 outputDeviceUID:(id)arg2;
- (void)_callVolumeControlCapabilitiesCallback:(unsigned int)arg1 outputDeviceUID:(id)arg2;
- (void)_callClientNameCallback;
- (void)_callClientAllowsPairingCallback;
- (void)_callClientCustomDataCallback:(id)arg1 name:(id)arg2;
- (void)clientDidDisconnect:(id)arg1;
- (void)setOutputDevicesUpdatedCallback:(CDUnknownBlockType)arg1 withQueue:(id)arg2;
- (void)setOutputDevicesRemovedCallback:(CDUnknownBlockType)arg1 withQueue:(id)arg2;
- (void)setVolumeControlCapabilitiesCallback:(CDUnknownBlockType)arg1 withQueue:(id)arg2;
- (void)removeFromParentGroup:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;

@end
