/*
 Image: /System/Library/PrivateFrameworks/TSReading.framework/TSReading
 */

#import <Foundation/NSObject.h>

#import <TSReading/Swift-Protocol.h>

@class NSIndexSet, NSLock, NSMutableArray, NSMutableSet, NSRecursiveLock, NSString, TSDFill, TSDInfoGeometry, TSDLayoutGeometry, TSKChangeNotifier, TSTCellRegion, TSTDupContentCache, TSTHiddenRowsColumnsCache, TSTLayout, TSTLayoutDynamicResizeInfo, TSTLayoutTask, TSTMergeRangeSortedSet, TSTTableInfo, TSTTableModel, TSTWPColumnCache, TSTWidthHeightCache, TSUColor, TSUReadWriteQueue, TSURetainedPointerKeyDictionary, TSWPEditingController;

@protocol OS_dispatch_group, OS_dispatch_semaphore, TSTLayoutDynamicColumnSwapProtocol, TSTLayoutDynamicContentProtocol, TSTLayoutDynamicRowSwapProtocol;

@interface TSTMasterLayout : NSObject <Swift>

{
    TSKChangeNotifier *mChangeNotifier;
    int mReferenceCount;
    TSTTableInfo *mTableInfo;
    TSTWPColumnCache *mCellIDToWPColumnCache;
    TSTDupContentCache *mDupContentCache;
    TSTWPColumnCache *mTempWPColumnCache;
    TSTWidthHeightCache *mWidthHeightCache;
    TSUReadWriteQueue *mWHCacheQueue;
    TSTHiddenRowsColumnsCache *mHiddenRowsColumnsCache;
    NSMutableArray *mChangeDescriptors;
    NSObject<OS_dispatch_group> *mLayoutInFlight;
    TSTLayoutTask *mCurrentLayoutTask;
    NSObject<OS_dispatch_semaphore> *mLayoutSemaphore;
    unsigned int mMaxConcurrentTasks;
    unsigned int mNumCellsPerTask;
    _Bool mHeaderColumnsFrozen;
    _Bool mHeaderRowsFrozen;
    _Bool mHeaderColumnsRepeat;
    _Bool mHeaderRowsRepeat;
    _Bool mTableNameEnabled;
    struct CGRect mTableNameBounds;
    double mCachedTableNameHeight;
    unsigned short mCachedNumberOfHeaderColumns;
    unsigned long long mCachedMaxNumberOfColumns;
    unsigned short mCachedNumberOfHeaderRows;
    unsigned short mCachedNumberOfFooterRows;
    unsigned long long mCachedMaxNumberOfRows;
    struct TSTTableStrokeDefaults *mDefaultStrokes;
    NSMutableArray *mTopRowStrokes;
    NSMutableArray *mBottomRowStrokes;
    NSMutableArray *mLeftColumnStrokes;
    NSMutableArray *mRightColumnStrokes;
    NSRecursiveLock *mStrokesLock;
    TSURetainedPointerKeyDictionary *mParaStyleToHeightCache;
    NSLock *mLock;
    _Bool mBandedFillIsValid;
    _Bool mUseBandedFill;
    TSDFill *mBandedFillObject;
    int mTableEnvironment;
    int mTableRowsBehavior;
    _Bool mTableDefaultFontHeightsAreValid;
    double mTableDefaultFontHeightForArea[4];
    _Bool mInDynamicLayoutMode;
    NSMutableSet *mDynamicLayouts;
    double mDynamicAddOrRemoveColumnElementSize;
    double mDynamicAddOrRemoveRowElementSize;
    _Bool mDynamicBandedFill;
    _Bool mDynamicBandedFillSetting;
    int mDynamicColumnAdjustment;
    id <TSTLayoutDynamicColumnSwapProtocol> mDynamicColumnSwapDelegate;
    double mDynamicColumnTabSize;
    id <TSTLayoutDynamicContentProtocol> mDynamicContentDelegate;
    TSUColor *mDynamicFontColor;
    CDStruct_5f1f7aa9 mDynamicFontColorCellRange;
    CDStruct_5f1f7aa9 mDynamicHidingRowsCols;
    int mDynamicHidingRowsColsDirection;
    CDStruct_5f1f7aa9 mDynamicHidingContent;
    CDStruct_5f1f7aa9 mDynamicHidingText;
    TSDInfoGeometry *mDynamicInfoGeometry;
    _Bool mDynamicRepResize;
    _Bool mDynamicRepressFrozenHeader;
    _Bool mDynamicResizingColumns;
    CDStruct_5f1f7aa9 mDynamicResizingColumnRange;
    double mDynamicResizingColumnAdjustment;
    _Bool mDynamicResizingRows;
    CDStruct_5f1f7aa9 mDynamicResizingRowRange;
    double mDynamicResizingRowAdjustment;
    CDStruct_5f1f7aa9 mDynamicRevealingRowsCols;
    int mDynamicRevealingRowsColsDirection;
    int mDynamicRowAdjustment;
    id <TSTLayoutDynamicRowSwapProtocol> mDynamicRowSwapDelegate;
    double mDynamicRowTabSize;
    TSDLayoutGeometry *mDynamicSavedLayoutGeometry;
    TSTCellRegion *mDynamicSelectionRegion;
    double mDynamicWidthResize;
    double mDynamicHeightResize;
    double mDynamicTableNameResize;
    TSTLayoutDynamicResizeInfo *mDynamicResizeInfo;
    CDStruct_0441cfb5 mDynamicSuppressingConditionalStylesCellID;
    TSWPEditingController *mContainedTextEditor;
    TSTMergeRangeSortedSet *mMergeRanges;
    _Bool mProcessHiddenRowsForExport;
    _Bool mEmptyFilteredTable;
    struct CGSize mMaximumPartitionSize;
}

@property (nonatomic) TSTTableInfo *tableInfo;
@property (nonatomic, readonly) TSTTableModel *tableModel;
@property (nonatomic, readonly) TSTWPColumnCache *cellIDToWPColumnCache;
@property (nonatomic, readonly) TSTDupContentCache *dupContentCache;
@property (nonatomic, readonly) TSTWPColumnCache *tempWPColumnCache;
@property (nonatomic, readonly) TSUReadWriteQueue *whCacheQueue;
@property (nonatomic, readonly) TSTWidthHeightCache *widthHeightCache;
@property (nonatomic, readonly) TSTHiddenRowsColumnsCache *hiddenRowsColumnsCache;
@property (nonatomic) unsigned int maxConcurrentTasks;
@property (nonatomic) unsigned int numCellsPerTask;
@property (nonatomic, readonly) _Bool useBandedFill;
@property (nonatomic, readonly) TSDFill *bandedFillObject;
@property (nonatomic) int tableEnvironment;
@property (nonatomic, readonly) int tableRowsBehavior;
@property (nonatomic, readonly) _Bool inDynamicLayoutMode;
@property (nonatomic, readonly) NSMutableSet *dynamicLayouts;
@property (nonatomic, readonly) TSTLayout *dynamicLayout;
@property (nonatomic, readonly) double dynamicAddOrRemoveColumnElementSize;
@property (nonatomic, readonly) double dynamicAddOrRemoveRowElementSize;
@property (nonatomic, readonly) _Bool dynamicBandedFill;
@property (nonatomic, readonly) _Bool dynamicBandedFillSetting;
@property (nonatomic, readonly) int dynamicColumnAdjustment;
@property (nonatomic, readonly) id <TSTLayoutDynamicColumnSwapProtocol> dynamicColumnSwapDelegate;
@property (nonatomic, readonly) double dynamicColumnTabSize;
@property (nonatomic, readonly) id <TSTLayoutDynamicContentProtocol> dynamicContentDelegate;
@property (nonatomic, readonly) TSUColor *dynamicFontColor;
@property (nonatomic, readonly) CDStruct_5f1f7aa9 dynamicFontColorCellRange;
@property (nonatomic) _Bool dynamicRepResize;
@property (nonatomic, readonly) TSDInfoGeometry *dynamicInfoGeometry;
@property (nonatomic) double dynamicWidthResize;
@property (nonatomic) double dynamicHeightResize;
@property (nonatomic, readonly) _Bool dynamicResizingColumns;
@property (nonatomic, readonly) CDStruct_5f1f7aa9 dynamicResizingColumnRange;
@property (nonatomic, readonly) double dynamicResizingColumnAdjustment;
@property (nonatomic, readonly) _Bool dynamicResizingRows;
@property (nonatomic, readonly) CDStruct_5f1f7aa9 dynamicResizingRowRange;
@property (nonatomic, readonly) double dynamicResizingRowAdjustment;
@property (nonatomic, readonly) int dynamicRowAdjustment;
@property (nonatomic, readonly) id <TSTLayoutDynamicRowSwapProtocol> dynamicRowSwapDelegate;
@property (nonatomic, readonly) double dynamicRowTabSize;
@property (copy, nonatomic) TSDLayoutGeometry *dynamicSavedLayoutGeometry;
@property (nonatomic, readonly) TSTCellRegion *dynamicSelectionRegion;
@property (nonatomic, readonly) double dynamicTableNameResize;
@property (nonatomic, readonly) CDStruct_0441cfb5 dynamicSuppressingConditionalStylesCellID;
@property (nonatomic, readonly) _Bool emptyFilteredTable;
@property (nonatomic) TSWPEditingController *containedTextEditor;
@property (nonatomic, readonly) NSMutableArray *changeDescriptors;
@property (nonatomic, readonly) _Bool isGrouped;
@property (retain, nonatomic) TSTMergeRangeSortedSet *mergeRanges;
@property (retain, nonatomic) TSKChangeNotifier *changeNotifier;
@property (nonatomic) _Bool processHiddenRowsForExport;
@property (nonatomic) struct CGSize maximumPartitionSize;
@property (nonatomic, readonly) NSIndexSet *visibleRowIndices;
@property (nonatomic, readonly) NSIndexSet *visibleColumnIndices;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy, readonly) NSString *description;
@property (copy, readonly) NSString *debugDescription;

+ (id)tableNameTextEngine:(id)arg1;
+ (struct CGSize)tableNameTextSize:(id)arg1;
+ (double)effectiveTableNameHeightForModel:(id)arg1;

- (void)dealloc;
- (id)initWithInfo:(id)arg1;
- (void)validate;
- (void)syncProcessChanges:(id)arg1 forChangeSource:(id)arg2;
- (_Bool)isDynamicallyChangingSelection;
- (void)beginDynamicMode:(id)arg1;
- (void)updateDynamicRepressFrozenHeader:(_Bool)arg1;
- (void)endDynamicMode;
- (_Bool)isDynamicallyResizingTableName;
- (id)tableNameTextEngine;
- (_Bool)isDynamicallySwappingColumns;
- (_Bool)isDynamicallySwappingRows;
- (CDStruct_0441cfb5)modelCellIDForLayoutCellID:(CDStruct_0441cfb5)arg1;
- (CDStruct_0441cfb5)layoutCellIDForModelCellID:(CDStruct_0441cfb5)arg1;
- (unsigned int)tableAreaForCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallyChangingContent;
- (_Bool)cell:(id *)arg1 forCellID:(CDStruct_0441cfb5)arg2;
- (_Bool)shouldRowUseBandedFill:(unsigned short)arg1;
- (_Bool)isDynamicallyHidingRowsCols;
- (_Bool)isDynamicallyHidingRowsColsCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallyResizingCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallyHidingContentOfCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallyHidingTextOfCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallyChangingFontColorOfCellID:(CDStruct_0441cfb5)arg1;
- (id)validateCellForDrawing:(CDStruct_0441cfb5)arg1 cell:(id)arg2 contents:(id)arg3 wrap:(_Bool)arg4 verticalAlignment:(unsigned int)arg5 padding:(id)arg6 layoutCacheFlags:(int)arg7 pageNumber:(unsigned long long)arg8 pageCount:(unsigned long long)arg9;
- (id)newTextEngineForCell:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2;
- (_Bool)isDynamicallyChangingRowCount;
- (double)tableNameHeight;
- (id)accountingParagraphStylePropertyMapForCell:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2;
- (void)addChangeDescriptorWithType:(int)arg1 andCellRange:(CDStruct_5f1f7aa9)arg2;
- (void)validateLayoutHint:(id)arg1;
- (_Bool)isDynamicallyRepressingFrozenHeaders;
- (double)calculatedTableNameHeight;
- (double)calculatedTableNameHeightIncludingDynamicResize:(_Bool)arg1;
- (_Bool)isDynamicallyChangingRowOrColumnCount;
- (_Bool)isDynamicallyResizing:(int)arg1 rowColIndex:(unsigned short)arg2;
- (struct UIEdgeInsets)defaultPaddingForCellID:(CDStruct_0441cfb5)arg1;
- (struct UIEdgeInsets)paddingForCellID:(CDStruct_0441cfb5)arg1;
- (double)fontHeightOfParagraphStyle:(id)arg1;
- (void)invalidateBandedFill;
- (CDStruct_0441cfb5)modelCellIDForStrokesOfLayoutCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallySettingBandedFill;
- (void)measureTextForLayoutState:(id)arg1;
- (_Bool)updateDynamicChangeRowOrColumnCount:(int)arg1 count:(int)arg2 newlyAddedElementSize:(double)arg3;
- (void)p_cancelDynamicRowColCountChanges;
- (void)updateDynamicHidingRowsCols:(int)arg1 hidingCellRange:(CDStruct_5f1f7aa9)arg2;
- (void)cancelDynamicModeChanges;
- (_Bool)isDynamicallyChangingColumnCount;
- (_Bool)isDynamicallyRevealingRowsCols:(int)arg1 rowColIndex:(unsigned short)arg2;
- (_Bool)isDynamicallyHidingRowsCols:(int)arg1 rowColIndex:(unsigned short)arg2;
- (void)addChangeDescriptorWithType:(int)arg1 andCellRange:(CDStruct_5f1f7aa9)arg2 andStrokeRange:(CDStruct_5f1f7aa9)arg3;
- (void)addChangeDescriptor:(id)arg1;
- (void)p_processChange:(id)arg1 forChangeSource:(id)arg2;
- (void)validateBandedFill;
- (void)validateTableRowsBehavior;
- (void)validateDynamicResizeInfo;
- (void)validateChangeDescriptorQueue;
- (void)invalidateTableNameHeight;
- (void)invalidateDefaultFontHeights;
- (void)validateRowVisibility:(id)arg1;
- (void)validateMasterLayoutForChangeDescriptors:(id)arg1;
- (void)validateDefaultFontHeights;
- (id)regionForStrokeValidationFromChangeDescriptors:(id)arg1;
- (id)validateFittingInfoForChangeDescriptors:(id)arg1 rowsNeedingFittingInfo:(id)arg2;
- (void)validateStrokesForRegion:(id)arg1 regionAlreadyValidated:(id)arg2;
- (void)processLayoutTask:(id)arg1;
- (void)waitForLayoutToComplete;
- (void)updateWHCForMergeRanges;
- (struct UIEdgeInsets)edgeInsetsFromPadding:(id)arg1;
- (void)queueCellForValidation:(CDStruct_5f1f7aa9)arg1 cell:(id)arg2 mergeRange:(CDStruct_5f1f7aa9)arg3 wrap:(_Bool)arg4 verticalAlignment:(unsigned int)arg5 padding:(id)arg6 prop:(_Bool)arg7 layoutCacheFlags:(int)arg8;
- (void)p_validateFittingInfoForCellID:(CDStruct_0441cfb5)arg1 inMergeRange:(CDStruct_5f1f7aa9)arg2;
- (CDStruct_0441cfb5)p_validateFittingInfoForEmptyCellsBetween:(CDStruct_0441cfb5)arg1 andCellID:(CDStruct_0441cfb5)arg2 inRange:(CDStruct_5f1f7aa9)arg3;
- (void)validateFittingInfoForCell:(id)arg1 cellID:(CDStruct_0441cfb5)arg2 mergeRange:(CDStruct_5f1f7aa9)arg3 setFitting:(_Bool)arg4;
- (void)p_validateFittingInfoForEmptyCellsOnSingleRowBetween:(CDStruct_0441cfb5)arg1 andEndCellID:(CDStruct_0441cfb5)arg2;
- (void)validateFittingInfoWithCellRange:(CDStruct_5f1f7aa9)arg1;
- (id)newLayoutHint;
- (_Bool)hintIsValid:(id)arg1;
- (void)resetModelHeightWidthCache;
- (void)clearModelHeightWidthCacheForCellRange:(CDStruct_5f1f7aa9)arg1;
- (struct CGSize)tableNameTextSize;
- (void)calculateRawTableSize:(struct CGSize *)arg1 andStrokeDelta:(struct CGSize *)arg2;
- (void)addDynamicLayoutBeginIfNecessary:(id)arg1;
- (void)removeDynamicLayoutEndIfNecessary:(id)arg1;
- (_Bool)isDynamicallyResizing:(int)arg1;
- (_Bool)isDynamicallyChangingInfoGeometry;
- (void)updateDynamicResize:(int)arg1 resizingRange:(CDStruct_5f1f7aa9)arg2 resizeAdjustment:(double)arg3;
- (_Bool)isDynamicallyRevealingRowsCols;
- (void)updateDynamicTableNameSize:(double)arg1;
- (void)updateDynamicSelectionRegion:(id)arg1;
- (_Bool)isDynamicallyColumnTabResizing;
- (_Bool)isDynamicallyRowTabResizing;
- (void)updateDynamicColumnTabSize:(double)arg1;
- (void)updateDynamicRowTabSize:(double)arg1;
- (void)updateDynamicBandedFill:(_Bool)arg1 setting:(_Bool)arg2;
- (void)updateDynamicHidingContent:(CDStruct_5f1f7aa9)arg1;
- (void)updateDynamicHidingText:(CDStruct_5f1f7aa9)arg1;
- (void)updateDynamicInfoGeometry:(id)arg1;
- (void)updateDynamicRevealingRowsCols:(int)arg1 revealingCellRange:(CDStruct_5f1f7aa9)arg2;
- (void)updateDynamicContentDelegate:(id)arg1;
- (void)updateDynamicFontColor:(id)arg1 andRange:(CDStruct_5f1f7aa9)arg2;
- (void)updateDynamicRowSwapDelegate:(id)arg1;
- (void)updateDynamicColumnSwapDelegate:(id)arg1;
- (void)updateDynamicSuppressingConditionalStylesCellID:(CDStruct_0441cfb5)arg1;
- (void)captureDynamicResizeInfo;
- (void)updateDynamicResizeInfo:(id)arg1;
- (void)invalidateDynamicResizeInfo;
- (void)willBeAddedToDocumentRoot:(id)arg1;
- (void)wasRemovedFromDocumentRoot;
- (void)validateFittingWidthsForRegion:(id)arg1;

@end
